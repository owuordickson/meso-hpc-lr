Data fetched from CSV file
Run-time: 3.972154140472412 seconds
Total allocated memory size: 205.2 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 10
No. of (dataset) tuples: 116
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 20
Number of iterations: 100

0. Age
1. BMI
2. Glucose
3. Insulin
4. HOMA
5. Leptin
6. Adiponectin
7. Resistin
8. MCP.1
9. Classification

File: data/breast_cancer.csv

Pattern : Support
['6-', '4+'] : 0.528
['5+', '8+'] : 0.53
['7-', '4-'] : 0.543
['2+', '4+'] : 0.697
['2+', '7+'] : 0.52
['8-', '1-'] : 0.587
['7-', '5-'] : 0.548
['5+', '3+'] : 0.659
['2+', '5+'] : 0.562
['7-', '6+'] : 0.593
['4+', '3+', '5+'] : 0.629
['8-', '4-', '3-'] : 0.505
['6-', '3+'] : 0.527
['2+', '3+', '4+'] : 0.637
['6-', '8+'] : 0.575
['4+', '7+', '3+'] : 0.516
['7-', '1-'] : 0.561
['8-', '7-'] : 0.672
['5+', '3+', '1+'] : 0.502
['6-', '5+'] : 0.532


Iterations 
Iteration 0: Best Cost: 1.89 
Iteration 1: Best Cost: 1.89 
Iteration 2: Best Cost: 1.89 
Iteration 3: Best Cost: 1.84 
Iteration 4: Best Cost: 1.43 
Iteration 5: Best Cost: 1.43 
Iteration 6: Best Cost: 1.92 
Iteration 7: Best Cost: 1.7 
Iteration 8: Best Cost: 1.7 
Iteration 9: Best Cost: 1.82 
Iteration 10: Best Cost: 1.52 
Iteration 11: Best Cost: 1.78 
Iteration 12: Best Cost: 1.69 
Iteration 13: Best Cost: 1.59 
Iteration 14: Best Cost: 1.59 
Iteration 15: Best Cost: 1.98 
Iteration 16: Best Cost: 1.9 
Iteration 17: Best Cost: 1.9 
Iteration 18: Best Cost: 1.57 
Iteration 19: Best Cost: 1.57 
Iteration 20: Best Cost: 1.57 
Iteration 21: Best Cost: 1.74 
Iteration 22: Best Cost: 1.74 
Iteration 23: Best Cost: 1.74 
Iteration 24: Best Cost: 1.74 
Iteration 25: Best Cost: 1.94 
Iteration 26: Best Cost: 1.94 
Iteration 27: Best Cost: 1.94 
Iteration 28: Best Cost: 1.78 
Iteration 29: Best Cost: 1.78 
Iteration 30: Best Cost: 1.78 
Iteration 31: Best Cost: 1.78 
Iteration 32: Best Cost: 1.78 
Iteration 33: Best Cost: 1.78 
Iteration 34: Best Cost: 1.78 
Iteration 35: Best Cost: 1.78 
Iteration 36: Best Cost: 1.78 
Iteration 37: Best Cost: 1.78 
Iteration 38: Best Cost: 1.78 
Iteration 39: Best Cost: 1.78 
Iteration 40: Best Cost: 1.49 
Iteration 41: Best Cost: 1.49 
Iteration 42: Best Cost: 1.49 
Iteration 43: Best Cost: 1.49 
Iteration 44: Best Cost: 1.49 
Iteration 45: Best Cost: 1.49 
Iteration 46: Best Cost: 1.49 
Iteration 47: Best Cost: 1.49 
Iteration 48: Best Cost: 1.49 
Iteration 49: Best Cost: 1.49 
Iteration 50: Best Cost: 1.49 
Iteration 51: Best Cost: 1.49 
Iteration 52: Best Cost: 1.49 
Iteration 53: Best Cost: 1.49 
Iteration 54: Best Cost: 1.49 
Iteration 55: Best Cost: 1.49 
Iteration 56: Best Cost: 1.49 
Iteration 57: Best Cost: 1.49 
Iteration 58: Best Cost: 1.49 
Iteration 59: Best Cost: 1.49 
Iteration 60: Best Cost: 1.49 
Iteration 61: Best Cost: 1.49 
Iteration 62: Best Cost: 1.49 
Iteration 63: Best Cost: 1.49 
Iteration 64: Best Cost: 1.49 
Iteration 65: Best Cost: 1.49 
Iteration 66: Best Cost: 1.49 
Iteration 67: Best Cost: 1.99 
Iteration 68: Best Cost: 1.88 
Iteration 69: Best Cost: 1.88 
Iteration 70: Best Cost: 1.88 
Iteration 71: Best Cost: 1.88 
Iteration 72: Best Cost: 1.88 
Iteration 73: Best Cost: 1.88 
Iteration 74: Best Cost: 1.88 
Iteration 75: Best Cost: 1.88 
Iteration 76: Best Cost: 1.88 
Iteration 77: Best Cost: 1.88 
Iteration 78: Best Cost: 1.88 
Iteration 79: Best Cost: 1.88 
Iteration 80: Best Cost: 1.88 
Iteration 81: Best Cost: 1.88 
Iteration 82: Best Cost: 1.88 
Iteration 83: Best Cost: 1.88 
Iteration 84: Best Cost: 1.88 
Iteration 85: Best Cost: 1.88 
Iteration 86: Best Cost: 1.88 
Iteration 87: Best Cost: 1.88 
Iteration 88: Best Cost: 1.88 
Iteration 89: Best Cost: 1.88 
Iteration 90: Best Cost: 1.88 
Iteration 91: Best Cost: 1.88 
Iteration 92: Best Cost: 1.88 
Iteration 93: Best Cost: 1.88 
Iteration 94: Best Cost: 1.88 
Iteration 95: Best Cost: 1.88 
Iteration 96: Best Cost: 1.88 
Iteration 97: Best Cost: 1.88 
Iteration 98: Best Cost: 1.88 
Iteration 99: Best Cost: 1.88 

/nfs/work/pgpm/meso/ant/src/pkg_main/pkg_algorithms/aco_grad.py:148: RuntimeWarning: invalid value encountered in greater
  j = np.nonzero(cum_prob > r)[0][0]
Data fetched from CSV file
Run-time: 699.6605615615845 seconds
Total allocated memory size: 292.0 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 98
No. of (dataset) tuples: 3943
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 47
Number of iterations: 100

0. nr
1. i1_legid
2. i1_rcs_p
3. i1_rcs_e
4. i1_dep_1_p
5. i1_dep_1_e
6. i1_dep_1_place
7. i1_rcf_1_p
8. i1_rcf_1_e
9. i1_rcf_1_place
10. i1_dep_2_p
11. i1_dep_2_e
12. i1_dep_2_place
13. i1_rcf_2_p
14. i1_rcf_2_e
15. i1_rcf_2_place
16. i1_dep_3_p
17. i1_dep_3_e
18. i1_dep_3_place
19. i1_rcf_3_p
20. i1_rcf_3_e
21. i1_rcf_3_place
22. i1_dlv_p
23. i1_dlv_e
24. i1_hops
25. i2_legid
26. i2_rcs_p
27. i2_rcs_e
28. i2_dep_1_p
29. i2_dep_1_e
30. i2_dep_1_place
31. i2_rcf_1_p
32. i2_rcf_1_e
33. i2_rcf_1_place
34. i2_dep_2_p
35. i2_dep_2_e
36. i2_dep_2_place
37. i2_rcf_2_p
38. i2_rcf_2_e
39. i2_rcf_2_place
40. i2_dep_3_p
41. i2_dep_3_e
42. i2_dep_3_place
43. i2_rcf_3_p
44. i2_rcf_3_e
45. i2_rcf_3_place
46. i2_dlv_p
47. i2_dlv_e
48. i2_hops
49. i3_legid
50. i3_rcs_p
51. i3_rcs_e
52. i3_dep_1_p
53. i3_dep_1_e
54. i3_dep_1_place
55. i3_rcf_1_p
56. i3_rcf_1_e
57. i3_rcf_1_place
58. i3_dep_2_p
59. i3_dep_2_e
60. i3_dep_2_place
61. i3_rcf_2_p
62. i3_rcf_2_e
63. i3_rcf_2_place
64. i3_dep_3_p
65. i3_dep_3_e
66. i3_dep_3_place
67. i3_rcf_3_p
68. i3_rcf_3_e
69. i3_rcf_3_place
70. i3_dlv_p
71. i3_dlv_e
72. i3_hops
73. o_legid
74. o_rcs_p
75. o_rcs_e
76. o_dep_1_p
77. o_dep_1_e
78. o_dep_1_place
79. o_rcf_1_p
80. o_rcf_1_e
81. o_rcf_1_place
82. o_dep_2_p
83. o_dep_2_e
84. o_dep_2_place
85. o_rcf_2_p
86. o_rcf_2_e
87. o_rcf_2_place
88. o_dep_3_p
89. o_dep_3_e
90. o_dep_3_place
91. o_rcf_3_p
92. o_rcf_3_e
93. o_rcf_3_place
94. o_dlv_p
95. o_dlv_e
96. o_hops
97. legs

File: data/c2k.csv

Pattern : Support
['7-', '79-'] : 0.52
['75+', '5+'] : 0.527
['79+', '2+'] : 0.517
['73-', '7+'] : 0.509
['8+', '0+'] : 0.502
['8+', '1-'] : 0.509
['23+', '0+'] : 0.505
['80+', '75+', '74+'] : 0.513
['8+', '79+'] : 0.52
['79+', '0+'] : 0.5
['95+', '80-'] : 0.519
['8+', '7+', '2+'] : 0.56
['80+', '0+'] : 0.511
['95+', '5+'] : 0.51
['79+', '75+'] : 0.576
['79+', '73-'] : 0.512
['95+', '8+'] : 0.506
['79+', '95-'] : 0.522
['74+', '5+'] : 0.529
['23+', '1+'] : 0.514
['77+', '8+'] : 0.505
['8+', '7+', '3+'] : 0.521
['73-', '23+'] : 0.513
['23+', '7-'] : 0.508
['2-', '80-'] : 0.509
['74+', '75+', '79+'] : 0.522
['80+', '79+', '74+'] : 0.514
['1+', '7-'] : 0.509
['73-', '2+'] : 0.514
['8+', '73-'] : 0.507
['73-', '1+'] : 0.51
['80+', '73-'] : 0.511
['2-', '6+'] : 0.514
['80+', '3+'] : 0.506
['75+', '7+'] : 0.52
['23+', '95-'] : 0.504
['1+', '3+'] : 0.509
['80+', '23+'] : 0.53
['2-', '75-'] : 0.518
['8+', '3+', '2+'] : 0.529
['23+', '3+'] : 0.545
['5+', '3+'] : 0.551
['79+', '3+'] : 0.509
['1+', '2+'] : 0.506
['3-', '74-'] : 0.503
['23+', '2+'] : 0.539
['7-', '5-'] : 0.62


Iterations 
Iteration 0: Best Cost: 1.92 
Iteration 1: Best Cost: 1.9 
Iteration 2: Best Cost: 1.9 
Iteration 3: Best Cost: 1.93 
Iteration 4: Best Cost: 1.96 
Iteration 5: Best Cost: 1.99 
Iteration 6: Best Cost: 1.96 
Iteration 7: Best Cost: 1.98 
Iteration 8: Best Cost: 1.95 
Iteration 9: Best Cost: 1.92 
Iteration 10: Best Cost: 2.0 
Iteration 11: Best Cost: 1.93 
Iteration 12: Best Cost: 1.79 
Iteration 13: Best Cost: 1.96 
Iteration 14: Best Cost: 1.96 
Iteration 15: Best Cost: 1.96 
Iteration 16: Best Cost: 1.96 
Iteration 17: Best Cost: 1.96 
Iteration 18: Best Cost: 1.74 
Iteration 19: Best Cost: 1.74 
Iteration 20: Best Cost: 1.95 
Iteration 21: Best Cost: 1.98 
Iteration 22: Best Cost: 1.92 
Iteration 23: Best Cost: 1.89 
Iteration 24: Best Cost: 1.89 
Iteration 25: Best Cost: 1.95 
Iteration 26: Best Cost: 1.95 
Iteration 27: Best Cost: 1.98 
Iteration 28: Best Cost: 1.92 
Iteration 29: Best Cost: 1.95 
Iteration 30: Best Cost: 1.97 
Iteration 31: Best Cost: 1.96 
Iteration 32: Best Cost: 1.92 
Iteration 33: Best Cost: 1.92 
Iteration 34: Best Cost: 1.95 
Iteration 35: Best Cost: 1.95 
Iteration 36: Best Cost: 1.95 
Iteration 37: Best Cost: 1.95 
Iteration 38: Best Cost: 1.96 
Iteration 39: Best Cost: 1.96 
Iteration 40: Best Cost: 1.96 
Iteration 41: Best Cost: 1.95 
Iteration 42: Best Cost: 1.95 
Iteration 43: Best Cost: 1.95 
Iteration 44: Best Cost: 1.95 
Iteration 45: Best Cost: 1.95 
Iteration 46: Best Cost: 1.95 
Iteration 47: Best Cost: 1.95 
Iteration 48: Best Cost: 1.97 
Iteration 49: Best Cost: 1.97 
Iteration 50: Best Cost: 1.96 
Iteration 51: Best Cost: 1.96 
Iteration 52: Best Cost: 1.96 
Iteration 53: Best Cost: 1.96 
Iteration 54: Best Cost: 1.95 
Iteration 55: Best Cost: 1.95 
Iteration 56: Best Cost: 1.95 
Iteration 57: Best Cost: 1.95 
Iteration 58: Best Cost: 1.95 
Iteration 59: Best Cost: 1.95 
Iteration 60: Best Cost: 1.95 
Iteration 61: Best Cost: 1.98 
Iteration 62: Best Cost: 1.92 
Iteration 63: Best Cost: 1.92 
Iteration 64: Best Cost: 1.98 
Iteration 65: Best Cost: 1.96 
Iteration 66: Best Cost: 1.96 
Iteration 67: Best Cost: 1.89 
Iteration 68: Best Cost: 1.93 
Iteration 69: Best Cost: 1.93 
Iteration 70: Best Cost: 1.93 
Iteration 71: Best Cost: 1.89 
Iteration 72: Best Cost: 1.89 
Iteration 73: Best Cost: 1.83 
Iteration 74: Best Cost: 1.81 
Iteration 75: Best Cost: 1.96 
Iteration 76: Best Cost: 1.96 
Iteration 77: Best Cost: 1.96 
Iteration 78: Best Cost: 1.96 
Iteration 79: Best Cost: 1.96 
Iteration 80: Best Cost: 1.96 
Iteration 81: Best Cost: 1.96 
Iteration 82: Best Cost: 1.96 
Iteration 83: Best Cost: 1.98 
Iteration 84: Best Cost: 1.99 
Iteration 85: Best Cost: 1.86 
Iteration 86: Best Cost: 1.86 
Iteration 87: Best Cost: 1.86 
Iteration 88: Best Cost: 1.86 
Iteration 89: Best Cost: 1.86 
Iteration 90: Best Cost: 1.86 
Iteration 91: Best Cost: 1.86 
Iteration 92: Best Cost: 1.86 
Iteration 93: Best Cost: 1.86 
Iteration 94: Best Cost: 1.86 
Iteration 95: Best Cost: 1.86 
Iteration 96: Best Cost: 1.86 
Iteration 97: Best Cost: 1.61 
Iteration 98: Best Cost: 1.61 
Iteration 99: Best Cost: 1.61 

Data fetched from CSV file
Run-time: 295.80532670021057 seconds
Total allocated memory size: 227.8 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 21
No. of (dataset) tuples: 6120
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 62
Number of iterations: 100

0. date_time
1. id_site
2. Tpic
3. Dir
4. Etal
5. Tz
6. Hm0
7. Ts1
8. Ts2
9. Tc
10. Tav
11. Tint
12. Tp
13. EPS2
14. EPS4
15. Qp
16. S2
17. Tref
18. Tw
19. Batt
20. timestamp

File: data/Directio_site6k.csv

Pattern : Support
['18+', '6+'] : 0.522
['7+', '18+'] : 0.517
['16-', '13+', '15-'] : 0.549
['4+', '10+'] : 0.535
['6+', '15+'] : 0.585
['14+', '4+'] : 0.544
['6+', '12-'] : 0.532
['18+', '8+'] : 0.541
['5+', '18+'] : 0.541
['7+', '8+', '13+', '2+'] : 0.628
['3-', '8+', '10+', '9+', '11+'] : 0.501
['5+', '18+', '8+'] : 0.525
['3-', '8+', '12+', '7+', '5+'] : 0.516
['13+', '10+', '11+', '5+', '8+'] : 0.614
['13+', '16-', '3-'] : 0.542
['8+', '16-', '14+', '11+'] : 0.545
['7+', '10+', '12+', '2+', '16-'] : 0.501
['12+', '5+', '10+', '7+', '11+'] : 0.635
['7+', '2+', '9+', '11+', '8+'] : 0.549
['9+', '15+'] : 0.541
['8+', '11+', '12+', '9+', '5+'] : 0.524
['13+', '7+', '16-', '8+'] : 0.53
['7+', '9+', '12+', '2+'] : 0.505
['12+', '13+', '5+'] : 0.619
['7+', '2+', '11+', '9+', '10+', '5+'] : 0.549
['9+', '6+', '8+', '10+'] : 0.528
['8+', '14+', '12+', '10+', '9+', '11+', '5+', '7+'] : 0.502
['11+', '15+'] : 0.508
['10+', '11+', '8+', '5+', '12+', '2+'] : 0.583
['16-', '7+', '10+', '8+'] : 0.585
['7+', '13+', '3-', '10+'] : 0.552
['5+', '16-', '10+', '11+', '8+'] : 0.546
['5+', '13+', '7+', '12+', '2+', '8+', '10+'] : 0.567
['10+', '16-', '13+', '14+', '8+', '7+'] : 0.528
['10+', '16-', '8+', '5+', '7+', '14+'] : 0.543
['5+', '13+', '2+', '10+', '8+', '12+', '11+', '14+'] : 0.527
['10+', '15-', '12+', '14+'] : 0.505
['16-', '13+', '5+', '10+'] : 0.515
['5+', '13+', '14+', '9+', '7+'] : 0.515
['5+', '10+', '16-', '11+', '14+'] : 0.526
['8+', '5+', '3-', '13+'] : 0.513
['8+', '15-', '13+'] : 0.511
['11+', '8+', '14+', '10+', '16-'] : 0.543
['13+', '7+', '16-', '5+', '10+'] : 0.502
['9+', '6+', '8+', '5+'] : 0.567
['12+', '13+', '7+', '11+', '5+', '2+'] : 0.528
['12+', '8+', '16-', '5+'] : 0.502
['13+', '8+', '5+', '16-'] : 0.516
['11+', '5+', '3-', '8+', '7+'] : 0.54
['12+', '8+', '10+', '5+', '3-', '14+'] : 0.502
['13+', '14+', '10+', '9+', '5+'] : 0.527
['5+', '14+', '3-', '8+', '13+'] : 0.511
['13+', '10+', '8+', '5+', '3-'] : 0.512
['13+', '8+', '15-', '10+'] : 0.51
['13+', '8+', '3-', '7+'] : 0.522
['12+', '14+', '2+', '8+', '11+', '10+', '7+'] : 0.587
['14+', '8+', '9+', '10+', '13+'] : 0.527
['14+', '15-', '10+', '2+'] : 0.514
['14+', '3-', '11+', '8+', '10+'] : 0.566
['14+', '5+', '15-', '8+', '10+'] : 0.516
['10+', '11+', '3-', '9+', '5+'] : 0.501
['11+', '7+', '8+', '10+', '5+', '2+'] : 0.653


Iterations 
Iteration 0: Best Cost: 1.92 
Iteration 1: Best Cost: 1.93 
Iteration 2: Best Cost: 1.82 
Iteration 3: Best Cost: 1.87 
Iteration 4: Best Cost: 1.71 
Iteration 5: Best Cost: 1.84 
Iteration 6: Best Cost: 1.88 
Iteration 7: Best Cost: 1.85 
Iteration 8: Best Cost: 1.85 
Iteration 9: Best Cost: 1.59 
Iteration 10: Best Cost: 2.0 
Iteration 11: Best Cost: 1.9 
Iteration 12: Best Cost: 1.94 
Iteration 13: Best Cost: 1.94 
Iteration 14: Best Cost: 1.63 
Iteration 15: Best Cost: 1.85 
Iteration 16: Best Cost: 1.83 
Iteration 17: Best Cost: 1.83 
Iteration 18: Best Cost: 2.0 
Iteration 19: Best Cost: 1.57 
Iteration 20: Best Cost: 1.82 
Iteration 21: Best Cost: 1.85 
Iteration 22: Best Cost: 1.91 
Iteration 23: Best Cost: 1.89 
Iteration 24: Best Cost: 1.98 
Iteration 25: Best Cost: 1.98 
Iteration 26: Best Cost: 1.62 
Iteration 27: Best Cost: 1.82 
Iteration 28: Best Cost: 1.89 
Iteration 29: Best Cost: 1.89 
Iteration 30: Best Cost: 1.99 
Iteration 31: Best Cost: 1.97 
Iteration 32: Best Cost: 1.97 
Iteration 33: Best Cost: 1.72 
Iteration 34: Best Cost: 1.71 
Iteration 35: Best Cost: 1.81 
Iteration 36: Best Cost: 1.83 
Iteration 37: Best Cost: 1.83 
Iteration 38: Best Cost: 1.76 
Iteration 39: Best Cost: 1.89 
Iteration 40: Best Cost: 1.89 
Iteration 41: Best Cost: 1.84 
Iteration 42: Best Cost: 1.9 
Iteration 43: Best Cost: 1.9 
Iteration 44: Best Cost: 1.98 
Iteration 45: Best Cost: 1.98 
Iteration 46: Best Cost: 1.94 
Iteration 47: Best Cost: 1.94 
Iteration 48: Best Cost: 1.9 
Iteration 49: Best Cost: 1.95 
Iteration 50: Best Cost: 1.95 
Iteration 51: Best Cost: 1.95 
Iteration 52: Best Cost: 1.96 
Iteration 53: Best Cost: 1.84 
Iteration 54: Best Cost: 1.84 
Iteration 55: Best Cost: 1.84 
Iteration 56: Best Cost: 1.84 
Iteration 57: Best Cost: 1.99 
Iteration 58: Best Cost: 1.99 
Iteration 59: Best Cost: 1.76 
Iteration 60: Best Cost: 1.76 
Iteration 61: Best Cost: 1.76 
Iteration 62: Best Cost: 1.76 
Iteration 63: Best Cost: 1.89 
Iteration 64: Best Cost: 1.89 
Iteration 65: Best Cost: 1.99 
Iteration 66: Best Cost: 1.99 
Iteration 67: Best Cost: 1.99 
Iteration 68: Best Cost: 1.99 
Iteration 69: Best Cost: 1.99 
Iteration 70: Best Cost: 1.99 
Iteration 71: Best Cost: 1.94 
Iteration 72: Best Cost: 1.94 
Iteration 73: Best Cost: 1.94 
Iteration 74: Best Cost: 1.85 
Iteration 75: Best Cost: 1.85 
Iteration 76: Best Cost: 1.99 
Iteration 77: Best Cost: 1.99 
Iteration 78: Best Cost: 1.99 
Iteration 79: Best Cost: 1.9 
Iteration 80: Best Cost: 1.96 
Iteration 81: Best Cost: 1.96 
Iteration 82: Best Cost: 1.96 
Iteration 83: Best Cost: 1.95 
Iteration 84: Best Cost: 1.96 
Iteration 85: Best Cost: 1.96 
Iteration 86: Best Cost: 1.96 
Iteration 87: Best Cost: 1.96 
Iteration 88: Best Cost: 1.96 
Iteration 89: Best Cost: 1.92 
Iteration 90: Best Cost: 1.7 
Iteration 91: Best Cost: 1.7 
Iteration 92: Best Cost: 1.9 
Iteration 93: Best Cost: 1.95 
Iteration 94: Best Cost: 1.95 
Iteration 95: Best Cost: 1.95 
Iteration 96: Best Cost: 1.77 
Iteration 97: Best Cost: 1.94 
Iteration 98: Best Cost: 2.0 
Iteration 99: Best Cost: 1.53 

/nfs/work/pgpm/meso/ant/src/pkg_main/pkg_algorithms/aco_grad.py:148: RuntimeWarning: invalid value encountered in greater
  j = np.nonzero(cum_prob > r)[0][0]
Data fetched from CSV file
Run-time: 165.17033886909485 seconds
Total allocated memory size: 147.6 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 9
No. of (dataset) tuples: 19443
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 6
Number of iterations: 100

0. Date
1. Time
2. Global_active_power
3. Global_reactive_power
4. Voltage
5. Global_intensity
6. Sub_metering_1
7. Sub_metering_2
8. Sub_metering_3

File: data/UCI_household_power_consumption19k.csv

Pattern : Support
['3+', '2+'] : 0.53
['5+', '2+'] : 0.972
['5+', '3+'] : 0.526
['4-', '2+'] : 0.719
['4-', '2+', '5+'] : 0.708
['5+', '2+', '3+'] : 0.52


Iterations 
Iteration 0: Best Cost: 1.89 
Iteration 1: Best Cost: 1.89 
Iteration 2: Best Cost: 1.89 
Iteration 3: Best Cost: 1.03 
Iteration 4: Best Cost: 1.9 
Iteration 5: Best Cost: 1.9 
Iteration 6: Best Cost: 1.9 
Iteration 7: Best Cost: 1.9 
Iteration 8: Best Cost: 1.9 
Iteration 9: Best Cost: 1.9 
Iteration 10: Best Cost: 1.39 
Iteration 11: Best Cost: 1.39 
Iteration 12: Best Cost: 1.39 
Iteration 13: Best Cost: 1.39 
Iteration 14: Best Cost: 1.39 
Iteration 15: Best Cost: 1.39 
Iteration 16: Best Cost: 1.41 
Iteration 17: Best Cost: 1.41 
Iteration 18: Best Cost: 1.41 
Iteration 19: Best Cost: 1.41 
Iteration 20: Best Cost: 1.41 
Iteration 21: Best Cost: 1.41 
Iteration 22: Best Cost: 1.41 
Iteration 23: Best Cost: 1.41 
Iteration 24: Best Cost: 1.41 
Iteration 25: Best Cost: 1.41 
Iteration 26: Best Cost: 1.41 
Iteration 27: Best Cost: 1.41 
Iteration 28: Best Cost: 1.41 
Iteration 29: Best Cost: 1.41 
Iteration 30: Best Cost: 1.41 
Iteration 31: Best Cost: 1.41 
Iteration 32: Best Cost: 1.41 
Iteration 33: Best Cost: 1.41 
Iteration 34: Best Cost: 1.41 
Iteration 35: Best Cost: 1.41 
Iteration 36: Best Cost: 1.41 
Iteration 37: Best Cost: 1.41 
Iteration 38: Best Cost: 1.41 
Iteration 39: Best Cost: 1.41 
Iteration 40: Best Cost: 1.41 
Iteration 41: Best Cost: 1.41 
Iteration 42: Best Cost: 1.41 
Iteration 43: Best Cost: 1.41 
Iteration 44: Best Cost: 1.41 
Iteration 45: Best Cost: 1.41 
Iteration 46: Best Cost: 1.41 
Iteration 47: Best Cost: 1.41 
Iteration 48: Best Cost: 1.41 
Iteration 49: Best Cost: 1.41 
Iteration 50: Best Cost: 1.41 
Iteration 51: Best Cost: 1.41 
Iteration 52: Best Cost: 1.41 
Iteration 53: Best Cost: 1.41 
Iteration 54: Best Cost: 1.41 
Iteration 55: Best Cost: 1.41 
Iteration 56: Best Cost: 1.41 
Iteration 57: Best Cost: 1.41 
Iteration 58: Best Cost: 1.41 
Iteration 59: Best Cost: 1.41 
Iteration 60: Best Cost: 1.41 
Iteration 61: Best Cost: 1.41 
Iteration 62: Best Cost: 1.41 
Iteration 63: Best Cost: 1.41 
Iteration 64: Best Cost: 1.41 
Iteration 65: Best Cost: 1.41 
Iteration 66: Best Cost: 1.41 
Iteration 67: Best Cost: 1.41 
Iteration 68: Best Cost: 1.41 
Iteration 69: Best Cost: 1.41 
Iteration 70: Best Cost: 1.41 
Iteration 71: Best Cost: 1.41 
Iteration 72: Best Cost: 1.41 
Iteration 73: Best Cost: 1.41 
Iteration 74: Best Cost: 1.41 
Iteration 75: Best Cost: 1.41 
Iteration 76: Best Cost: 1.41 
Iteration 77: Best Cost: 1.41 
Iteration 78: Best Cost: 1.41 
Iteration 79: Best Cost: 1.41 
Iteration 80: Best Cost: 1.41 
Iteration 81: Best Cost: 1.41 
Iteration 82: Best Cost: 1.41 
Iteration 83: Best Cost: 1.92 
Iteration 84: Best Cost: 1.92 
Iteration 85: Best Cost: 1.92 
Iteration 86: Best Cost: 1.92 
Iteration 87: Best Cost: 1.92 
Iteration 88: Best Cost: 1.92 
Iteration 89: Best Cost: 1.92 
Iteration 90: Best Cost: 1.92 
Iteration 91: Best Cost: 1.92 
Iteration 92: Best Cost: 1.92 
Iteration 93: Best Cost: 1.92 
Iteration 94: Best Cost: 1.92 
Iteration 95: Best Cost: 1.92 
Iteration 96: Best Cost: 1.92 
Iteration 97: Best Cost: 1.92 
Iteration 98: Best Cost: 1.92 
Iteration 99: Best Cost: 1.92 

Data fetched from CSV file
Run-time: 1.4261856079101562 seconds
Total allocated memory size: 100.9 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 10
No. of (dataset) tuples: 116
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. Age
1. BMI
2. Glucose
3. Insulin
4. HOMA
5. Leptin
6. Adiponectin
7. Resistin
8. MCP.1
9. Classification

File: data/breast_cancer.csv

Pattern : Support
['2+', '3+', '4+'] : 0.6369426751592356


Iterations 
Iteration 0: Best Cost: 1.57 
Iteration 1: Best Cost: 1.57 
Iteration 2: Best Cost: 1.57 
Iteration 3: Best Cost: 1.43 
Iteration 4: Best Cost: 1.43 
Iteration 5: Best Cost: 1.43 
Iteration 6: Best Cost: 1.43 
Iteration 7: Best Cost: 1.06 
Iteration 8: Best Cost: 1.06 
Iteration 9: Best Cost: 1.06 
Iteration 10: Best Cost: 1.06 
Iteration 11: Best Cost: 1.06 
Iteration 12: Best Cost: 1.06 
Iteration 13: Best Cost: 1.06 
Iteration 14: Best Cost: 1.06 
Iteration 15: Best Cost: 1.06 
Iteration 16: Best Cost: 1.06 
Iteration 17: Best Cost: 1.06 
Iteration 18: Best Cost: 1.06 
Iteration 19: Best Cost: 1.06 
Iteration 20: Best Cost: 1.06 
Iteration 21: Best Cost: 1.06 
Iteration 22: Best Cost: 1.06 
Iteration 23: Best Cost: 1.06 
Iteration 24: Best Cost: 1.06 
Iteration 25: Best Cost: 1.06 
Iteration 26: Best Cost: 1.06 
Iteration 27: Best Cost: 1.06 
Iteration 28: Best Cost: 1.06 
Iteration 29: Best Cost: 1.06 
Iteration 30: Best Cost: 1.06 
Iteration 31: Best Cost: 1.06 
Iteration 32: Best Cost: 1.06 
Iteration 33: Best Cost: 1.06 
Iteration 34: Best Cost: 1.06 
Iteration 35: Best Cost: 1.06 
Iteration 36: Best Cost: 1.06 
Iteration 37: Best Cost: 1.06 
Iteration 38: Best Cost: 1.06 
Iteration 39: Best Cost: 1.06 
Iteration 40: Best Cost: 1.06 
Iteration 41: Best Cost: 1.06 
Iteration 42: Best Cost: 1.06 
Iteration 43: Best Cost: 1.06 
Iteration 44: Best Cost: 1.06 
Iteration 45: Best Cost: 1.06 
Iteration 46: Best Cost: 1.06 
Iteration 47: Best Cost: 1.06 
Iteration 48: Best Cost: 1.06 
Iteration 49: Best Cost: 1.06 
Iteration 50: Best Cost: 1.06 
Iteration 51: Best Cost: 1.06 
Iteration 52: Best Cost: 1.06 
Iteration 53: Best Cost: 1.06 
Iteration 54: Best Cost: 1.06 
Iteration 55: Best Cost: 1.06 
Iteration 56: Best Cost: 1.06 
Iteration 57: Best Cost: 1.06 
Iteration 58: Best Cost: 1.06 
Iteration 59: Best Cost: 1.06 
Iteration 60: Best Cost: 1.06 
Iteration 61: Best Cost: 1.06 
Iteration 62: Best Cost: 1.06 
Iteration 63: Best Cost: 1.06 
Iteration 64: Best Cost: 1.06 
Iteration 65: Best Cost: 1.06 
Iteration 66: Best Cost: 1.06 
Iteration 67: Best Cost: 1.06 
Iteration 68: Best Cost: 1.06 
Iteration 69: Best Cost: 1.06 
Iteration 70: Best Cost: 1.06 
Iteration 71: Best Cost: 1.06 
Iteration 72: Best Cost: 1.06 
Iteration 73: Best Cost: 1.06 
Iteration 74: Best Cost: 1.06 
Iteration 75: Best Cost: 1.06 
Iteration 76: Best Cost: 1.06 
Iteration 77: Best Cost: 1.06 
Iteration 78: Best Cost: 1.06 
Iteration 79: Best Cost: 1.06 
Iteration 80: Best Cost: 1.06 
Iteration 81: Best Cost: 1.06 
Iteration 82: Best Cost: 1.06 
Iteration 83: Best Cost: 1.06 
Iteration 84: Best Cost: 1.06 
Iteration 85: Best Cost: 1.06 
Iteration 86: Best Cost: 1.06 
Iteration 87: Best Cost: 1.06 
Iteration 88: Best Cost: 1.06 
Iteration 89: Best Cost: 1.06 
Iteration 90: Best Cost: 1.06 
Iteration 91: Best Cost: 1.06 
Iteration 92: Best Cost: 1.06 
Iteration 93: Best Cost: 1.06 
Iteration 94: Best Cost: 1.06 
Iteration 95: Best Cost: 1.06 
Iteration 96: Best Cost: 1.06 
Iteration 97: Best Cost: 1.06 
Iteration 98: Best Cost: 1.06 
Iteration 99: Best Cost: 1.06 

Data fetched from CSV file
Run-time: 2693.1370215415955 seconds
Total allocated memory size: 129.1 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 98
No. of (dataset) tuples: 3943
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 2
Number of iterations: 100

0. nr
1. i1_legid
2. i1_rcs_p
3. i1_rcs_e
4. i1_dep_1_p
5. i1_dep_1_e
6. i1_dep_1_place
7. i1_rcf_1_p
8. i1_rcf_1_e
9. i1_rcf_1_place
10. i1_dep_2_p
11. i1_dep_2_e
12. i1_dep_2_place
13. i1_rcf_2_p
14. i1_rcf_2_e
15. i1_rcf_2_place
16. i1_dep_3_p
17. i1_dep_3_e
18. i1_dep_3_place
19. i1_rcf_3_p
20. i1_rcf_3_e
21. i1_rcf_3_place
22. i1_dlv_p
23. i1_dlv_e
24. i1_hops
25. i2_legid
26. i2_rcs_p
27. i2_rcs_e
28. i2_dep_1_p
29. i2_dep_1_e
30. i2_dep_1_place
31. i2_rcf_1_p
32. i2_rcf_1_e
33. i2_rcf_1_place
34. i2_dep_2_p
35. i2_dep_2_e
36. i2_dep_2_place
37. i2_rcf_2_p
38. i2_rcf_2_e
39. i2_rcf_2_place
40. i2_dep_3_p
41. i2_dep_3_e
42. i2_dep_3_place
43. i2_rcf_3_p
44. i2_rcf_3_e
45. i2_rcf_3_place
46. i2_dlv_p
47. i2_dlv_e
48. i2_hops
49. i3_legid
50. i3_rcs_p
51. i3_rcs_e
52. i3_dep_1_p
53. i3_dep_1_e
54. i3_dep_1_place
55. i3_rcf_1_p
56. i3_rcf_1_e
57. i3_rcf_1_place
58. i3_dep_2_p
59. i3_dep_2_e
60. i3_dep_2_place
61. i3_rcf_2_p
62. i3_rcf_2_e
63. i3_rcf_2_place
64. i3_dep_3_p
65. i3_dep_3_e
66. i3_dep_3_place
67. i3_rcf_3_p
68. i3_rcf_3_e
69. i3_rcf_3_place
70. i3_dlv_p
71. i3_dlv_e
72. i3_hops
73. o_legid
74. o_rcs_p
75. o_rcs_e
76. o_dep_1_p
77. o_dep_1_e
78. o_dep_1_place
79. o_rcf_1_p
80. o_rcf_1_e
81. o_rcf_1_place
82. o_dep_2_p
83. o_dep_2_e
84. o_dep_2_place
85. o_rcf_2_p
86. o_rcf_2_e
87. o_rcf_2_place
88. o_dep_3_p
89. o_dep_3_e
90. o_dep_3_place
91. o_rcf_3_p
92. o_rcf_3_e
93. o_rcf_3_place
94. o_dlv_p
95. o_dlv_e
96. o_hops
97. legs

File: data/c2k.csv

Pattern : Support
['2+', '3+', '5+'] : 0.5434782608695652
['3+', '7+'] : 0.6060606060606061


Iterations 
Iteration 0: Best Cost: 1.84 
Iteration 1: Best Cost: 1.84 
Iteration 2: Best Cost: 1.84 
Iteration 3: Best Cost: 1.84 
Iteration 4: Best Cost: 1.65 
Iteration 5: Best Cost: 1.65 
Iteration 6: Best Cost: 1.21 
Iteration 7: Best Cost: 1.21 
Iteration 8: Best Cost: 1.21 
Iteration 9: Best Cost: 1.21 
Iteration 10: Best Cost: 1.21 
Iteration 11: Best Cost: 1.21 
Iteration 12: Best Cost: 1.21 
Iteration 13: Best Cost: 1.21 
Iteration 14: Best Cost: 1.21 
Iteration 15: Best Cost: 1.21 
Iteration 16: Best Cost: 1.21 
Iteration 17: Best Cost: 1.21 
Iteration 18: Best Cost: 1.21 
Iteration 19: Best Cost: 1.21 
Iteration 20: Best Cost: 1.21 
Iteration 21: Best Cost: 1.21 
Iteration 22: Best Cost: 1.21 
Iteration 23: Best Cost: 1.21 
Iteration 24: Best Cost: 1.21 
Iteration 25: Best Cost: 1.21 
Iteration 26: Best Cost: 1.21 
Iteration 27: Best Cost: 1.21 
Iteration 28: Best Cost: 1.21 
Iteration 29: Best Cost: 1.21 
Iteration 30: Best Cost: 1.21 
Iteration 31: Best Cost: 1.21 
Iteration 32: Best Cost: 1.21 
Iteration 33: Best Cost: 1.21 
Iteration 34: Best Cost: 1.21 
Iteration 35: Best Cost: 1.21 
Iteration 36: Best Cost: 1.21 
Iteration 37: Best Cost: 1.21 
Iteration 38: Best Cost: 1.21 
Iteration 39: Best Cost: 1.21 
Iteration 40: Best Cost: 1.21 
Iteration 41: Best Cost: 1.21 
Iteration 42: Best Cost: 1.21 
Iteration 43: Best Cost: 1.21 
Iteration 44: Best Cost: 1.21 
Iteration 45: Best Cost: 1.21 
Iteration 46: Best Cost: 1.21 
Iteration 47: Best Cost: 1.21 
Iteration 48: Best Cost: 1.21 
Iteration 49: Best Cost: 1.21 
Iteration 50: Best Cost: 1.21 
Iteration 51: Best Cost: 1.21 
Iteration 52: Best Cost: 1.21 
Iteration 53: Best Cost: 1.21 
Iteration 54: Best Cost: 1.21 
Iteration 55: Best Cost: 1.21 
Iteration 56: Best Cost: 1.21 
Iteration 57: Best Cost: 1.21 
Iteration 58: Best Cost: 1.21 
Iteration 59: Best Cost: 1.21 
Iteration 60: Best Cost: 1.21 
Iteration 61: Best Cost: 1.21 
Iteration 62: Best Cost: 1.21 
Iteration 63: Best Cost: 1.21 
Iteration 64: Best Cost: 1.21 
Iteration 65: Best Cost: 1.21 
Iteration 66: Best Cost: 1.21 
Iteration 67: Best Cost: 1.21 
Iteration 68: Best Cost: 1.21 
Iteration 69: Best Cost: 1.21 
Iteration 70: Best Cost: 1.21 
Iteration 71: Best Cost: 1.21 
Iteration 72: Best Cost: 1.21 
Iteration 73: Best Cost: 1.21 
Iteration 74: Best Cost: 1.21 
Iteration 75: Best Cost: 1.21 
Iteration 76: Best Cost: 1.21 
Iteration 77: Best Cost: 1.21 
Iteration 78: Best Cost: 1.21 
Iteration 79: Best Cost: 1.21 
Iteration 80: Best Cost: 1.21 
Iteration 81: Best Cost: 1.21 
Iteration 82: Best Cost: 1.21 
Iteration 83: Best Cost: 1.21 
Iteration 84: Best Cost: 1.21 
Iteration 85: Best Cost: 1.21 
Iteration 86: Best Cost: 1.21 
Iteration 87: Best Cost: 1.21 
Iteration 88: Best Cost: 1.21 
Iteration 89: Best Cost: 1.21 
Iteration 90: Best Cost: 1.21 
Iteration 91: Best Cost: 1.21 
Iteration 92: Best Cost: 1.21 
Iteration 93: Best Cost: 1.21 
Iteration 94: Best Cost: 1.21 
Iteration 95: Best Cost: 1.21 
Iteration 96: Best Cost: 1.21 
Iteration 97: Best Cost: 1.21 
Iteration 98: Best Cost: 1.21 
Iteration 99: Best Cost: 1.21 

Data fetched from CSV file
Run-time: 1797.082570552826 seconds
Total allocated memory size: 123.0 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 21
No. of (dataset) tuples: 6120
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 3
Number of iterations: 100

0. date_time
1. id_site
2. Tpic
3. Dir
4. Etal
5. Tz
6. Hm0
7. Ts1
8. Ts2
9. Tc
10. Tav
11. Tint
12. Tp
13. EPS2
14. EPS4
15. Qp
16. S2
17. Tref
18. Tw
19. Batt
20. timestamp

File: data/Directio_site6k.csv

Pattern : Support
['3+', '4-'] : 0.5813953488372093
['2+', '5+', '10+', '11+', '14+'] : 0.6666666666666666
['2-', '5-', '7-'] : 0.6993006993006994


Iterations 
Iteration 0: Best Cost: 1.72 
Iteration 1: Best Cost: 1.5 
Iteration 2: Best Cost: 1.43 
Iteration 3: Best Cost: 1.43 
Iteration 4: Best Cost: 1.43 
Iteration 5: Best Cost: 1.43 
Iteration 6: Best Cost: 1.43 
Iteration 7: Best Cost: 1.43 
Iteration 8: Best Cost: 1.43 
Iteration 9: Best Cost: 1.29 
Iteration 10: Best Cost: 1.29 
Iteration 11: Best Cost: 1.29 
Iteration 12: Best Cost: 1.29 
Iteration 13: Best Cost: 1.29 
Iteration 14: Best Cost: 1.29 
Iteration 15: Best Cost: 1.29 
Iteration 16: Best Cost: 1.29 
Iteration 17: Best Cost: 1.29 
Iteration 18: Best Cost: 1.29 
Iteration 19: Best Cost: 1.29 
Iteration 20: Best Cost: 1.29 
Iteration 21: Best Cost: 1.29 
Iteration 22: Best Cost: 1.29 
Iteration 23: Best Cost: 1.29 
Iteration 24: Best Cost: 1.29 
Iteration 25: Best Cost: 1.29 
Iteration 26: Best Cost: 1.29 
Iteration 27: Best Cost: 1.29 
Iteration 28: Best Cost: 1.29 
Iteration 29: Best Cost: 1.29 
Iteration 30: Best Cost: 1.29 
Iteration 31: Best Cost: 1.29 
Iteration 32: Best Cost: 1.29 
Iteration 33: Best Cost: 1.29 
Iteration 34: Best Cost: 1.29 
Iteration 35: Best Cost: 1.29 
Iteration 36: Best Cost: 1.29 
Iteration 37: Best Cost: 1.29 
Iteration 38: Best Cost: 1.29 
Iteration 39: Best Cost: 1.29 
Iteration 40: Best Cost: 1.29 
Iteration 41: Best Cost: 1.29 
Iteration 42: Best Cost: 1.29 
Iteration 43: Best Cost: 1.29 
Iteration 44: Best Cost: 1.29 
Iteration 45: Best Cost: 1.29 
Iteration 46: Best Cost: 1.29 
Iteration 47: Best Cost: 1.29 
Iteration 48: Best Cost: 1.29 
Iteration 49: Best Cost: 1.29 
Iteration 50: Best Cost: 1.29 
Iteration 51: Best Cost: 1.29 
Iteration 52: Best Cost: 1.29 
Iteration 53: Best Cost: 1.29 
Iteration 54: Best Cost: 1.29 
Iteration 55: Best Cost: 1.29 
Iteration 56: Best Cost: 1.29 
Iteration 57: Best Cost: 1.29 
Iteration 58: Best Cost: 1.29 
Iteration 59: Best Cost: 1.29 
Iteration 60: Best Cost: 1.29 
Iteration 61: Best Cost: 1.29 
Iteration 62: Best Cost: 1.29 
Iteration 63: Best Cost: 1.29 
Iteration 64: Best Cost: 1.29 
Iteration 65: Best Cost: 1.29 
Iteration 66: Best Cost: 1.29 
Iteration 67: Best Cost: 1.29 
Iteration 68: Best Cost: 1.29 
Iteration 69: Best Cost: 1.29 
Iteration 70: Best Cost: 1.29 
Iteration 71: Best Cost: 1.29 
Iteration 72: Best Cost: 1.29 
Iteration 73: Best Cost: 1.29 
Iteration 74: Best Cost: 1.29 
Iteration 75: Best Cost: 1.29 
Iteration 76: Best Cost: 1.29 
Iteration 77: Best Cost: 1.29 
Iteration 78: Best Cost: 1.29 
Iteration 79: Best Cost: 1.29 
Iteration 80: Best Cost: 1.29 
Iteration 81: Best Cost: 1.29 
Iteration 82: Best Cost: 1.29 
Iteration 83: Best Cost: 1.29 
Iteration 84: Best Cost: 1.29 
Iteration 85: Best Cost: 1.29 
Iteration 86: Best Cost: 1.29 
Iteration 87: Best Cost: 1.29 
Iteration 88: Best Cost: 1.29 
Iteration 89: Best Cost: 1.29 
Iteration 90: Best Cost: 1.29 
Iteration 91: Best Cost: 1.29 
Iteration 92: Best Cost: 1.29 
Iteration 93: Best Cost: 1.29 
Iteration 94: Best Cost: 1.29 
Iteration 95: Best Cost: 1.29 
Iteration 96: Best Cost: 1.29 
Iteration 97: Best Cost: 1.29 
Iteration 98: Best Cost: 1.29 
Iteration 99: Best Cost: 1.29 

Data fetched from CSV file
Run-time: 6433.393157720566 seconds
Total allocated memory size: 111.9 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 9
No. of (dataset) tuples: 19443
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. Date
1. Time
2. Global_active_power
3. Global_reactive_power
4. Voltage
5. Global_intensity
6. Sub_metering_1
7. Sub_metering_2
8. Sub_metering_3

File: data/UCI_household_power_consumption19k.csv

Pattern : Support
['2-', '5-'] : 0.970873786407767


Iterations 
Iteration 0: Best Cost: 1.03 
Iteration 1: Best Cost: 1.03 
Iteration 2: Best Cost: 1.03 
Iteration 3: Best Cost: 1.03 
Iteration 4: Best Cost: 1.03 
Iteration 5: Best Cost: 1.03 
Iteration 6: Best Cost: 1.03 
Iteration 7: Best Cost: 1.03 
Iteration 8: Best Cost: 1.03 
Iteration 9: Best Cost: 1.03 
Iteration 10: Best Cost: 1.03 
Iteration 11: Best Cost: 1.03 
Iteration 12: Best Cost: 1.03 
Iteration 13: Best Cost: 1.03 
Iteration 14: Best Cost: 1.03 
Iteration 15: Best Cost: 1.03 
Iteration 16: Best Cost: 1.03 
Iteration 17: Best Cost: 1.03 
Iteration 18: Best Cost: 1.03 
Iteration 19: Best Cost: 1.03 
Iteration 20: Best Cost: 1.03 
Iteration 21: Best Cost: 1.03 
Iteration 22: Best Cost: 1.03 
Iteration 23: Best Cost: 1.03 
Iteration 24: Best Cost: 1.03 
Iteration 25: Best Cost: 1.03 
Iteration 26: Best Cost: 1.03 
Iteration 27: Best Cost: 1.03 
Iteration 28: Best Cost: 1.03 
Iteration 29: Best Cost: 1.03 
Iteration 30: Best Cost: 1.03 
Iteration 31: Best Cost: 1.03 
Iteration 32: Best Cost: 1.03 
Iteration 33: Best Cost: 1.03 
Iteration 34: Best Cost: 1.03 
Iteration 35: Best Cost: 1.03 
Iteration 36: Best Cost: 1.03 
Iteration 37: Best Cost: 1.03 
Iteration 38: Best Cost: 1.03 
Iteration 39: Best Cost: 1.03 
Iteration 40: Best Cost: 1.03 
Iteration 41: Best Cost: 1.03 
Iteration 42: Best Cost: 1.03 
Iteration 43: Best Cost: 1.03 
Iteration 44: Best Cost: 1.03 
Iteration 45: Best Cost: 1.03 
Iteration 46: Best Cost: 1.03 
Iteration 47: Best Cost: 1.03 
Iteration 48: Best Cost: 1.03 
Iteration 49: Best Cost: 1.03 
Iteration 50: Best Cost: 1.03 
Iteration 51: Best Cost: 1.03 
Iteration 52: Best Cost: 1.03 
Iteration 53: Best Cost: 1.03 
Iteration 54: Best Cost: 1.03 
Iteration 55: Best Cost: 1.03 
Iteration 56: Best Cost: 1.03 
Iteration 57: Best Cost: 1.03 
Iteration 58: Best Cost: 1.03 
Iteration 59: Best Cost: 1.03 
Iteration 60: Best Cost: 1.03 
Iteration 61: Best Cost: 1.03 
Iteration 62: Best Cost: 1.03 
Iteration 63: Best Cost: 1.03 
Iteration 64: Best Cost: 1.03 
Iteration 65: Best Cost: 1.03 
Iteration 66: Best Cost: 1.03 
Iteration 67: Best Cost: 1.03 
Iteration 68: Best Cost: 1.03 
Iteration 69: Best Cost: 1.03 
Iteration 70: Best Cost: 1.03 
Iteration 71: Best Cost: 1.03 
Iteration 72: Best Cost: 1.03 
Iteration 73: Best Cost: 1.03 
Iteration 74: Best Cost: 1.03 
Iteration 75: Best Cost: 1.03 
Iteration 76: Best Cost: 1.03 
Iteration 77: Best Cost: 1.03 
Iteration 78: Best Cost: 1.03 
Iteration 79: Best Cost: 1.03 
Iteration 80: Best Cost: 1.03 
Iteration 81: Best Cost: 1.03 
Iteration 82: Best Cost: 1.03 
Iteration 83: Best Cost: 1.03 
Iteration 84: Best Cost: 1.03 
Iteration 85: Best Cost: 1.03 
Iteration 86: Best Cost: 1.03 
Iteration 87: Best Cost: 1.03 
Iteration 88: Best Cost: 1.03 
Iteration 89: Best Cost: 1.03 
Iteration 90: Best Cost: 1.03 
Iteration 91: Best Cost: 1.03 
Iteration 92: Best Cost: 1.03 
Iteration 93: Best Cost: 1.03 
Iteration 94: Best Cost: 1.03 
Iteration 95: Best Cost: 1.03 
Iteration 96: Best Cost: 1.03 
Iteration 97: Best Cost: 1.03 
Iteration 98: Best Cost: 1.03 
Iteration 99: Best Cost: 1.03 

Data fetched from CSV file
Run-time: 0.8649301528930664 seconds
Total allocated memory size: 85.5 KiB
Algorithm: PSO-GRAANK (v1.0)
No. of (dataset) attributes: 10
No. of (dataset) tuples: 116
Velocity coeff.: 0.5
C1 coeff.: 0.1
C2 coeff.: 0.5
No. of particles: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 2
Number of iterations: 100

0. Age
1. BMI
2. Glucose
3. Insulin
4. HOMA
5. Leptin
6. Adiponectin
7. Resistin
8. MCP.1
9. Classification

File: data/breast_cancer.csv

Pattern : Support
['1+', '4+'] : 0.6134969325153374
['4-', '5-'] : 0.6578947368421053


Iterations 
Iteration 0: Best Position: 1.63 
Iteration 1: Best Position: 1.52 
Iteration 2: Best Position: 1.52 
Iteration 3: Best Position: 1.52 
Iteration 4: Best Position: 1.52 
Iteration 5: Best Position: 1.52 
Iteration 6: Best Position: 1.52 
Iteration 7: Best Position: 1.52 
Iteration 8: Best Position: 1.52 
Iteration 9: Best Position: 1.52 
Iteration 10: Best Position: 1.52 
Iteration 11: Best Position: 1.52 
Iteration 12: Best Position: 1.52 
Iteration 13: Best Position: 1.52 
Iteration 14: Best Position: 1.52 
Iteration 15: Best Position: 1.52 
Iteration 16: Best Position: 1.52 
Iteration 17: Best Position: 1.52 
Iteration 18: Best Position: 1.52 
Iteration 19: Best Position: 1.52 
Iteration 20: Best Position: 1.52 
Iteration 21: Best Position: 1.52 
Iteration 22: Best Position: 1.52 
Iteration 23: Best Position: 1.52 
Iteration 24: Best Position: 1.52 
Iteration 25: Best Position: 1.52 
Iteration 26: Best Position: 1.52 
Iteration 27: Best Position: 1.52 
Iteration 28: Best Position: 1.52 
Iteration 29: Best Position: 1.52 
Iteration 30: Best Position: 1.52 
Iteration 31: Best Position: 1.52 
Iteration 32: Best Position: 1.52 
Iteration 33: Best Position: 1.52 
Iteration 34: Best Position: 1.52 
Iteration 35: Best Position: 1.52 
Iteration 36: Best Position: 1.52 
Iteration 37: Best Position: 1.52 
Iteration 38: Best Position: 1.52 
Iteration 39: Best Position: 1.52 
Iteration 40: Best Position: 1.52 
Iteration 41: Best Position: 1.52 
Iteration 42: Best Position: 1.52 
Iteration 43: Best Position: 1.52 
Iteration 44: Best Position: 1.52 
Iteration 45: Best Position: 1.52 
Iteration 46: Best Position: 1.52 
Iteration 47: Best Position: 1.52 
Iteration 48: Best Position: 1.52 
Iteration 49: Best Position: 1.52 
Iteration 50: Best Position: 1.52 
Iteration 51: Best Position: 1.52 
Iteration 52: Best Position: 1.52 
Iteration 53: Best Position: 1.52 
Iteration 54: Best Position: 1.52 
Iteration 55: Best Position: 1.52 
Iteration 56: Best Position: 1.52 
Iteration 57: Best Position: 1.52 
Iteration 58: Best Position: 1.52 
Iteration 59: Best Position: 1.52 
Iteration 60: Best Position: 1.52 
Iteration 61: Best Position: 1.52 
Iteration 62: Best Position: 1.52 
Iteration 63: Best Position: 1.52 
Iteration 64: Best Position: 1.52 
Iteration 65: Best Position: 1.52 
Iteration 66: Best Position: 1.52 
Iteration 67: Best Position: 1.52 
Iteration 68: Best Position: 1.52 
Iteration 69: Best Position: 1.52 
Iteration 70: Best Position: 1.52 
Iteration 71: Best Position: 1.52 
Iteration 72: Best Position: 1.52 
Iteration 73: Best Position: 1.52 
Iteration 74: Best Position: 1.52 
Iteration 75: Best Position: 1.52 
Iteration 76: Best Position: 1.52 
Iteration 77: Best Position: 1.52 
Iteration 78: Best Position: 1.52 
Iteration 79: Best Position: 1.52 
Iteration 80: Best Position: 1.52 
Iteration 81: Best Position: 1.52 
Iteration 82: Best Position: 1.52 
Iteration 83: Best Position: 1.52 
Iteration 84: Best Position: 1.52 
Iteration 85: Best Position: 1.52 
Iteration 86: Best Position: 1.52 
Iteration 87: Best Position: 1.52 
Iteration 88: Best Position: 1.52 
Iteration 89: Best Position: 1.52 
Iteration 90: Best Position: 1.52 
Iteration 91: Best Position: 1.52 
Iteration 92: Best Position: 1.52 
Iteration 93: Best Position: 1.52 
Iteration 94: Best Position: 1.52 
Iteration 95: Best Position: 1.52 
Iteration 96: Best Position: 1.52 
Iteration 97: Best Position: 1.52 
Iteration 98: Best Position: 1.52 
Iteration 99: Best Position: 1.52 

Data fetched from CSV file
Run-time: 1820.8034813404083 seconds
Total allocated memory size: 117.3 KiB
Algorithm: PSO-GRAANK (v1.0)
No. of (dataset) attributes: 98
No. of (dataset) tuples: 3943
Velocity coeff.: 0.5
C1 coeff.: 0.1
C2 coeff.: 0.5
No. of particles: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. nr
1. i1_legid
2. i1_rcs_p
3. i1_rcs_e
4. i1_dep_1_p
5. i1_dep_1_e
6. i1_dep_1_place
7. i1_rcf_1_p
8. i1_rcf_1_e
9. i1_rcf_1_place
10. i1_dep_2_p
11. i1_dep_2_e
12. i1_dep_2_place
13. i1_rcf_2_p
14. i1_rcf_2_e
15. i1_rcf_2_place
16. i1_dep_3_p
17. i1_dep_3_e
18. i1_dep_3_place
19. i1_rcf_3_p
20. i1_rcf_3_e
21. i1_rcf_3_place
22. i1_dlv_p
23. i1_dlv_e
24. i1_hops
25. i2_legid
26. i2_rcs_p
27. i2_rcs_e
28. i2_dep_1_p
29. i2_dep_1_e
30. i2_dep_1_place
31. i2_rcf_1_p
32. i2_rcf_1_e
33. i2_rcf_1_place
34. i2_dep_2_p
35. i2_dep_2_e
36. i2_dep_2_place
37. i2_rcf_2_p
38. i2_rcf_2_e
39. i2_rcf_2_place
40. i2_dep_3_p
41. i2_dep_3_e
42. i2_dep_3_place
43. i2_rcf_3_p
44. i2_rcf_3_e
45. i2_rcf_3_place
46. i2_dlv_p
47. i2_dlv_e
48. i2_hops
49. i3_legid
50. i3_rcs_p
51. i3_rcs_e
52. i3_dep_1_p
53. i3_dep_1_e
54. i3_dep_1_place
55. i3_rcf_1_p
56. i3_rcf_1_e
57. i3_rcf_1_place
58. i3_dep_2_p
59. i3_dep_2_e
60. i3_dep_2_place
61. i3_rcf_2_p
62. i3_rcf_2_e
63. i3_rcf_2_place
64. i3_dep_3_p
65. i3_dep_3_e
66. i3_dep_3_place
67. i3_rcf_3_p
68. i3_rcf_3_e
69. i3_rcf_3_place
70. i3_dlv_p
71. i3_dlv_e
72. i3_hops
73. o_legid
74. o_rcs_p
75. o_rcs_e
76. o_dep_1_p
77. o_dep_1_e
78. o_dep_1_place
79. o_rcf_1_p
80. o_rcf_1_e
81. o_rcf_1_place
82. o_dep_2_p
83. o_dep_2_e
84. o_dep_2_place
85. o_rcf_2_p
86. o_rcf_2_e
87. o_rcf_2_place
88. o_dep_3_p
89. o_dep_3_e
90. o_dep_3_place
91. o_rcf_3_p
92. o_rcf_3_e
93. o_rcf_3_place
94. o_dlv_p
95. o_dlv_e
96. o_hops
97. legs

File: data/c2k.csv

Pattern : Support
['0+', '1+'] : 0.5181347150259068


Iterations 
Iteration 0: Best Position: 1.93 
Iteration 1: Best Position: 1.93 
Iteration 2: Best Position: 1.93 
Iteration 3: Best Position: 1.93 
Iteration 4: Best Position: 1.93 
Iteration 5: Best Position: 1.93 
Iteration 6: Best Position: 1.93 
Iteration 7: Best Position: 1.93 
Iteration 8: Best Position: 1.93 
Iteration 9: Best Position: 1.93 
Iteration 10: Best Position: 1.93 
Iteration 11: Best Position: 1.93 
Iteration 12: Best Position: 1.93 
Iteration 13: Best Position: 1.93 
Iteration 14: Best Position: 1.93 
Iteration 15: Best Position: 1.93 
Iteration 16: Best Position: 1.93 
Iteration 17: Best Position: 1.93 
Iteration 18: Best Position: 1.93 
Iteration 19: Best Position: 1.93 
Iteration 20: Best Position: 1.93 
Iteration 21: Best Position: 1.93 
Iteration 22: Best Position: 1.93 
Iteration 23: Best Position: 1.93 
Iteration 24: Best Position: 1.93 
Iteration 25: Best Position: 1.93 
Iteration 26: Best Position: 1.93 
Iteration 27: Best Position: 1.93 
Iteration 28: Best Position: 1.93 
Iteration 29: Best Position: 1.93 
Iteration 30: Best Position: 1.93 
Iteration 31: Best Position: 1.93 
Iteration 32: Best Position: 1.93 
Iteration 33: Best Position: 1.93 
Iteration 34: Best Position: 1.93 
Iteration 35: Best Position: 1.93 
Iteration 36: Best Position: 1.93 
Iteration 37: Best Position: 1.93 
Iteration 38: Best Position: 1.93 
Iteration 39: Best Position: 1.93 
Iteration 40: Best Position: 1.93 
Iteration 41: Best Position: 1.93 
Iteration 42: Best Position: 1.93 
Iteration 43: Best Position: 1.93 
Iteration 44: Best Position: 1.93 
Iteration 45: Best Position: 1.93 
Iteration 46: Best Position: 1.93 
Iteration 47: Best Position: 1.93 
Iteration 48: Best Position: 1.93 
Iteration 49: Best Position: 1.93 
Iteration 50: Best Position: 1.93 
Iteration 51: Best Position: 1.93 
Iteration 52: Best Position: 1.93 
Iteration 53: Best Position: 1.93 
Iteration 54: Best Position: 1.93 
Iteration 55: Best Position: 1.93 
Iteration 56: Best Position: 1.93 
Iteration 57: Best Position: 1.93 
Iteration 58: Best Position: 1.93 
Iteration 59: Best Position: 1.93 
Iteration 60: Best Position: 1.93 
Iteration 61: Best Position: 1.93 
Iteration 62: Best Position: 1.93 
Iteration 63: Best Position: 1.93 
Iteration 64: Best Position: 1.93 
Iteration 65: Best Position: 1.93 
Iteration 66: Best Position: 1.93 
Iteration 67: Best Position: 1.93 
Iteration 68: Best Position: 1.93 
Iteration 69: Best Position: 1.93 
Iteration 70: Best Position: 1.93 
Iteration 71: Best Position: 1.93 
Iteration 72: Best Position: 1.93 
Iteration 73: Best Position: 1.93 
Iteration 74: Best Position: 1.93 
Iteration 75: Best Position: 1.93 
Iteration 76: Best Position: 1.93 
Iteration 77: Best Position: 1.93 
Iteration 78: Best Position: 1.93 
Iteration 79: Best Position: 1.93 
Iteration 80: Best Position: 1.93 
Iteration 81: Best Position: 1.93 
Iteration 82: Best Position: 1.93 
Iteration 83: Best Position: 1.93 
Iteration 84: Best Position: 1.93 
Iteration 85: Best Position: 1.93 
Iteration 86: Best Position: 1.93 
Iteration 87: Best Position: 1.93 
Iteration 88: Best Position: 1.93 
Iteration 89: Best Position: 1.93 
Iteration 90: Best Position: 1.93 
Iteration 91: Best Position: 1.93 
Iteration 92: Best Position: 1.93 
Iteration 93: Best Position: 1.93 
Iteration 94: Best Position: 1.93 
Iteration 95: Best Position: 1.93 
Iteration 96: Best Position: 1.93 
Iteration 97: Best Position: 1.93 
Iteration 98: Best Position: 1.93 
Iteration 99: Best Position: 1.93 

Data fetched from CSV file
Run-time: 567.645022392273 seconds
Total allocated memory size: 105.0 KiB
Algorithm: PSO-GRAANK (v1.0)
No. of (dataset) attributes: 21
No. of (dataset) tuples: 6120
Velocity coeff.: 0.5
C1 coeff.: 0.1
C2 coeff.: 0.5
No. of particles: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 2
Number of iterations: 100

0. date_time
1. id_site
2. Tpic
3. Dir
4. Etal
5. Tz
6. Hm0
7. Ts1
8. Ts2
9. Tc
10. Tav
11. Tint
12. Tp
13. EPS2
14. EPS4
15. Qp
16. S2
17. Tref
18. Tw
19. Batt
20. timestamp

File: data/Directio_site6k.csv

Pattern : Support
['2+', '5+', '7+', '8+', '13+', '14+'] : 0.6024096385542169
['2-', '7-', '12-'] : 0.7246376811594204


Iterations 
Iteration 0: Best Position: 1.66 
Iteration 1: Best Position: 1.38 
Iteration 2: Best Position: 1.25 
Iteration 3: Best Position: 1.25 
Iteration 4: Best Position: 1.25 
Iteration 5: Best Position: 1.25 
Iteration 6: Best Position: 1.25 
Iteration 7: Best Position: 1.25 
Iteration 8: Best Position: 1.25 
Iteration 9: Best Position: 1.25 
Iteration 10: Best Position: 1.25 
Iteration 11: Best Position: 1.25 
Iteration 12: Best Position: 1.25 
Iteration 13: Best Position: 1.25 
Iteration 14: Best Position: 1.25 
Iteration 15: Best Position: 1.25 
Iteration 16: Best Position: 1.25 
Iteration 17: Best Position: 1.25 
Iteration 18: Best Position: 1.25 
Iteration 19: Best Position: 1.25 
Iteration 20: Best Position: 1.25 
Iteration 21: Best Position: 1.25 
Iteration 22: Best Position: 1.25 
Iteration 23: Best Position: 1.25 
Iteration 24: Best Position: 1.25 
Iteration 25: Best Position: 1.25 
Iteration 26: Best Position: 1.25 
Iteration 27: Best Position: 1.25 
Iteration 28: Best Position: 1.25 
Iteration 29: Best Position: 1.25 
Iteration 30: Best Position: 1.25 
Iteration 31: Best Position: 1.25 
Iteration 32: Best Position: 1.25 
Iteration 33: Best Position: 1.25 
Iteration 34: Best Position: 1.25 
Iteration 35: Best Position: 1.25 
Iteration 36: Best Position: 1.25 
Iteration 37: Best Position: 1.25 
Iteration 38: Best Position: 1.25 
Iteration 39: Best Position: 1.25 
Iteration 40: Best Position: 1.25 
Iteration 41: Best Position: 1.25 
Iteration 42: Best Position: 1.25 
Iteration 43: Best Position: 1.25 
Iteration 44: Best Position: 1.25 
Iteration 45: Best Position: 1.25 
Iteration 46: Best Position: 1.25 
Iteration 47: Best Position: 1.25 
Iteration 48: Best Position: 1.25 
Iteration 49: Best Position: 1.25 
Iteration 50: Best Position: 1.25 
Iteration 51: Best Position: 1.25 
Iteration 52: Best Position: 1.25 
Iteration 53: Best Position: 1.25 
Iteration 54: Best Position: 1.25 
Iteration 55: Best Position: 1.25 
Iteration 56: Best Position: 1.25 
Iteration 57: Best Position: 1.25 
Iteration 58: Best Position: 1.25 
Iteration 59: Best Position: 1.25 
Iteration 60: Best Position: 1.25 
Iteration 61: Best Position: 1.25 
Iteration 62: Best Position: 1.25 
Iteration 63: Best Position: 1.25 
Iteration 64: Best Position: 1.25 
Iteration 65: Best Position: 1.25 
Iteration 66: Best Position: 1.25 
Iteration 67: Best Position: 1.25 
Iteration 68: Best Position: 1.25 
Iteration 69: Best Position: 1.25 
Iteration 70: Best Position: 1.25 
Iteration 71: Best Position: 1.25 
Iteration 72: Best Position: 1.25 
Iteration 73: Best Position: 1.25 
Iteration 74: Best Position: 1.25 
Iteration 75: Best Position: 1.25 
Iteration 76: Best Position: 1.25 
Iteration 77: Best Position: 1.25 
Iteration 78: Best Position: 1.25 
Iteration 79: Best Position: 1.25 
Iteration 80: Best Position: 1.25 
Iteration 81: Best Position: 1.25 
Iteration 82: Best Position: 1.25 
Iteration 83: Best Position: 1.25 
Iteration 84: Best Position: 1.25 
Iteration 85: Best Position: 1.25 
Iteration 86: Best Position: 1.25 
Iteration 87: Best Position: 1.25 
Iteration 88: Best Position: 1.25 
Iteration 89: Best Position: 1.25 
Iteration 90: Best Position: 1.25 
Iteration 91: Best Position: 1.25 
Iteration 92: Best Position: 1.25 
Iteration 93: Best Position: 1.25 
Iteration 94: Best Position: 1.25 
Iteration 95: Best Position: 1.25 
Iteration 96: Best Position: 1.25 
Iteration 97: Best Position: 1.25 
Iteration 98: Best Position: 1.25 
Iteration 99: Best Position: 1.25 

Data fetched from CSV file
Run-time: 3271.7162535190582 seconds
Total allocated memory size: 98.3 KiB
Algorithm: PSO-GRAANK (v1.0)
No. of (dataset) attributes: 9
No. of (dataset) tuples: 19443
Velocity coeff.: 0.5
C1 coeff.: 0.1
C2 coeff.: 0.5
No. of particles: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. Date
1. Time
2. Global_active_power
3. Global_reactive_power
4. Voltage
5. Global_intensity
6. Sub_metering_1
7. Sub_metering_2
8. Sub_metering_3

File: data/UCI_household_power_consumption19k.csv

Pattern : Support
['2-', '5-'] : 0.970873786407767


Iterations 
Iteration 0: Best Position: 1.03 
Iteration 1: Best Position: 1.03 
Iteration 2: Best Position: 1.03 
Iteration 3: Best Position: 1.03 
Iteration 4: Best Position: 1.03 
Iteration 5: Best Position: 1.03 
Iteration 6: Best Position: 1.03 
Iteration 7: Best Position: 1.03 
Iteration 8: Best Position: 1.03 
Iteration 9: Best Position: 1.03 
Iteration 10: Best Position: 1.03 
Iteration 11: Best Position: 1.03 
Iteration 12: Best Position: 1.03 
Iteration 13: Best Position: 1.03 
Iteration 14: Best Position: 1.03 
Iteration 15: Best Position: 1.03 
Iteration 16: Best Position: 1.03 
Iteration 17: Best Position: 1.03 
Iteration 18: Best Position: 1.03 
Iteration 19: Best Position: 1.03 
Iteration 20: Best Position: 1.03 
Iteration 21: Best Position: 1.03 
Iteration 22: Best Position: 1.03 
Iteration 23: Best Position: 1.03 
Iteration 24: Best Position: 1.03 
Iteration 25: Best Position: 1.03 
Iteration 26: Best Position: 1.03 
Iteration 27: Best Position: 1.03 
Iteration 28: Best Position: 1.03 
Iteration 29: Best Position: 1.03 
Iteration 30: Best Position: 1.03 
Iteration 31: Best Position: 1.03 
Iteration 32: Best Position: 1.03 
Iteration 33: Best Position: 1.03 
Iteration 34: Best Position: 1.03 
Iteration 35: Best Position: 1.03 
Iteration 36: Best Position: 1.03 
Iteration 37: Best Position: 1.03 
Iteration 38: Best Position: 1.03 
Iteration 39: Best Position: 1.03 
Iteration 40: Best Position: 1.03 
Iteration 41: Best Position: 1.03 
Iteration 42: Best Position: 1.03 
Iteration 43: Best Position: 1.03 
Iteration 44: Best Position: 1.03 
Iteration 45: Best Position: 1.03 
Iteration 46: Best Position: 1.03 
Iteration 47: Best Position: 1.03 
Iteration 48: Best Position: 1.03 
Iteration 49: Best Position: 1.03 
Iteration 50: Best Position: 1.03 
Iteration 51: Best Position: 1.03 
Iteration 52: Best Position: 1.03 
Iteration 53: Best Position: 1.03 
Iteration 54: Best Position: 1.03 
Iteration 55: Best Position: 1.03 
Iteration 56: Best Position: 1.03 
Iteration 57: Best Position: 1.03 
Iteration 58: Best Position: 1.03 
Iteration 59: Best Position: 1.03 
Iteration 60: Best Position: 1.03 
Iteration 61: Best Position: 1.03 
Iteration 62: Best Position: 1.03 
Iteration 63: Best Position: 1.03 
Iteration 64: Best Position: 1.03 
Iteration 65: Best Position: 1.03 
Iteration 66: Best Position: 1.03 
Iteration 67: Best Position: 1.03 
Iteration 68: Best Position: 1.03 
Iteration 69: Best Position: 1.03 
Iteration 70: Best Position: 1.03 
Iteration 71: Best Position: 1.03 
Iteration 72: Best Position: 1.03 
Iteration 73: Best Position: 1.03 
Iteration 74: Best Position: 1.03 
Iteration 75: Best Position: 1.03 
Iteration 76: Best Position: 1.03 
Iteration 77: Best Position: 1.03 
Iteration 78: Best Position: 1.03 
Iteration 79: Best Position: 1.03 
Iteration 80: Best Position: 1.03 
Iteration 81: Best Position: 1.03 
Iteration 82: Best Position: 1.03 
Iteration 83: Best Position: 1.03 
Iteration 84: Best Position: 1.03 
Iteration 85: Best Position: 1.03 
Iteration 86: Best Position: 1.03 
Iteration 87: Best Position: 1.03 
Iteration 88: Best Position: 1.03 
Iteration 89: Best Position: 1.03 
Iteration 90: Best Position: 1.03 
Iteration 91: Best Position: 1.03 
Iteration 92: Best Position: 1.03 
Iteration 93: Best Position: 1.03 
Iteration 94: Best Position: 1.03 
Iteration 95: Best Position: 1.03 
Iteration 96: Best Position: 1.03 
Iteration 97: Best Position: 1.03 
Iteration 98: Best Position: 1.03 
Iteration 99: Best Position: 1.03 

Data fetched from CSV file
Run-time: 4.328792572021484 seconds
Total allocated memory size: 205.2 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 10
No. of (dataset) tuples: 116
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 19
Number of iterations: 100

0. Age
1. BMI
2. Glucose
3. Insulin
4. HOMA
5. Leptin
6. Adiponectin
7. Resistin
8. MCP.1
9. Classification

File: data/breast_cancer.csv

Pattern : Support
['4+', '8+', '3+'] : 0.505
['2+', '8-'] : 0.505
['6-', '8+'] : 0.575
['2+', '5+'] : 0.562
['5+', '8+'] : 0.53
['4+', '7+', '3+'] : 0.516
['5+', '3+', '1+'] : 0.502
['6-', '5+'] : 0.532
['7-', '2-'] : 0.52
['2+', '3+'] : 0.637
['4+', '2+'] : 0.697
['6-', '4+'] : 0.528
['7-', '6+'] : 0.593
['2+', '6-'] : 0.508
['6-', '3+'] : 0.527
['5+', '7+'] : 0.548
['7-', '8-'] : 0.672
['4+', '5+'] : 0.659
['5+', '4+', '3+'] : 0.629


Iterations 
Iteration 0: Best Cost: 1.98 
Iteration 1: Best Cost: 1.98 
Iteration 2: Best Cost: 1.74 
Iteration 3: Best Cost: 1.78 
Iteration 4: Best Cost: 1.89 
Iteration 5: Best Cost: 1.94 
Iteration 6: Best Cost: 1.99 
Iteration 7: Best Cost: 1.88 
Iteration 8: Best Cost: 1.88 
Iteration 9: Best Cost: 1.92 
Iteration 10: Best Cost: 1.92 
Iteration 11: Best Cost: 1.57 
Iteration 12: Best Cost: 1.57 
Iteration 13: Best Cost: 1.57 
Iteration 14: Best Cost: 1.57 
Iteration 15: Best Cost: 1.57 
Iteration 16: Best Cost: 1.43 
Iteration 17: Best Cost: 1.89 
Iteration 18: Best Cost: 1.89 
Iteration 19: Best Cost: 1.89 
Iteration 20: Best Cost: 1.89 
Iteration 21: Best Cost: 1.69 
Iteration 22: Best Cost: 1.69 
Iteration 23: Best Cost: 1.69 
Iteration 24: Best Cost: 1.69 
Iteration 25: Best Cost: 1.69 
Iteration 26: Best Cost: 1.69 
Iteration 27: Best Cost: 1.69 
Iteration 28: Best Cost: 1.97 
Iteration 29: Best Cost: 1.97 
Iteration 30: Best Cost: 1.97 
Iteration 31: Best Cost: 1.9 
Iteration 32: Best Cost: 1.82 
Iteration 33: Best Cost: 1.82 
Iteration 34: Best Cost: 1.49 
Iteration 35: Best Cost: 1.49 
Iteration 36: Best Cost: 1.49 
Iteration 37: Best Cost: 1.49 
Iteration 38: Best Cost: 1.49 
Iteration 39: Best Cost: 1.49 
Iteration 40: Best Cost: 1.49 
Iteration 41: Best Cost: 1.49 
Iteration 42: Best Cost: 1.49 
Iteration 43: Best Cost: 1.49 
Iteration 44: Best Cost: 1.49 
Iteration 45: Best Cost: 1.49 
Iteration 46: Best Cost: 1.49 
Iteration 47: Best Cost: 1.49 
Iteration 48: Best Cost: 1.49 
Iteration 49: Best Cost: 1.49 
Iteration 50: Best Cost: 1.49 
Iteration 51: Best Cost: 1.49 
Iteration 52: Best Cost: 1.49 
Iteration 53: Best Cost: 1.49 
Iteration 54: Best Cost: 1.49 
Iteration 55: Best Cost: 1.49 
Iteration 56: Best Cost: 1.49 
Iteration 57: Best Cost: 1.49 
Iteration 58: Best Cost: 1.49 
Iteration 59: Best Cost: 1.49 
Iteration 60: Best Cost: 1.49 
Iteration 61: Best Cost: 1.49 
Iteration 62: Best Cost: 1.49 
Iteration 63: Best Cost: 1.52 
Iteration 64: Best Cost: 1.52 
Iteration 65: Best Cost: 1.52 
Iteration 66: Best Cost: 1.52 
Iteration 67: Best Cost: 1.52 
Iteration 68: Best Cost: 1.52 
Iteration 69: Best Cost: 1.52 
Iteration 70: Best Cost: 1.52 
Iteration 71: Best Cost: 1.52 
Iteration 72: Best Cost: 1.52 
Iteration 73: Best Cost: 1.52 
Iteration 74: Best Cost: 1.52 
Iteration 75: Best Cost: 1.52 
Iteration 76: Best Cost: 1.52 
Iteration 77: Best Cost: 1.59 
Iteration 78: Best Cost: 1.59 
Iteration 79: Best Cost: 1.59 
Iteration 80: Best Cost: 1.59 
Iteration 81: Best Cost: 1.59 
Iteration 82: Best Cost: 1.59 
Iteration 83: Best Cost: 1.59 
Iteration 84: Best Cost: 1.59 
Iteration 85: Best Cost: 1.59 
Iteration 86: Best Cost: 1.59 
Iteration 87: Best Cost: 1.59 
Iteration 88: Best Cost: 1.59 
Iteration 89: Best Cost: 1.59 
Iteration 90: Best Cost: 1.59 
Iteration 91: Best Cost: 1.59 
Iteration 92: Best Cost: 1.59 
Iteration 93: Best Cost: 1.59 
Iteration 94: Best Cost: 1.59 
Iteration 95: Best Cost: 1.59 
Iteration 96: Best Cost: 1.59 
Iteration 97: Best Cost: 1.59 
Iteration 98: Best Cost: 1.59 
Iteration 99: Best Cost: 1.59 

/nfs/work/pgpm/meso/ant/src/pkg_main/pkg_algorithms/aco_grad.py:148: RuntimeWarning: invalid value encountered in greater
  j = np.nonzero(cum_prob > r)[0][0]
Data fetched from CSV file
Run-time: 848.5126867294312 seconds
Total allocated memory size: 291.6 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 98
No. of (dataset) tuples: 3943
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 36
Number of iterations: 100

0. nr
1. i1_legid
2. i1_rcs_p
3. i1_rcs_e
4. i1_dep_1_p
5. i1_dep_1_e
6. i1_dep_1_place
7. i1_rcf_1_p
8. i1_rcf_1_e
9. i1_rcf_1_place
10. i1_dep_2_p
11. i1_dep_2_e
12. i1_dep_2_place
13. i1_rcf_2_p
14. i1_rcf_2_e
15. i1_rcf_2_place
16. i1_dep_3_p
17. i1_dep_3_e
18. i1_dep_3_place
19. i1_rcf_3_p
20. i1_rcf_3_e
21. i1_rcf_3_place
22. i1_dlv_p
23. i1_dlv_e
24. i1_hops
25. i2_legid
26. i2_rcs_p
27. i2_rcs_e
28. i2_dep_1_p
29. i2_dep_1_e
30. i2_dep_1_place
31. i2_rcf_1_p
32. i2_rcf_1_e
33. i2_rcf_1_place
34. i2_dep_2_p
35. i2_dep_2_e
36. i2_dep_2_place
37. i2_rcf_2_p
38. i2_rcf_2_e
39. i2_rcf_2_place
40. i2_dep_3_p
41. i2_dep_3_e
42. i2_dep_3_place
43. i2_rcf_3_p
44. i2_rcf_3_e
45. i2_rcf_3_place
46. i2_dlv_p
47. i2_dlv_e
48. i2_hops
49. i3_legid
50. i3_rcs_p
51. i3_rcs_e
52. i3_dep_1_p
53. i3_dep_1_e
54. i3_dep_1_place
55. i3_rcf_1_p
56. i3_rcf_1_e
57. i3_rcf_1_place
58. i3_dep_2_p
59. i3_dep_2_e
60. i3_dep_2_place
61. i3_rcf_2_p
62. i3_rcf_2_e
63. i3_rcf_2_place
64. i3_dep_3_p
65. i3_dep_3_e
66. i3_dep_3_place
67. i3_rcf_3_p
68. i3_rcf_3_e
69. i3_rcf_3_place
70. i3_dlv_p
71. i3_dlv_e
72. i3_hops
73. o_legid
74. o_rcs_p
75. o_rcs_e
76. o_dep_1_p
77. o_dep_1_e
78. o_dep_1_place
79. o_rcf_1_p
80. o_rcf_1_e
81. o_rcf_1_place
82. o_dep_2_p
83. o_dep_2_e
84. o_dep_2_place
85. o_rcf_2_p
86. o_rcf_2_e
87. o_rcf_2_place
88. o_dep_3_p
89. o_dep_3_e
90. o_dep_3_place
91. o_rcf_3_p
92. o_rcf_3_e
93. o_rcf_3_place
94. o_dlv_p
95. o_dlv_e
96. o_hops
97. legs

File: data/c2k.csv

Pattern : Support
['7-', '75-'] : 0.52
['95+', '8+'] : 0.506
['23+', '2+'] : 0.539
['1+', '73-'] : 0.51
['2-', '1-'] : 0.506
['74+', '7+'] : 0.523
['5+', '7+', '8+'] : 0.546
['73-', '7+'] : 0.509
['95+', '80-'] : 0.519
['75+', '74+', '77+'] : 0.528
['74+', '3+'] : 0.503
['75+', '74+', '79+'] : 0.522
['2-', '74-'] : 0.516
['2-', '8-'] : 0.634
['80+', '79+'] : 0.827
['77+', '23+'] : 0.503
['23+', '80+'] : 0.53
['73-', '23+'] : 0.513
['23+', '79+'] : 0.5
['5+', '79+'] : 0.513
['3-', '80-'] : 0.506
['2-', '95-'] : 0.509
['3-', '95-'] : 0.504
['73-', '74+'] : 0.511
['95+', '5+'] : 0.51
['5+', '73-'] : 0.506
['5+', '0+'] : 0.503
['5+', '2+', '3+'] : 0.543
['3-', '1-'] : 0.509
['5+', '74+'] : 0.529
['5+', '1+'] : 0.504
['5+', '77+'] : 0.507
['5+', '80+'] : 0.511
['7-', '80-'] : 0.505
['8+', '1-'] : 0.509
['75+', '5+'] : 0.527


Iterations 
Iteration 0: Best Cost: 1.92 
Iteration 1: Best Cost: 1.98 
Iteration 2: Best Cost: 1.86 
Iteration 3: Best Cost: 1.96 
Iteration 4: Best Cost: 1.98 
Iteration 5: Best Cost: 1.91 
Iteration 6: Best Cost: 1.83 
Iteration 7: Best Cost: 1.96 
Iteration 8: Best Cost: 1.93 
Iteration 9: Best Cost: 1.89 
Iteration 10: Best Cost: 1.99 
Iteration 11: Best Cost: 1.92 
Iteration 12: Best Cost: 1.94 
Iteration 13: Best Cost: 1.94 
Iteration 14: Best Cost: 1.94 
Iteration 15: Best Cost: 1.58 
Iteration 16: Best Cost: 1.21 
Iteration 17: Best Cost: 1.99 
Iteration 18: Best Cost: 1.99 
Iteration 19: Best Cost: 1.99 
Iteration 20: Best Cost: 1.89 
Iteration 21: Best Cost: 1.89 
Iteration 22: Best Cost: 1.95 
Iteration 23: Best Cost: 1.95 
Iteration 24: Best Cost: 2.0 
Iteration 25: Best Cost: 1.95 
Iteration 26: Best Cost: 1.95 
Iteration 27: Best Cost: 1.95 
Iteration 28: Best Cost: 1.95 
Iteration 29: Best Cost: 1.98 
Iteration 30: Best Cost: 1.96 
Iteration 31: Best Cost: 1.98 
Iteration 32: Best Cost: 1.96 
Iteration 33: Best Cost: 1.96 
Iteration 34: Best Cost: 1.98 
Iteration 35: Best Cost: 1.99 
Iteration 36: Best Cost: 1.84 
Iteration 37: Best Cost: 1.84 
Iteration 38: Best Cost: 1.96 
Iteration 39: Best Cost: 1.96 
Iteration 40: Best Cost: 1.96 
Iteration 41: Best Cost: 1.89 
Iteration 42: Best Cost: 1.89 
Iteration 43: Best Cost: 1.89 
Iteration 44: Best Cost: 1.89 
Iteration 45: Best Cost: 1.89 
Iteration 46: Best Cost: 1.89 
Iteration 47: Best Cost: 1.98 
Iteration 48: Best Cost: 1.97 
Iteration 49: Best Cost: 1.97 
Iteration 50: Best Cost: 1.96 
Iteration 51: Best Cost: 1.98 
Iteration 52: Best Cost: 1.98 
Iteration 53: Best Cost: 1.98 
Iteration 54: Best Cost: 1.98 
Iteration 55: Best Cost: 1.98 
Iteration 56: Best Cost: 1.98 
Iteration 57: Best Cost: 1.98 
Iteration 58: Best Cost: 1.98 
Iteration 59: Best Cost: 1.98 
Iteration 60: Best Cost: 1.98 
Iteration 61: Best Cost: 1.96 
Iteration 62: Best Cost: 1.96 
Iteration 63: Best Cost: 1.96 
Iteration 64: Best Cost: 1.96 
Iteration 65: Best Cost: 1.96 
Iteration 66: Best Cost: 1.96 
Iteration 67: Best Cost: 1.96 
Iteration 68: Best Cost: 1.96 
Iteration 69: Best Cost: 1.96 
Iteration 70: Best Cost: 1.96 
Iteration 71: Best Cost: 1.96 
Iteration 72: Best Cost: 1.96 
Iteration 73: Best Cost: 1.96 
Iteration 74: Best Cost: 1.96 
Iteration 75: Best Cost: 1.96 
Iteration 76: Best Cost: 1.96 
Iteration 77: Best Cost: 1.96 
Iteration 78: Best Cost: 1.96 
Iteration 79: Best Cost: 1.96 
Iteration 80: Best Cost: 1.96 
Iteration 81: Best Cost: 1.96 
Iteration 82: Best Cost: 1.96 
Iteration 83: Best Cost: 1.96 
Iteration 84: Best Cost: 1.96 
Iteration 85: Best Cost: 1.96 
Iteration 86: Best Cost: 1.96 
Iteration 87: Best Cost: 1.96 
Iteration 88: Best Cost: 1.96 
Iteration 89: Best Cost: 1.9 
Iteration 90: Best Cost: 1.9 
Iteration 91: Best Cost: 1.9 
Iteration 92: Best Cost: 1.9 
Iteration 93: Best Cost: 1.9 
Iteration 94: Best Cost: 1.9 
Iteration 95: Best Cost: 1.9 
Iteration 96: Best Cost: 1.9 
Iteration 97: Best Cost: 1.9 
Iteration 98: Best Cost: 1.9 
Iteration 99: Best Cost: 1.9 

Data fetched from CSV file
Run-time: 302.06051230430603 seconds
Total allocated memory size: 226.6 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 21
No. of (dataset) tuples: 6120
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 45
Number of iterations: 100

0. date_time
1. id_site
2. Tpic
3. Dir
4. Etal
5. Tz
6. Hm0
7. Ts1
8. Ts2
9. Tc
10. Tav
11. Tint
12. Tp
13. EPS2
14. EPS4
15. Qp
16. S2
17. Tref
18. Tw
19. Batt
20. timestamp

File: data/Directio_site6k.csv

Pattern : Support
['12+', '16-', '5+', '8+'] : 0.502
['16-', '12+', '10+', '13+', '14+', '7+'] : 0.531
['10+', '15-', '2+'] : 0.526
['8+', '18+'] : 0.541
['10+', '13+', '7+', '11+', '5+', '14+'] : 0.599
['6+', '11+', '10+', '8+'] : 0.515
['7+', '5+', '3-', '12+'] : 0.516
['15-', '9-'] : 0.541
['11+', '7+', '10+', '12+', '13+'] : 0.602
['15-', '5+'] : 0.552
['11+', '10+', '7+', '16-'] : 0.542
['15-', '6-'] : 0.585
['10+', '5+', '15-'] : 0.534
['12+', '7+', '15-', '10+'] : 0.518
['10+', '5+', '3-', '14+', '13+'] : 0.51
['3-', '5+', '11+', '14+', '8+'] : 0.554
['4+', '5+'] : 0.502
['8+', '10+', '16-'] : 0.629
['13+', '11+', '3-', '14+'] : 0.502
['6+', '13-', '16+'] : 0.526
['16-', '11+', '13+', '10+'] : 0.5
['8+', '9+', '5+', '14+', '10+'] : 0.673
['10+', '11+', '9+', '12+', '5+'] : 0.524
['7+', '6+'] : 0.515
['14+', '11+', '5+', '9+', '8+', '7+'] : 0.586
['4+', '13+', '12+'] : 0.509
['16-', '15-', '14+'] : 0.504
['13+', '8+', '7+', '5+', '10+', '9+', '14+'] : 0.515
['3-', '12+', '10+', '7+'] : 0.568
['9+', '18+'] : 0.547
['10+', '12+', '14+', '11+'] : 0.649
['6+', '2+'] : 0.521
['6+', '3+'] : 0.529
['5+', '6+', '8+', '9+', '11+'] : 0.516
['6+', '10+', '9+', '8+', '5+'] : 0.528
['6+', '12-'] : 0.532
['6+', '4-'] : 0.565
['6+', '8+', '5+', '10+', '11+'] : 0.512
['12+', '13+', '11+', '5+', '14+'] : 0.56
['6+', '14+'] : 0.509
['13+', '7+', '11+', '5+', '12+'] : 0.562
['18+', '15+'] : 0.53
['4+', '9-'] : 0.519
['14+', '7+', '11+', '8+', '3-'] : 0.535
['16-', '14+', '11+'] : 0.57


Iterations 
Iteration 0: Best Cost: 1.99 
Iteration 1: Best Cost: 1.88 
Iteration 2: Best Cost: 1.9 
Iteration 3: Best Cost: 1.85 
Iteration 4: Best Cost: 1.67 
Iteration 5: Best Cost: 1.94 
Iteration 6: Best Cost: 1.94 
Iteration 7: Best Cost: 1.85 
Iteration 8: Best Cost: 1.66 
Iteration 9: Best Cost: 1.81 
Iteration 10: Best Cost: 1.85 
Iteration 11: Best Cost: 1.71 
Iteration 12: Best Cost: 1.87 
Iteration 13: Best Cost: 1.93 
Iteration 14: Best Cost: 1.96 
Iteration 15: Best Cost: 1.81 
Iteration 16: Best Cost: 1.99 
Iteration 17: Best Cost: 1.59 
Iteration 18: Best Cost: 1.99 
Iteration 19: Best Cost: 1.99 
Iteration 20: Best Cost: 1.9 
Iteration 21: Best Cost: 1.9 
Iteration 22: Best Cost: 2.0 
Iteration 23: Best Cost: 1.49 
Iteration 24: Best Cost: 1.91 
Iteration 25: Best Cost: 1.91 
Iteration 26: Best Cost: 1.94 
Iteration 27: Best Cost: 1.71 
Iteration 28: Best Cost: 1.96 
Iteration 29: Best Cost: 1.98 
Iteration 30: Best Cost: 1.94 
Iteration 31: Best Cost: 1.76 
Iteration 32: Best Cost: 1.83 
Iteration 33: Best Cost: 1.83 
Iteration 34: Best Cost: 1.54 
Iteration 35: Best Cost: 1.54 
Iteration 36: Best Cost: 1.92 
Iteration 37: Best Cost: 1.89 
Iteration 38: Best Cost: 1.94 
Iteration 39: Best Cost: 1.89 
Iteration 40: Best Cost: 1.89 
Iteration 41: Best Cost: 1.89 
Iteration 42: Best Cost: 1.88 
Iteration 43: Best Cost: 1.88 
Iteration 44: Best Cost: 1.88 
Iteration 45: Best Cost: 1.77 
Iteration 46: Best Cost: 1.77 
Iteration 47: Best Cost: 1.77 
Iteration 48: Best Cost: 1.77 
Iteration 49: Best Cost: 1.95 
Iteration 50: Best Cost: 1.95 
Iteration 51: Best Cost: 1.95 
Iteration 52: Best Cost: 1.95 
Iteration 53: Best Cost: 1.95 
Iteration 54: Best Cost: 1.79 
Iteration 55: Best Cost: 1.79 
Iteration 56: Best Cost: 1.79 
Iteration 57: Best Cost: 1.96 
Iteration 58: Best Cost: 1.96 
Iteration 59: Best Cost: 1.96 
Iteration 60: Best Cost: 1.96 
Iteration 61: Best Cost: 1.78 
Iteration 62: Best Cost: 1.89 
Iteration 63: Best Cost: 1.89 
Iteration 64: Best Cost: 1.89 
Iteration 65: Best Cost: 1.89 
Iteration 66: Best Cost: 1.89 
Iteration 67: Best Cost: 1.89 
Iteration 68: Best Cost: 1.93 
Iteration 69: Best Cost: 1.87 
Iteration 70: Best Cost: 1.87 
Iteration 71: Best Cost: 1.87 
Iteration 72: Best Cost: 1.87 
Iteration 73: Best Cost: 1.87 
Iteration 74: Best Cost: 1.87 
Iteration 75: Best Cost: 1.87 
Iteration 76: Best Cost: 1.87 
Iteration 77: Best Cost: 1.87 
Iteration 78: Best Cost: 1.87 
Iteration 79: Best Cost: 1.87 
Iteration 80: Best Cost: 1.87 
Iteration 81: Best Cost: 1.87 
Iteration 82: Best Cost: 1.87 
Iteration 83: Best Cost: 1.87 
Iteration 84: Best Cost: 1.87 
Iteration 85: Best Cost: 1.87 
Iteration 86: Best Cost: 1.87 
Iteration 87: Best Cost: 1.87 
Iteration 88: Best Cost: 1.87 
Iteration 89: Best Cost: 1.87 
Iteration 90: Best Cost: 1.87 
Iteration 91: Best Cost: 1.87 
Iteration 92: Best Cost: 1.87 
Iteration 93: Best Cost: 1.87 
Iteration 94: Best Cost: 1.75 
Iteration 95: Best Cost: 1.75 
Iteration 96: Best Cost: 1.75 
Iteration 97: Best Cost: 1.75 
Iteration 98: Best Cost: 1.75 
Iteration 99: Best Cost: 1.75 

/nfs/work/pgpm/meso/ant/src/pkg_main/pkg_algorithms/aco_grad.py:148: RuntimeWarning: invalid value encountered in greater
  j = np.nonzero(cum_prob > r)[0][0]
Data fetched from CSV file
Run-time: 137.3521740436554 seconds
Total allocated memory size: 143.2 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 9
No. of (dataset) tuples: 19443
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 3
Number of iterations: 100

0. Date
1. Time
2. Global_active_power
3. Global_reactive_power
4. Voltage
5. Global_intensity
6. Sub_metering_1
7. Sub_metering_2
8. Sub_metering_3

File: data/UCI_household_power_consumption19k.csv

Pattern : Support
['3+', '2+'] : 0.53
['5+', '2+', '4-'] : 0.708
['3+', '2+', '5+'] : 0.52


Iterations 
Iteration 0: Best Cost: inf 
Iteration 1: Best Cost: inf 
Iteration 2: Best Cost: 1.89 
Iteration 3: Best Cost: 1.89 
Iteration 4: Best Cost: 1.89 
Iteration 5: Best Cost: 1.89 
Iteration 6: Best Cost: 1.89 
Iteration 7: Best Cost: 1.41 
Iteration 8: Best Cost: 1.41 
Iteration 9: Best Cost: 1.41 
Iteration 10: Best Cost: 1.41 
Iteration 11: Best Cost: 1.41 
Iteration 12: Best Cost: 1.92 
Iteration 13: Best Cost: 1.92 
Iteration 14: Best Cost: 1.92 
Iteration 15: Best Cost: 1.92 
Iteration 16: Best Cost: 1.92 
Iteration 17: Best Cost: 1.92 
Iteration 18: Best Cost: 1.92 
Iteration 19: Best Cost: 1.92 
Iteration 20: Best Cost: 1.92 
Iteration 21: Best Cost: 1.92 
Iteration 22: Best Cost: 1.92 
Iteration 23: Best Cost: 1.92 
Iteration 24: Best Cost: 1.92 
Iteration 25: Best Cost: 1.92 
Iteration 26: Best Cost: 1.92 
Iteration 27: Best Cost: 1.92 
Iteration 28: Best Cost: 1.92 
Iteration 29: Best Cost: 1.92 
Iteration 30: Best Cost: 1.92 
Iteration 31: Best Cost: 1.92 
Iteration 32: Best Cost: 1.92 
Iteration 33: Best Cost: 1.92 
Iteration 34: Best Cost: 1.92 
Iteration 35: Best Cost: 1.92 
Iteration 36: Best Cost: 1.92 
Iteration 37: Best Cost: 1.92 
Iteration 38: Best Cost: 1.92 
Iteration 39: Best Cost: 1.92 
Iteration 40: Best Cost: 1.92 
Iteration 41: Best Cost: 1.92 
Iteration 42: Best Cost: 1.92 
Iteration 43: Best Cost: 1.92 
Iteration 44: Best Cost: 1.92 
Iteration 45: Best Cost: 1.92 
Iteration 46: Best Cost: 1.92 
Iteration 47: Best Cost: 1.92 
Iteration 48: Best Cost: 1.92 
Iteration 49: Best Cost: 1.92 
Iteration 50: Best Cost: 1.92 
Iteration 51: Best Cost: 1.92 
Iteration 52: Best Cost: 1.92 
Iteration 53: Best Cost: 1.92 
Iteration 54: Best Cost: 1.92 
Iteration 55: Best Cost: 1.92 
Iteration 56: Best Cost: 1.92 
Iteration 57: Best Cost: 1.92 
Iteration 58: Best Cost: 1.92 
Iteration 59: Best Cost: 1.92 
Iteration 60: Best Cost: 1.92 
Iteration 61: Best Cost: 1.92 
Iteration 62: Best Cost: 1.92 
Iteration 63: Best Cost: 1.92 
Iteration 64: Best Cost: 1.92 
Iteration 65: Best Cost: 1.92 
Iteration 66: Best Cost: 1.92 
Iteration 67: Best Cost: 1.92 
Iteration 68: Best Cost: 1.92 
Iteration 69: Best Cost: 1.92 
Iteration 70: Best Cost: 1.92 
Iteration 71: Best Cost: 1.92 
Iteration 72: Best Cost: 1.92 
Iteration 73: Best Cost: 1.92 
Iteration 74: Best Cost: 1.92 
Iteration 75: Best Cost: 1.92 
Iteration 76: Best Cost: 1.92 
Iteration 77: Best Cost: 1.92 
Iteration 78: Best Cost: 1.92 
Iteration 79: Best Cost: 1.92 
Iteration 80: Best Cost: 1.92 
Iteration 81: Best Cost: 1.92 
Iteration 82: Best Cost: 1.92 
Iteration 83: Best Cost: 1.92 
Iteration 84: Best Cost: 1.92 
Iteration 85: Best Cost: 1.92 
Iteration 86: Best Cost: 1.92 
Iteration 87: Best Cost: 1.92 
Iteration 88: Best Cost: 1.92 
Iteration 89: Best Cost: 1.92 
Iteration 90: Best Cost: 1.92 
Iteration 91: Best Cost: 1.92 
Iteration 92: Best Cost: 1.92 
Iteration 93: Best Cost: 1.92 
Iteration 94: Best Cost: 1.92 
Iteration 95: Best Cost: 1.92 
Iteration 96: Best Cost: 1.92 
Iteration 97: Best Cost: 1.92 
Iteration 98: Best Cost: 1.92 
Iteration 99: Best Cost: 1.92 

Data fetched from CSV file
Run-time: 1.8940231800079346 seconds
Total allocated memory size: 101.1 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 10
No. of (dataset) tuples: 116
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 2
Number of iterations: 100

0. Age
1. BMI
2. Glucose
3. Insulin
4. HOMA
5. Leptin
6. Adiponectin
7. Resistin
8. MCP.1
9. Classification

File: data/breast_cancer.csv

Pattern : Support
['0+', '2+'] : 0.5434782608695652
['1+', '5+'] : 0.7299270072992701


Iterations 
Iteration 0: Best Cost: 1.84 
Iteration 1: Best Cost: 1.84 
Iteration 2: Best Cost: 1.84 
Iteration 3: Best Cost: 1.84 
Iteration 4: Best Cost: 1.84 
Iteration 5: Best Cost: 1.84 
Iteration 6: Best Cost: 1.37 
Iteration 7: Best Cost: 1.37 
Iteration 8: Best Cost: 1.37 
Iteration 9: Best Cost: 1.37 
Iteration 10: Best Cost: 1.37 
Iteration 11: Best Cost: 1.37 
Iteration 12: Best Cost: 1.37 
Iteration 13: Best Cost: 1.37 
Iteration 14: Best Cost: 1.37 
Iteration 15: Best Cost: 1.37 
Iteration 16: Best Cost: 1.37 
Iteration 17: Best Cost: 1.37 
Iteration 18: Best Cost: 1.37 
Iteration 19: Best Cost: 1.37 
Iteration 20: Best Cost: 1.37 
Iteration 21: Best Cost: 1.37 
Iteration 22: Best Cost: 1.37 
Iteration 23: Best Cost: 1.37 
Iteration 24: Best Cost: 1.37 
Iteration 25: Best Cost: 1.37 
Iteration 26: Best Cost: 1.37 
Iteration 27: Best Cost: 1.37 
Iteration 28: Best Cost: 1.37 
Iteration 29: Best Cost: 1.37 
Iteration 30: Best Cost: 1.37 
Iteration 31: Best Cost: 1.37 
Iteration 32: Best Cost: 1.37 
Iteration 33: Best Cost: 1.37 
Iteration 34: Best Cost: 1.37 
Iteration 35: Best Cost: 1.37 
Iteration 36: Best Cost: 1.37 
Iteration 37: Best Cost: 1.37 
Iteration 38: Best Cost: 1.37 
Iteration 39: Best Cost: 1.37 
Iteration 40: Best Cost: 1.37 
Iteration 41: Best Cost: 1.37 
Iteration 42: Best Cost: 1.37 
Iteration 43: Best Cost: 1.37 
Iteration 44: Best Cost: 1.37 
Iteration 45: Best Cost: 1.37 
Iteration 46: Best Cost: 1.37 
Iteration 47: Best Cost: 1.37 
Iteration 48: Best Cost: 1.37 
Iteration 49: Best Cost: 1.37 
Iteration 50: Best Cost: 1.37 
Iteration 51: Best Cost: 1.37 
Iteration 52: Best Cost: 1.37 
Iteration 53: Best Cost: 1.37 
Iteration 54: Best Cost: 1.37 
Iteration 55: Best Cost: 1.37 
Iteration 56: Best Cost: 1.37 
Iteration 57: Best Cost: 1.37 
Iteration 58: Best Cost: 1.37 
Iteration 59: Best Cost: 1.37 
Iteration 60: Best Cost: 1.37 
Iteration 61: Best Cost: 1.37 
Iteration 62: Best Cost: 1.37 
Iteration 63: Best Cost: 1.37 
Iteration 64: Best Cost: 1.37 
Iteration 65: Best Cost: 1.37 
Iteration 66: Best Cost: 1.37 
Iteration 67: Best Cost: 1.37 
Iteration 68: Best Cost: 1.37 
Iteration 69: Best Cost: 1.37 
Iteration 70: Best Cost: 1.37 
Iteration 71: Best Cost: 1.37 
Iteration 72: Best Cost: 1.37 
Iteration 73: Best Cost: 1.37 
Iteration 74: Best Cost: 1.37 
Iteration 75: Best Cost: 1.37 
Iteration 76: Best Cost: 1.37 
Iteration 77: Best Cost: 1.37 
Iteration 78: Best Cost: 1.37 
Iteration 79: Best Cost: 1.37 
Iteration 80: Best Cost: 1.37 
Iteration 81: Best Cost: 1.37 
Iteration 82: Best Cost: 1.37 
Iteration 83: Best Cost: 1.37 
Iteration 84: Best Cost: 1.37 
Iteration 85: Best Cost: 1.37 
Iteration 86: Best Cost: 1.37 
Iteration 87: Best Cost: 1.37 
Iteration 88: Best Cost: 1.37 
Iteration 89: Best Cost: 1.37 
Iteration 90: Best Cost: 1.37 
Iteration 91: Best Cost: 1.37 
Iteration 92: Best Cost: 1.37 
Iteration 93: Best Cost: 1.37 
Iteration 94: Best Cost: 1.37 
Iteration 95: Best Cost: 1.37 
Iteration 96: Best Cost: 1.37 
Iteration 97: Best Cost: 1.37 
Iteration 98: Best Cost: 1.37 
Iteration 99: Best Cost: 1.37 

Data fetched from CSV file
Run-time: 2153.2968668937683 seconds
Total allocated memory size: 129.3 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 98
No. of (dataset) tuples: 3943
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. nr
1. i1_legid
2. i1_rcs_p
3. i1_rcs_e
4. i1_dep_1_p
5. i1_dep_1_e
6. i1_dep_1_place
7. i1_rcf_1_p
8. i1_rcf_1_e
9. i1_rcf_1_place
10. i1_dep_2_p
11. i1_dep_2_e
12. i1_dep_2_place
13. i1_rcf_2_p
14. i1_rcf_2_e
15. i1_rcf_2_place
16. i1_dep_3_p
17. i1_dep_3_e
18. i1_dep_3_place
19. i1_rcf_3_p
20. i1_rcf_3_e
21. i1_rcf_3_place
22. i1_dlv_p
23. i1_dlv_e
24. i1_hops
25. i2_legid
26. i2_rcs_p
27. i2_rcs_e
28. i2_dep_1_p
29. i2_dep_1_e
30. i2_dep_1_place
31. i2_rcf_1_p
32. i2_rcf_1_e
33. i2_rcf_1_place
34. i2_dep_2_p
35. i2_dep_2_e
36. i2_dep_2_place
37. i2_rcf_2_p
38. i2_rcf_2_e
39. i2_rcf_2_place
40. i2_dep_3_p
41. i2_dep_3_e
42. i2_dep_3_place
43. i2_rcf_3_p
44. i2_rcf_3_e
45. i2_rcf_3_place
46. i2_dlv_p
47. i2_dlv_e
48. i2_hops
49. i3_legid
50. i3_rcs_p
51. i3_rcs_e
52. i3_dep_1_p
53. i3_dep_1_e
54. i3_dep_1_place
55. i3_rcf_1_p
56. i3_rcf_1_e
57. i3_rcf_1_place
58. i3_dep_2_p
59. i3_dep_2_e
60. i3_dep_2_place
61. i3_rcf_2_p
62. i3_rcf_2_e
63. i3_rcf_2_place
64. i3_dep_3_p
65. i3_dep_3_e
66. i3_dep_3_place
67. i3_rcf_3_p
68. i3_rcf_3_e
69. i3_rcf_3_place
70. i3_dlv_p
71. i3_dlv_e
72. i3_hops
73. o_legid
74. o_rcs_p
75. o_rcs_e
76. o_dep_1_p
77. o_dep_1_e
78. o_dep_1_place
79. o_rcf_1_p
80. o_rcf_1_e
81. o_rcf_1_place
82. o_dep_2_p
83. o_dep_2_e
84. o_dep_2_place
85. o_rcf_2_p
86. o_rcf_2_e
87. o_rcf_2_place
88. o_dep_3_p
89. o_dep_3_e
90. o_dep_3_place
91. o_rcf_3_p
92. o_rcf_3_e
93. o_rcf_3_place
94. o_dlv_p
95. o_dlv_e
96. o_hops
97. legs

File: data/c2k.csv

Pattern : Support
['2+', '5+'] : 0.7042253521126761


Iterations 
Iteration 0: Best Cost: 1.42 
Iteration 1: Best Cost: 1.42 
Iteration 2: Best Cost: 1.42 
Iteration 3: Best Cost: 1.42 
Iteration 4: Best Cost: 1.42 
Iteration 5: Best Cost: 1.42 
Iteration 6: Best Cost: 1.42 
Iteration 7: Best Cost: 1.42 
Iteration 8: Best Cost: 1.42 
Iteration 9: Best Cost: 1.42 
Iteration 10: Best Cost: 1.42 
Iteration 11: Best Cost: 1.42 
Iteration 12: Best Cost: 1.42 
Iteration 13: Best Cost: 1.42 
Iteration 14: Best Cost: 1.42 
Iteration 15: Best Cost: 1.42 
Iteration 16: Best Cost: 1.42 
Iteration 17: Best Cost: 1.42 
Iteration 18: Best Cost: 1.42 
Iteration 19: Best Cost: 1.42 
Iteration 20: Best Cost: 1.42 
Iteration 21: Best Cost: 1.42 
Iteration 22: Best Cost: 1.42 
Iteration 23: Best Cost: 1.42 
Iteration 24: Best Cost: 1.42 
Iteration 25: Best Cost: 1.42 
Iteration 26: Best Cost: 1.42 
Iteration 27: Best Cost: 1.42 
Iteration 28: Best Cost: 1.42 
Iteration 29: Best Cost: 1.42 
Iteration 30: Best Cost: 1.42 
Iteration 31: Best Cost: 1.42 
Iteration 32: Best Cost: 1.42 
Iteration 33: Best Cost: 1.42 
Iteration 34: Best Cost: 1.42 
Iteration 35: Best Cost: 1.42 
Iteration 36: Best Cost: 1.42 
Iteration 37: Best Cost: 1.42 
Iteration 38: Best Cost: 1.42 
Iteration 39: Best Cost: 1.42 
Iteration 40: Best Cost: 1.42 
Iteration 41: Best Cost: 1.42 
Iteration 42: Best Cost: 1.42 
Iteration 43: Best Cost: 1.42 
Iteration 44: Best Cost: 1.42 
Iteration 45: Best Cost: 1.42 
Iteration 46: Best Cost: 1.42 
Iteration 47: Best Cost: 1.42 
Iteration 48: Best Cost: 1.42 
Iteration 49: Best Cost: 1.42 
Iteration 50: Best Cost: 1.42 
Iteration 51: Best Cost: 1.42 
Iteration 52: Best Cost: 1.42 
Iteration 53: Best Cost: 1.42 
Iteration 54: Best Cost: 1.42 
Iteration 55: Best Cost: 1.42 
Iteration 56: Best Cost: 1.42 
Iteration 57: Best Cost: 1.42 
Iteration 58: Best Cost: 1.42 
Iteration 59: Best Cost: 1.42 
Iteration 60: Best Cost: 1.42 
Iteration 61: Best Cost: 1.42 
Iteration 62: Best Cost: 1.42 
Iteration 63: Best Cost: 1.42 
Iteration 64: Best Cost: 1.42 
Iteration 65: Best Cost: 1.42 
Iteration 66: Best Cost: 1.42 
Iteration 67: Best Cost: 1.42 
Iteration 68: Best Cost: 1.42 
Iteration 69: Best Cost: 1.42 
Iteration 70: Best Cost: 1.42 
Iteration 71: Best Cost: 1.42 
Iteration 72: Best Cost: 1.42 
Iteration 73: Best Cost: 1.42 
Iteration 74: Best Cost: 1.42 
Iteration 75: Best Cost: 1.42 
Iteration 76: Best Cost: 1.42 
Iteration 77: Best Cost: 1.42 
Iteration 78: Best Cost: 1.42 
Iteration 79: Best Cost: 1.42 
Iteration 80: Best Cost: 1.42 
Iteration 81: Best Cost: 1.42 
Iteration 82: Best Cost: 1.42 
Iteration 83: Best Cost: 1.42 
Iteration 84: Best Cost: 1.42 
Iteration 85: Best Cost: 1.42 
Iteration 86: Best Cost: 1.42 
Iteration 87: Best Cost: 1.42 
Iteration 88: Best Cost: 1.42 
Iteration 89: Best Cost: 1.42 
Iteration 90: Best Cost: 1.42 
Iteration 91: Best Cost: 1.42 
Iteration 92: Best Cost: 1.42 
Iteration 93: Best Cost: 1.42 
Iteration 94: Best Cost: 1.42 
Iteration 95: Best Cost: 1.42 
Iteration 96: Best Cost: 1.42 
Iteration 97: Best Cost: 1.42 
Iteration 98: Best Cost: 1.42 
Iteration 99: Best Cost: 1.42 

Data fetched from CSV file
Run-time: 1821.1809573173523 seconds
Total allocated memory size: 122.4 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 21
No. of (dataset) tuples: 6120
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 2
Number of iterations: 100

0. date_time
1. id_site
2. Tpic
3. Dir
4. Etal
5. Tz
6. Hm0
7. Ts1
8. Ts2
9. Tc
10. Tav
11. Tint
12. Tp
13. EPS2
14. EPS4
15. Qp
16. S2
17. Tref
18. Tw
19. Batt
20. timestamp

File: data/Directio_site6k.csv

Pattern : Support
['2-', '5-', '7-', '10-', '14-'] : 0.6756756756756757
['2-', '8-', '14-'] : 0.7462686567164178


Iterations 
Iteration 0: Best Cost: 1.48 
Iteration 1: Best Cost: 1.34 
Iteration 2: Best Cost: 1.34 
Iteration 3: Best Cost: 1.34 
Iteration 4: Best Cost: 1.32 
Iteration 5: Best Cost: 1.23 
Iteration 6: Best Cost: 1.22 
Iteration 7: Best Cost: 1.22 
Iteration 8: Best Cost: 1.22 
Iteration 9: Best Cost: 1.22 
Iteration 10: Best Cost: 1.22 
Iteration 11: Best Cost: 1.22 
Iteration 12: Best Cost: 1.22 
Iteration 13: Best Cost: 1.22 
Iteration 14: Best Cost: 1.22 
Iteration 15: Best Cost: 1.22 
Iteration 16: Best Cost: 1.22 
Iteration 17: Best Cost: 1.22 
Iteration 18: Best Cost: 1.22 
Iteration 19: Best Cost: 1.22 
Iteration 20: Best Cost: 1.22 
Iteration 21: Best Cost: 1.22 
Iteration 22: Best Cost: 1.22 
Iteration 23: Best Cost: 1.22 
Iteration 24: Best Cost: 1.22 
Iteration 25: Best Cost: 1.22 
Iteration 26: Best Cost: 1.22 
Iteration 27: Best Cost: 1.22 
Iteration 28: Best Cost: 1.22 
Iteration 29: Best Cost: 1.22 
Iteration 30: Best Cost: 1.22 
Iteration 31: Best Cost: 1.22 
Iteration 32: Best Cost: 1.22 
Iteration 33: Best Cost: 1.22 
Iteration 34: Best Cost: 1.22 
Iteration 35: Best Cost: 1.22 
Iteration 36: Best Cost: 1.22 
Iteration 37: Best Cost: 1.22 
Iteration 38: Best Cost: 1.22 
Iteration 39: Best Cost: 1.22 
Iteration 40: Best Cost: 1.22 
Iteration 41: Best Cost: 1.22 
Iteration 42: Best Cost: 1.22 
Iteration 43: Best Cost: 1.22 
Iteration 44: Best Cost: 1.22 
Iteration 45: Best Cost: 1.22 
Iteration 46: Best Cost: 1.22 
Iteration 47: Best Cost: 1.22 
Iteration 48: Best Cost: 1.22 
Iteration 49: Best Cost: 1.22 
Iteration 50: Best Cost: 1.22 
Iteration 51: Best Cost: 1.22 
Iteration 52: Best Cost: 1.22 
Iteration 53: Best Cost: 1.22 
Iteration 54: Best Cost: 1.22 
Iteration 55: Best Cost: 1.22 
Iteration 56: Best Cost: 1.22 
Iteration 57: Best Cost: 1.22 
Iteration 58: Best Cost: 1.22 
Iteration 59: Best Cost: 1.22 
Iteration 60: Best Cost: 1.22 
Iteration 61: Best Cost: 1.22 
Iteration 62: Best Cost: 1.22 
Iteration 63: Best Cost: 1.22 
Iteration 64: Best Cost: 1.22 
Iteration 65: Best Cost: 1.22 
Iteration 66: Best Cost: 1.22 
Iteration 67: Best Cost: 1.22 
Iteration 68: Best Cost: 1.22 
Iteration 69: Best Cost: 1.22 
Iteration 70: Best Cost: 1.22 
Iteration 71: Best Cost: 1.22 
Iteration 72: Best Cost: 1.22 
Iteration 73: Best Cost: 1.22 
Iteration 74: Best Cost: 1.22 
Iteration 75: Best Cost: 1.22 
Iteration 76: Best Cost: 1.22 
Iteration 77: Best Cost: 1.22 
Iteration 78: Best Cost: 1.22 
Iteration 79: Best Cost: 1.22 
Iteration 80: Best Cost: 1.22 
Iteration 81: Best Cost: 1.22 
Iteration 82: Best Cost: 1.22 
Iteration 83: Best Cost: 1.22 
Iteration 84: Best Cost: 1.22 
Iteration 85: Best Cost: 1.22 
Iteration 86: Best Cost: 1.22 
Iteration 87: Best Cost: 1.22 
Iteration 88: Best Cost: 1.22 
Iteration 89: Best Cost: 1.22 
Iteration 90: Best Cost: 1.22 
Iteration 91: Best Cost: 1.22 
Iteration 92: Best Cost: 1.22 
Iteration 93: Best Cost: 1.22 
Iteration 94: Best Cost: 1.22 
Iteration 95: Best Cost: 1.22 
Iteration 96: Best Cost: 1.22 
Iteration 97: Best Cost: 1.22 
Iteration 98: Best Cost: 1.22 
Iteration 99: Best Cost: 1.22 

Data fetched from CSV file
Run-time: 5058.927378177643 seconds
Total allocated memory size: 111.8 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 9
No. of (dataset) tuples: 19443
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. Date
1. Time
2. Global_active_power
3. Global_reactive_power
4. Voltage
5. Global_intensity
6. Sub_metering_1
7. Sub_metering_2
8. Sub_metering_3

File: data/UCI_household_power_consumption19k.csv

Pattern : Support
['2+', '5+'] : 0.970873786407767


Iterations 
Iteration 0: Best Cost: 1.03 
Iteration 1: Best Cost: 1.03 
Iteration 2: Best Cost: 1.03 
Iteration 3: Best Cost: 1.03 
Iteration 4: Best Cost: 1.03 
Iteration 5: Best Cost: 1.03 
Iteration 6: Best Cost: 1.03 
Iteration 7: Best Cost: 1.03 
Iteration 8: Best Cost: 1.03 
Iteration 9: Best Cost: 1.03 
Iteration 10: Best Cost: 1.03 
Iteration 11: Best Cost: 1.03 
Iteration 12: Best Cost: 1.03 
Iteration 13: Best Cost: 1.03 
Iteration 14: Best Cost: 1.03 
Iteration 15: Best Cost: 1.03 
Iteration 16: Best Cost: 1.03 
Iteration 17: Best Cost: 1.03 
Iteration 18: Best Cost: 1.03 
Iteration 19: Best Cost: 1.03 
Iteration 20: Best Cost: 1.03 
Iteration 21: Best Cost: 1.03 
Iteration 22: Best Cost: 1.03 
Iteration 23: Best Cost: 1.03 
Iteration 24: Best Cost: 1.03 
Iteration 25: Best Cost: 1.03 
Iteration 26: Best Cost: 1.03 
Iteration 27: Best Cost: 1.03 
Iteration 28: Best Cost: 1.03 
Iteration 29: Best Cost: 1.03 
Iteration 30: Best Cost: 1.03 
Iteration 31: Best Cost: 1.03 
Iteration 32: Best Cost: 1.03 
Iteration 33: Best Cost: 1.03 
Iteration 34: Best Cost: 1.03 
Iteration 35: Best Cost: 1.03 
Iteration 36: Best Cost: 1.03 
Iteration 37: Best Cost: 1.03 
Iteration 38: Best Cost: 1.03 
Iteration 39: Best Cost: 1.03 
Iteration 40: Best Cost: 1.03 
Iteration 41: Best Cost: 1.03 
Iteration 42: Best Cost: 1.03 
Iteration 43: Best Cost: 1.03 
Iteration 44: Best Cost: 1.03 
Iteration 45: Best Cost: 1.03 
Iteration 46: Best Cost: 1.03 
Iteration 47: Best Cost: 1.03 
Iteration 48: Best Cost: 1.03 
Iteration 49: Best Cost: 1.03 
Iteration 50: Best Cost: 1.03 
Iteration 51: Best Cost: 1.03 
Iteration 52: Best Cost: 1.03 
Iteration 53: Best Cost: 1.03 
Iteration 54: Best Cost: 1.03 
Iteration 55: Best Cost: 1.03 
Iteration 56: Best Cost: 1.03 
Iteration 57: Best Cost: 1.03 
Iteration 58: Best Cost: 1.03 
Iteration 59: Best Cost: 1.03 
Iteration 60: Best Cost: 1.03 
Iteration 61: Best Cost: 1.03 
Iteration 62: Best Cost: 1.03 
Iteration 63: Best Cost: 1.03 
Iteration 64: Best Cost: 1.03 
Iteration 65: Best Cost: 1.03 
Iteration 66: Best Cost: 1.03 
Iteration 67: Best Cost: 1.03 
Iteration 68: Best Cost: 1.03 
Iteration 69: Best Cost: 1.03 
Iteration 70: Best Cost: 1.03 
Iteration 71: Best Cost: 1.03 
Iteration 72: Best Cost: 1.03 
Iteration 73: Best Cost: 1.03 
Iteration 74: Best Cost: 1.03 
Iteration 75: Best Cost: 1.03 
Iteration 76: Best Cost: 1.03 
Iteration 77: Best Cost: 1.03 
Iteration 78: Best Cost: 1.03 
Iteration 79: Best Cost: 1.03 
Iteration 80: Best Cost: 1.03 
Iteration 81: Best Cost: 1.03 
Iteration 82: Best Cost: 1.03 
Iteration 83: Best Cost: 1.03 
Iteration 84: Best Cost: 1.03 
Iteration 85: Best Cost: 1.03 
Iteration 86: Best Cost: 1.03 
Iteration 87: Best Cost: 1.03 
Iteration 88: Best Cost: 1.03 
Iteration 89: Best Cost: 1.03 
Iteration 90: Best Cost: 1.03 
Iteration 91: Best Cost: 1.03 
Iteration 92: Best Cost: 1.03 
Iteration 93: Best Cost: 1.03 
Iteration 94: Best Cost: 1.03 
Iteration 95: Best Cost: 1.03 
Iteration 96: Best Cost: 1.03 
Iteration 97: Best Cost: 1.03 
Iteration 98: Best Cost: 1.03 
Iteration 99: Best Cost: 1.03 

Data fetched from CSV file
Run-time: 0.8938946723937988 seconds
Total allocated memory size: 85.2 KiB
Algorithm: PSO-GRAANK (v1.0)
No. of (dataset) attributes: 10
No. of (dataset) tuples: 116
Velocity coeff.: 0.5
C1 coeff.: 0.1
C2 coeff.: 0.5
No. of particles: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. Age
1. BMI
2. Glucose
3. Insulin
4. HOMA
5. Leptin
6. Adiponectin
7. Resistin
8. MCP.1
9. Classification

File: data/breast_cancer.csv

Pattern : Support
['1+', '4+'] : 0.6134969325153374


Iterations 
Iteration 0: Best Position: 1.63 
Iteration 1: Best Position: 1.63 
Iteration 2: Best Position: 1.63 
Iteration 3: Best Position: 1.63 
Iteration 4: Best Position: 1.63 
Iteration 5: Best Position: 1.63 
Iteration 6: Best Position: 1.63 
Iteration 7: Best Position: 1.63 
Iteration 8: Best Position: 1.63 
Iteration 9: Best Position: 1.63 
Iteration 10: Best Position: 1.63 
Iteration 11: Best Position: 1.63 
Iteration 12: Best Position: 1.63 
Iteration 13: Best Position: 1.63 
Iteration 14: Best Position: 1.63 
Iteration 15: Best Position: 1.63 
Iteration 16: Best Position: 1.63 
Iteration 17: Best Position: 1.63 
Iteration 18: Best Position: 1.63 
Iteration 19: Best Position: 1.63 
Iteration 20: Best Position: 1.63 
Iteration 21: Best Position: 1.63 
Iteration 22: Best Position: 1.63 
Iteration 23: Best Position: 1.63 
Iteration 24: Best Position: 1.63 
Iteration 25: Best Position: 1.63 
Iteration 26: Best Position: 1.63 
Iteration 27: Best Position: 1.63 
Iteration 28: Best Position: 1.63 
Iteration 29: Best Position: 1.63 
Iteration 30: Best Position: 1.63 
Iteration 31: Best Position: 1.63 
Iteration 32: Best Position: 1.63 
Iteration 33: Best Position: 1.63 
Iteration 34: Best Position: 1.63 
Iteration 35: Best Position: 1.63 
Iteration 36: Best Position: 1.63 
Iteration 37: Best Position: 1.63 
Iteration 38: Best Position: 1.63 
Iteration 39: Best Position: 1.63 
Iteration 40: Best Position: 1.63 
Iteration 41: Best Position: 1.63 
Iteration 42: Best Position: 1.63 
Iteration 43: Best Position: 1.63 
Iteration 44: Best Position: 1.63 
Iteration 45: Best Position: 1.63 
Iteration 46: Best Position: 1.63 
Iteration 47: Best Position: 1.63 
Iteration 48: Best Position: 1.63 
Iteration 49: Best Position: 1.63 
Iteration 50: Best Position: 1.63 
Iteration 51: Best Position: 1.63 
Iteration 52: Best Position: 1.63 
Iteration 53: Best Position: 1.63 
Iteration 54: Best Position: 1.63 
Iteration 55: Best Position: 1.63 
Iteration 56: Best Position: 1.63 
Iteration 57: Best Position: 1.63 
Iteration 58: Best Position: 1.63 
Iteration 59: Best Position: 1.63 
Iteration 60: Best Position: 1.63 
Iteration 61: Best Position: 1.63 
Iteration 62: Best Position: 1.63 
Iteration 63: Best Position: 1.63 
Iteration 64: Best Position: 1.63 
Iteration 65: Best Position: 1.63 
Iteration 66: Best Position: 1.63 
Iteration 67: Best Position: 1.63 
Iteration 68: Best Position: 1.63 
Iteration 69: Best Position: 1.63 
Iteration 70: Best Position: 1.63 
Iteration 71: Best Position: 1.63 
Iteration 72: Best Position: 1.63 
Iteration 73: Best Position: 1.63 
Iteration 74: Best Position: 1.63 
Iteration 75: Best Position: 1.63 
Iteration 76: Best Position: 1.63 
Iteration 77: Best Position: 1.63 
Iteration 78: Best Position: 1.63 
Iteration 79: Best Position: 1.63 
Iteration 80: Best Position: 1.63 
Iteration 81: Best Position: 1.63 
Iteration 82: Best Position: 1.63 
Iteration 83: Best Position: 1.63 
Iteration 84: Best Position: 1.63 
Iteration 85: Best Position: 1.63 
Iteration 86: Best Position: 1.63 
Iteration 87: Best Position: 1.63 
Iteration 88: Best Position: 1.63 
Iteration 89: Best Position: 1.63 
Iteration 90: Best Position: 1.63 
Iteration 91: Best Position: 1.63 
Iteration 92: Best Position: 1.63 
Iteration 93: Best Position: 1.63 
Iteration 94: Best Position: 1.63 
Iteration 95: Best Position: 1.63 
Iteration 96: Best Position: 1.63 
Iteration 97: Best Position: 1.63 
Iteration 98: Best Position: 1.63 
Iteration 99: Best Position: 1.63 

Data fetched from CSV file
Run-time: 1112.1228346824646 seconds
Total allocated memory size: 115.4 KiB
Algorithm: PSO-GRAANK (v1.0)
No. of (dataset) attributes: 98
No. of (dataset) tuples: 3943
Velocity coeff.: 0.5
C1 coeff.: 0.1
C2 coeff.: 0.5
No. of particles: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 2
Number of iterations: 100

0. nr
1. i1_legid
2. i1_rcs_p
3. i1_rcs_e
4. i1_dep_1_p
5. i1_dep_1_e
6. i1_dep_1_place
7. i1_rcf_1_p
8. i1_rcf_1_e
9. i1_rcf_1_place
10. i1_dep_2_p
11. i1_dep_2_e
12. i1_dep_2_place
13. i1_rcf_2_p
14. i1_rcf_2_e
15. i1_rcf_2_place
16. i1_dep_3_p
17. i1_dep_3_e
18. i1_dep_3_place
19. i1_rcf_3_p
20. i1_rcf_3_e
21. i1_rcf_3_place
22. i1_dlv_p
23. i1_dlv_e
24. i1_hops
25. i2_legid
26. i2_rcs_p
27. i2_rcs_e
28. i2_dep_1_p
29. i2_dep_1_e
30. i2_dep_1_place
31. i2_rcf_1_p
32. i2_rcf_1_e
33. i2_rcf_1_place
34. i2_dep_2_p
35. i2_dep_2_e
36. i2_dep_2_place
37. i2_rcf_2_p
38. i2_rcf_2_e
39. i2_rcf_2_place
40. i2_dep_3_p
41. i2_dep_3_e
42. i2_dep_3_place
43. i2_rcf_3_p
44. i2_rcf_3_e
45. i2_rcf_3_place
46. i2_dlv_p
47. i2_dlv_e
48. i2_hops
49. i3_legid
50. i3_rcs_p
51. i3_rcs_e
52. i3_dep_1_p
53. i3_dep_1_e
54. i3_dep_1_place
55. i3_rcf_1_p
56. i3_rcf_1_e
57. i3_rcf_1_place
58. i3_dep_2_p
59. i3_dep_2_e
60. i3_dep_2_place
61. i3_rcf_2_p
62. i3_rcf_2_e
63. i3_rcf_2_place
64. i3_dep_3_p
65. i3_dep_3_e
66. i3_dep_3_place
67. i3_rcf_3_p
68. i3_rcf_3_e
69. i3_rcf_3_place
70. i3_dlv_p
71. i3_dlv_e
72. i3_hops
73. o_legid
74. o_rcs_p
75. o_rcs_e
76. o_dep_1_p
77. o_dep_1_e
78. o_dep_1_place
79. o_rcf_1_p
80. o_rcf_1_e
81. o_rcf_1_place
82. o_dep_2_p
83. o_dep_2_e
84. o_dep_2_place
85. o_rcf_2_p
86. o_rcf_2_e
87. o_rcf_2_place
88. o_dep_3_p
89. o_dep_3_e
90. o_dep_3_place
91. o_rcf_3_p
92. o_rcf_3_e
93. o_rcf_3_place
94. o_dlv_p
95. o_dlv_e
96. o_hops
97. legs

File: data/c2k.csv

Pattern : Support
['2+', '3+', '8+'] : 0.5291005291005292
['2-', '5-'] : 0.7042253521126761


Iterations 
Iteration 0: Best Position: 1.89 
Iteration 1: Best Position: 1.42 
Iteration 2: Best Position: 1.21 
Iteration 3: Best Position: 1.21 
Iteration 4: Best Position: 1.21 
Iteration 5: Best Position: 1.21 
Iteration 6: Best Position: 1.21 
Iteration 7: Best Position: 1.21 
Iteration 8: Best Position: 1.21 
Iteration 9: Best Position: 1.21 
Iteration 10: Best Position: 1.21 
Iteration 11: Best Position: 1.21 
Iteration 12: Best Position: 1.21 
Iteration 13: Best Position: 1.21 
Iteration 14: Best Position: 1.21 
Iteration 15: Best Position: 1.21 
Iteration 16: Best Position: 1.21 
Iteration 17: Best Position: 1.21 
Iteration 18: Best Position: 1.21 
Iteration 19: Best Position: 1.21 
Iteration 20: Best Position: 1.21 
Iteration 21: Best Position: 1.21 
Iteration 22: Best Position: 1.21 
Iteration 23: Best Position: 1.21 
Iteration 24: Best Position: 1.21 
Iteration 25: Best Position: 1.21 
Iteration 26: Best Position: 1.21 
Iteration 27: Best Position: 1.21 
Iteration 28: Best Position: 1.21 
Iteration 29: Best Position: 1.21 
Iteration 30: Best Position: 1.21 
Iteration 31: Best Position: 1.21 
Iteration 32: Best Position: 1.21 
Iteration 33: Best Position: 1.21 
Iteration 34: Best Position: 1.21 
Iteration 35: Best Position: 1.21 
Iteration 36: Best Position: 1.21 
Iteration 37: Best Position: 1.21 
Iteration 38: Best Position: 1.21 
Iteration 39: Best Position: 1.21 
Iteration 40: Best Position: 1.21 
Iteration 41: Best Position: 1.21 
Iteration 42: Best Position: 1.21 
Iteration 43: Best Position: 1.21 
Iteration 44: Best Position: 1.21 
Iteration 45: Best Position: 1.21 
Iteration 46: Best Position: 1.21 
Iteration 47: Best Position: 1.21 
Iteration 48: Best Position: 1.21 
Iteration 49: Best Position: 1.21 
Iteration 50: Best Position: 1.21 
Iteration 51: Best Position: 1.21 
Iteration 52: Best Position: 1.21 
Iteration 53: Best Position: 1.21 
Iteration 54: Best Position: 1.21 
Iteration 55: Best Position: 1.21 
Iteration 56: Best Position: 1.21 
Iteration 57: Best Position: 1.21 
Iteration 58: Best Position: 1.21 
Iteration 59: Best Position: 1.21 
Iteration 60: Best Position: 1.21 
Iteration 61: Best Position: 1.21 
Iteration 62: Best Position: 1.21 
Iteration 63: Best Position: 1.21 
Iteration 64: Best Position: 1.21 
Iteration 65: Best Position: 1.21 
Iteration 66: Best Position: 1.21 
Iteration 67: Best Position: 1.21 
Iteration 68: Best Position: 1.21 
Iteration 69: Best Position: 1.21 
Iteration 70: Best Position: 1.21 
Iteration 71: Best Position: 1.21 
Iteration 72: Best Position: 1.21 
Iteration 73: Best Position: 1.21 
Iteration 74: Best Position: 1.21 
Iteration 75: Best Position: 1.21 
Iteration 76: Best Position: 1.21 
Iteration 77: Best Position: 1.21 
Iteration 78: Best Position: 1.21 
Iteration 79: Best Position: 1.21 
Iteration 80: Best Position: 1.21 
Iteration 81: Best Position: 1.21 
Iteration 82: Best Position: 1.21 
Iteration 83: Best Position: 1.21 
Iteration 84: Best Position: 1.21 
Iteration 85: Best Position: 1.21 
Iteration 86: Best Position: 1.21 
Iteration 87: Best Position: 1.21 
Iteration 88: Best Position: 1.21 
Iteration 89: Best Position: 1.21 
Iteration 90: Best Position: 1.21 
Iteration 91: Best Position: 1.21 
Iteration 92: Best Position: 1.21 
Iteration 93: Best Position: 1.21 
Iteration 94: Best Position: 1.21 
Iteration 95: Best Position: 1.21 
Iteration 96: Best Position: 1.21 
Iteration 97: Best Position: 1.21 
Iteration 98: Best Position: 1.21 
Iteration 99: Best Position: 1.21 

Data fetched from CSV file
Run-time: 1371.419261932373 seconds
Total allocated memory size: 105.4 KiB
Algorithm: PSO-GRAANK (v1.0)
No. of (dataset) attributes: 21
No. of (dataset) tuples: 6120
Velocity coeff.: 0.5
C1 coeff.: 0.1
C2 coeff.: 0.5
No. of particles: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. date_time
1. id_site
2. Tpic
3. Dir
4. Etal
5. Tz
6. Hm0
7. Ts1
8. Ts2
9. Tc
10. Tav
11. Tint
12. Tp
13. EPS2
14. EPS4
15. Qp
16. S2
17. Tref
18. Tw
19. Batt
20. timestamp

File: data/Directio_site6k.csv

Pattern : Support
['2+', '5+', '7+', '10+'] : 0.6993006993006994


Iterations 
Iteration 0: Best Position: 1.43 
Iteration 1: Best Position: 1.43 
Iteration 2: Best Position: 1.43 
Iteration 3: Best Position: 1.43 
Iteration 4: Best Position: 1.43 
Iteration 5: Best Position: 1.43 
Iteration 6: Best Position: 1.43 
Iteration 7: Best Position: 1.43 
Iteration 8: Best Position: 1.43 
Iteration 9: Best Position: 1.43 
Iteration 10: Best Position: 1.43 
Iteration 11: Best Position: 1.43 
Iteration 12: Best Position: 1.43 
Iteration 13: Best Position: 1.43 
Iteration 14: Best Position: 1.43 
Iteration 15: Best Position: 1.43 
Iteration 16: Best Position: 1.43 
Iteration 17: Best Position: 1.43 
Iteration 18: Best Position: 1.43 
Iteration 19: Best Position: 1.43 
Iteration 20: Best Position: 1.43 
Iteration 21: Best Position: 1.43 
Iteration 22: Best Position: 1.43 
Iteration 23: Best Position: 1.43 
Iteration 24: Best Position: 1.43 
Iteration 25: Best Position: 1.43 
Iteration 26: Best Position: 1.43 
Iteration 27: Best Position: 1.43 
Iteration 28: Best Position: 1.43 
Iteration 29: Best Position: 1.43 
Iteration 30: Best Position: 1.43 
Iteration 31: Best Position: 1.43 
Iteration 32: Best Position: 1.43 
Iteration 33: Best Position: 1.43 
Iteration 34: Best Position: 1.43 
Iteration 35: Best Position: 1.43 
Iteration 36: Best Position: 1.43 
Iteration 37: Best Position: 1.43 
Iteration 38: Best Position: 1.43 
Iteration 39: Best Position: 1.43 
Iteration 40: Best Position: 1.43 
Iteration 41: Best Position: 1.43 
Iteration 42: Best Position: 1.43 
Iteration 43: Best Position: 1.43 
Iteration 44: Best Position: 1.43 
Iteration 45: Best Position: 1.43 
Iteration 46: Best Position: 1.43 
Iteration 47: Best Position: 1.43 
Iteration 48: Best Position: 1.43 
Iteration 49: Best Position: 1.43 
Iteration 50: Best Position: 1.43 
Iteration 51: Best Position: 1.43 
Iteration 52: Best Position: 1.43 
Iteration 53: Best Position: 1.43 
Iteration 54: Best Position: 1.43 
Iteration 55: Best Position: 1.43 
Iteration 56: Best Position: 1.43 
Iteration 57: Best Position: 1.43 
Iteration 58: Best Position: 1.43 
Iteration 59: Best Position: 1.43 
Iteration 60: Best Position: 1.43 
Iteration 61: Best Position: 1.43 
Iteration 62: Best Position: 1.43 
Iteration 63: Best Position: 1.43 
Iteration 64: Best Position: 1.43 
Iteration 65: Best Position: 1.43 
Iteration 66: Best Position: 1.43 
Iteration 67: Best Position: 1.43 
Iteration 68: Best Position: 1.43 
Iteration 69: Best Position: 1.43 
Iteration 70: Best Position: 1.43 
Iteration 71: Best Position: 1.43 
Iteration 72: Best Position: 1.43 
Iteration 73: Best Position: 1.43 
Iteration 74: Best Position: 1.43 
Iteration 75: Best Position: 1.43 
Iteration 76: Best Position: 1.43 
Iteration 77: Best Position: 1.43 
Iteration 78: Best Position: 1.43 
Iteration 79: Best Position: 1.43 
Iteration 80: Best Position: 1.43 
Iteration 81: Best Position: 1.43 
Iteration 82: Best Position: 1.43 
Iteration 83: Best Position: 1.43 
Iteration 84: Best Position: 1.43 
Iteration 85: Best Position: 1.43 
Iteration 86: Best Position: 1.43 
Iteration 87: Best Position: 1.43 
Iteration 88: Best Position: 1.43 
Iteration 89: Best Position: 1.43 
Iteration 90: Best Position: 1.43 
Iteration 91: Best Position: 1.43 
Iteration 92: Best Position: 1.43 
Iteration 93: Best Position: 1.43 
Iteration 94: Best Position: 1.43 
Iteration 95: Best Position: 1.43 
Iteration 96: Best Position: 1.43 
Iteration 97: Best Position: 1.43 
Iteration 98: Best Position: 1.43 
Iteration 99: Best Position: 1.43 

Data fetched from CSV file
Run-time: 2901.0323202610016 seconds
Total allocated memory size: 98.7 KiB
Algorithm: PSO-GRAANK (v1.0)
No. of (dataset) attributes: 9
No. of (dataset) tuples: 19443
Velocity coeff.: 0.5
C1 coeff.: 0.1
C2 coeff.: 0.5
No. of particles: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. Date
1. Time
2. Global_active_power
3. Global_reactive_power
4. Voltage
5. Global_intensity
6. Sub_metering_1
7. Sub_metering_2
8. Sub_metering_3

File: data/UCI_household_power_consumption19k.csv

Pattern : Support
['4+', '5-'] : 0.7142857142857143


Iterations 
Iteration 0: Best Position: 1.4 
Iteration 1: Best Position: 1.4 
Iteration 2: Best Position: 1.4 
Iteration 3: Best Position: 1.4 
Iteration 4: Best Position: 1.4 
Iteration 5: Best Position: 1.4 
Iteration 6: Best Position: 1.4 
Iteration 7: Best Position: 1.4 
Iteration 8: Best Position: 1.4 
Iteration 9: Best Position: 1.4 
Iteration 10: Best Position: 1.4 
Iteration 11: Best Position: 1.4 
Iteration 12: Best Position: 1.4 
Iteration 13: Best Position: 1.4 
Iteration 14: Best Position: 1.4 
Iteration 15: Best Position: 1.4 
Iteration 16: Best Position: 1.4 
Iteration 17: Best Position: 1.4 
Iteration 18: Best Position: 1.4 
Iteration 19: Best Position: 1.4 
Iteration 20: Best Position: 1.4 
Iteration 21: Best Position: 1.4 
Iteration 22: Best Position: 1.4 
Iteration 23: Best Position: 1.4 
Iteration 24: Best Position: 1.4 
Iteration 25: Best Position: 1.4 
Iteration 26: Best Position: 1.4 
Iteration 27: Best Position: 1.4 
Iteration 28: Best Position: 1.4 
Iteration 29: Best Position: 1.4 
Iteration 30: Best Position: 1.4 
Iteration 31: Best Position: 1.4 
Iteration 32: Best Position: 1.4 
Iteration 33: Best Position: 1.4 
Iteration 34: Best Position: 1.4 
Iteration 35: Best Position: 1.4 
Iteration 36: Best Position: 1.4 
Iteration 37: Best Position: 1.4 
Iteration 38: Best Position: 1.4 
Iteration 39: Best Position: 1.4 
Iteration 40: Best Position: 1.4 
Iteration 41: Best Position: 1.4 
Iteration 42: Best Position: 1.4 
Iteration 43: Best Position: 1.4 
Iteration 44: Best Position: 1.4 
Iteration 45: Best Position: 1.4 
Iteration 46: Best Position: 1.4 
Iteration 47: Best Position: 1.4 
Iteration 48: Best Position: 1.4 
Iteration 49: Best Position: 1.4 
Iteration 50: Best Position: 1.4 
Iteration 51: Best Position: 1.4 
Iteration 52: Best Position: 1.4 
Iteration 53: Best Position: 1.4 
Iteration 54: Best Position: 1.4 
Iteration 55: Best Position: 1.4 
Iteration 56: Best Position: 1.4 
Iteration 57: Best Position: 1.4 
Iteration 58: Best Position: 1.4 
Iteration 59: Best Position: 1.4 
Iteration 60: Best Position: 1.4 
Iteration 61: Best Position: 1.4 
Iteration 62: Best Position: 1.4 
Iteration 63: Best Position: 1.4 
Iteration 64: Best Position: 1.4 
Iteration 65: Best Position: 1.4 
Iteration 66: Best Position: 1.4 
Iteration 67: Best Position: 1.4 
Iteration 68: Best Position: 1.4 
Iteration 69: Best Position: 1.4 
Iteration 70: Best Position: 1.4 
Iteration 71: Best Position: 1.4 
Iteration 72: Best Position: 1.4 
Iteration 73: Best Position: 1.4 
Iteration 74: Best Position: 1.4 
Iteration 75: Best Position: 1.4 
Iteration 76: Best Position: 1.4 
Iteration 77: Best Position: 1.4 
Iteration 78: Best Position: 1.4 
Iteration 79: Best Position: 1.4 
Iteration 80: Best Position: 1.4 
Iteration 81: Best Position: 1.4 
Iteration 82: Best Position: 1.4 
Iteration 83: Best Position: 1.4 
Iteration 84: Best Position: 1.4 
Iteration 85: Best Position: 1.4 
Iteration 86: Best Position: 1.4 
Iteration 87: Best Position: 1.4 
Iteration 88: Best Position: 1.4 
Iteration 89: Best Position: 1.4 
Iteration 90: Best Position: 1.4 
Iteration 91: Best Position: 1.4 
Iteration 92: Best Position: 1.4 
Iteration 93: Best Position: 1.4 
Iteration 94: Best Position: 1.4 
Iteration 95: Best Position: 1.4 
Iteration 96: Best Position: 1.4 
Iteration 97: Best Position: 1.4 
Iteration 98: Best Position: 1.4 
Iteration 99: Best Position: 1.4 

Data fetched from CSV file
Run-time: 3.656240701675415 seconds
Total allocated memory size: 205.1 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 10
No. of (dataset) tuples: 116
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 16
Number of iterations: 100

0. Age
1. BMI
2. Glucose
3. Insulin
4. HOMA
5. Leptin
6. Adiponectin
7. Resistin
8. MCP.1
9. Classification

File: data/breast_cancer.csv

Pattern : Support
['4+', '7+', '3+'] : 0.516
['8-', '7-'] : 0.672
['5+', '8+'] : 0.53
['5+', '6-'] : 0.532
['6-', '4+'] : 0.528
['7-', '5-'] : 0.548
['8-', '4-', '3-'] : 0.505
['6-', '7+'] : 0.593
['2+', '6-'] : 0.508
['8-', '6+'] : 0.575
['6-', '1+'] : 0.581
['2+', '7+'] : 0.52
['6-', '3+'] : 0.527
['2+', '8-'] : 0.505
['4+', '2+', '3+'] : 0.637
['4+', '5+'] : 0.659


Iterations 
Iteration 0: Best Cost: 1.94 
Iteration 1: Best Cost: 1.49 
Iteration 2: Best Cost: 1.89 
Iteration 3: Best Cost: 1.89 
Iteration 4: Best Cost: 1.89 
Iteration 5: Best Cost: 1.89 
Iteration 6: Best Cost: 1.89 
Iteration 7: Best Cost: 1.88 
Iteration 8: Best Cost: 1.89 
Iteration 9: Best Cost: 1.82 
Iteration 10: Best Cost: 1.98 
Iteration 11: Best Cost: 1.98 
Iteration 12: Best Cost: 1.98 
Iteration 13: Best Cost: 1.98 
Iteration 14: Best Cost: 1.98 
Iteration 15: Best Cost: 1.98 
Iteration 16: Best Cost: 1.69 
Iteration 17: Best Cost: 1.69 
Iteration 18: Best Cost: 1.69 
Iteration 19: Best Cost: 1.69 
Iteration 20: Best Cost: 1.69 
Iteration 21: Best Cost: 1.69 
Iteration 22: Best Cost: 1.97 
Iteration 23: Best Cost: 1.97 
Iteration 24: Best Cost: 1.97 
Iteration 25: Best Cost: 1.97 
Iteration 26: Best Cost: 1.97 
Iteration 27: Best Cost: 1.74 
Iteration 28: Best Cost: 1.72 
Iteration 29: Best Cost: 1.72 
Iteration 30: Best Cost: 1.72 
Iteration 31: Best Cost: 1.72 
Iteration 32: Best Cost: 1.72 
Iteration 33: Best Cost: 1.72 
Iteration 34: Best Cost: 1.72 
Iteration 35: Best Cost: 1.92 
Iteration 36: Best Cost: 1.92 
Iteration 37: Best Cost: 1.92 
Iteration 38: Best Cost: 1.92 
Iteration 39: Best Cost: 1.9 
Iteration 40: Best Cost: 1.9 
Iteration 41: Best Cost: 1.9 
Iteration 42: Best Cost: 1.9 
Iteration 43: Best Cost: 1.9 
Iteration 44: Best Cost: 1.9 
Iteration 45: Best Cost: 1.9 
Iteration 46: Best Cost: 1.9 
Iteration 47: Best Cost: 1.9 
Iteration 48: Best Cost: 1.9 
Iteration 49: Best Cost: 1.98 
Iteration 50: Best Cost: 1.98 
Iteration 51: Best Cost: 1.98 
Iteration 52: Best Cost: 1.98 
Iteration 53: Best Cost: 1.98 
Iteration 54: Best Cost: 1.98 
Iteration 55: Best Cost: 1.98 
Iteration 56: Best Cost: 1.57 
Iteration 57: Best Cost: 1.57 
Iteration 58: Best Cost: 1.57 
Iteration 59: Best Cost: 1.57 
Iteration 60: Best Cost: 1.57 
Iteration 61: Best Cost: 1.57 
Iteration 62: Best Cost: 1.57 
Iteration 63: Best Cost: 1.57 
Iteration 64: Best Cost: 1.57 
Iteration 65: Best Cost: 1.57 
Iteration 66: Best Cost: 1.57 
Iteration 67: Best Cost: 1.57 
Iteration 68: Best Cost: 1.57 
Iteration 69: Best Cost: 1.57 
Iteration 70: Best Cost: 1.57 
Iteration 71: Best Cost: 1.57 
Iteration 72: Best Cost: 1.57 
Iteration 73: Best Cost: 1.57 
Iteration 74: Best Cost: 1.57 
Iteration 75: Best Cost: 1.57 
Iteration 76: Best Cost: 1.57 
Iteration 77: Best Cost: 1.57 
Iteration 78: Best Cost: 1.57 
Iteration 79: Best Cost: 1.52 
Iteration 80: Best Cost: 1.52 
Iteration 81: Best Cost: 1.52 
Iteration 82: Best Cost: 1.52 
Iteration 83: Best Cost: 1.52 
Iteration 84: Best Cost: 1.52 
Iteration 85: Best Cost: 1.52 
Iteration 86: Best Cost: 1.52 
Iteration 87: Best Cost: 1.52 
Iteration 88: Best Cost: 1.52 
Iteration 89: Best Cost: 1.52 
Iteration 90: Best Cost: 1.52 
Iteration 91: Best Cost: 1.52 
Iteration 92: Best Cost: 1.52 
Iteration 93: Best Cost: 1.52 
Iteration 94: Best Cost: 1.52 
Iteration 95: Best Cost: 1.52 
Iteration 96: Best Cost: 1.52 
Iteration 97: Best Cost: 1.52 
Iteration 98: Best Cost: 1.52 
Iteration 99: Best Cost: 1.52 

/nfs/work/pgpm/meso/ant/src/pkg_main/pkg_algorithms/aco_grad.py:148: RuntimeWarning: invalid value encountered in greater
  j = np.nonzero(cum_prob > r)[0][0]
Data fetched from CSV file
Run-time: 654.9562103748322 seconds
Total allocated memory size: 292.4 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 98
No. of (dataset) tuples: 3943
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 51
Number of iterations: 100

0. nr
1. i1_legid
2. i1_rcs_p
3. i1_rcs_e
4. i1_dep_1_p
5. i1_dep_1_e
6. i1_dep_1_place
7. i1_rcf_1_p
8. i1_rcf_1_e
9. i1_rcf_1_place
10. i1_dep_2_p
11. i1_dep_2_e
12. i1_dep_2_place
13. i1_rcf_2_p
14. i1_rcf_2_e
15. i1_rcf_2_place
16. i1_dep_3_p
17. i1_dep_3_e
18. i1_dep_3_place
19. i1_rcf_3_p
20. i1_rcf_3_e
21. i1_rcf_3_place
22. i1_dlv_p
23. i1_dlv_e
24. i1_hops
25. i2_legid
26. i2_rcs_p
27. i2_rcs_e
28. i2_dep_1_p
29. i2_dep_1_e
30. i2_dep_1_place
31. i2_rcf_1_p
32. i2_rcf_1_e
33. i2_rcf_1_place
34. i2_dep_2_p
35. i2_dep_2_e
36. i2_dep_2_place
37. i2_rcf_2_p
38. i2_rcf_2_e
39. i2_rcf_2_place
40. i2_dep_3_p
41. i2_dep_3_e
42. i2_dep_3_place
43. i2_rcf_3_p
44. i2_rcf_3_e
45. i2_rcf_3_place
46. i2_dlv_p
47. i2_dlv_e
48. i2_hops
49. i3_legid
50. i3_rcs_p
51. i3_rcs_e
52. i3_dep_1_p
53. i3_dep_1_e
54. i3_dep_1_place
55. i3_rcf_1_p
56. i3_rcf_1_e
57. i3_rcf_1_place
58. i3_dep_2_p
59. i3_dep_2_e
60. i3_dep_2_place
61. i3_rcf_2_p
62. i3_rcf_2_e
63. i3_rcf_2_place
64. i3_dep_3_p
65. i3_dep_3_e
66. i3_dep_3_place
67. i3_rcf_3_p
68. i3_rcf_3_e
69. i3_rcf_3_place
70. i3_dlv_p
71. i3_dlv_e
72. i3_hops
73. o_legid
74. o_rcs_p
75. o_rcs_e
76. o_dep_1_p
77. o_dep_1_e
78. o_dep_1_place
79. o_rcf_1_p
80. o_rcf_1_e
81. o_rcf_1_place
82. o_dep_2_p
83. o_dep_2_e
84. o_dep_2_place
85. o_rcf_2_p
86. o_rcf_2_e
87. o_rcf_2_place
88. o_dep_3_p
89. o_dep_3_e
90. o_dep_3_place
91. o_rcf_3_p
92. o_rcf_3_e
93. o_rcf_3_place
94. o_dlv_p
95. o_dlv_e
96. o_hops
97. legs

File: data/c2k.csv

Pattern : Support
['75+', '7+'] : 0.52
['1+', '7-'] : 0.509
['73-', '23+'] : 0.513
['7-', '3-'] : 0.607
['77+', '79+'] : 0.598
['74+', '7+'] : 0.523
['95+', '0+'] : 0.54
['80+', '95-'] : 0.519
['3-', '75-'] : 0.505
['3-', '5-', '2-'] : 0.543
['79+', '3+'] : 0.509
['1+', '95+'] : 0.514
['73-', '80+'] : 0.511
['95+', '3+'] : 0.504
['79+', '23+'] : 0.5
['5+', '8+', '7+'] : 0.546
['80+', '23+'] : 0.53
['79+', '7+'] : 0.52
['2-', '23-'] : 0.539
['73-', '95+'] : 0.51
['75+', '8+'] : 0.518
['3-', '73+'] : 0.511
['2-', '8-', '7-'] : 0.56
['75+', '95+'] : 0.535
['77+', '5+'] : 0.507
['5+', '23+'] : 0.526
['77+', '75+'] : 0.534
['3-', '74-'] : 0.503
['95+', '79-'] : 0.522
['7-', '73+'] : 0.509
['79+', '5+'] : 0.513
['77+', '3-'] : 0.502
['3-', '80-'] : 0.506
['95+', '77+'] : 0.515
['74+', '5+'] : 0.529
['74+', '79+'] : 0.604
['79+', '80+', '74+'] : 0.514
['1+', '5+'] : 0.504
['8+', '95+'] : 0.506
['95+', '5+'] : 0.51
['74+', '8+'] : 0.52
['73-', '5+'] : 0.506
['80+', '5+'] : 0.511
['1+', '3+'] : 0.509
['23+', '3+'] : 0.545
['8+', '3+'] : 0.594
['75+', '5+'] : 0.527
['77+', '74+'] : 0.66
['2-', '79-'] : 0.517
['8+', '1-'] : 0.509
['95+', '2+'] : 0.509


Iterations 
Iteration 0: Best Cost: 1.92 
Iteration 1: Best Cost: 1.96 
Iteration 2: Best Cost: 1.95 
Iteration 3: Best Cost: 1.65 
Iteration 4: Best Cost: 1.67 
Iteration 5: Best Cost: 1.91 
Iteration 6: Best Cost: 1.85 
Iteration 7: Best Cost: 1.93 
Iteration 8: Best Cost: 1.98 
Iteration 9: Best Cost: 1.84 
Iteration 10: Best Cost: 1.96 
Iteration 11: Best Cost: 1.95 
Iteration 12: Best Cost: 1.96 
Iteration 13: Best Cost: 1.96 
Iteration 14: Best Cost: 1.98 
Iteration 15: Best Cost: 2.0 
Iteration 16: Best Cost: 1.83 
Iteration 17: Best Cost: 1.89 
Iteration 18: Best Cost: 1.89 
Iteration 19: Best Cost: 1.92 
Iteration 20: Best Cost: 1.86 
Iteration 21: Best Cost: 1.96 
Iteration 22: Best Cost: 1.96 
Iteration 23: Best Cost: 1.96 
Iteration 24: Best Cost: 1.93 
Iteration 25: Best Cost: 1.93 
Iteration 26: Best Cost: 1.96 
Iteration 27: Best Cost: 1.79 
Iteration 28: Best Cost: 1.87 
Iteration 29: Best Cost: 1.87 
Iteration 30: Best Cost: 1.87 
Iteration 31: Best Cost: 1.97 
Iteration 32: Best Cost: 1.9 
Iteration 33: Best Cost: 1.87 
Iteration 34: Best Cost: 1.99 
Iteration 35: Best Cost: 1.92 
Iteration 36: Best Cost: 1.96 
Iteration 37: Best Cost: 1.96 
Iteration 38: Best Cost: 1.95 
Iteration 39: Best Cost: 1.95 
Iteration 40: Best Cost: 1.99 
Iteration 41: Best Cost: 1.98 
Iteration 42: Best Cost: 1.98 
Iteration 43: Best Cost: 1.98 
Iteration 44: Best Cost: 1.94 
Iteration 45: Best Cost: 1.94 
Iteration 46: Best Cost: 1.89 
Iteration 47: Best Cost: 1.66 
Iteration 48: Best Cost: 1.95 
Iteration 49: Best Cost: 1.95 
Iteration 50: Best Cost: 1.98 
Iteration 51: Best Cost: 1.98 
Iteration 52: Best Cost: 1.98 
Iteration 53: Best Cost: 1.98 
Iteration 54: Best Cost: 1.96 
Iteration 55: Best Cost: 1.96 
Iteration 56: Best Cost: 1.96 
Iteration 57: Best Cost: 1.92 
Iteration 58: Best Cost: 1.92 
Iteration 59: Best Cost: 1.98 
Iteration 60: Best Cost: 1.98 
Iteration 61: Best Cost: 1.98 
Iteration 62: Best Cost: 1.98 
Iteration 63: Best Cost: 1.98 
Iteration 64: Best Cost: 1.98 
Iteration 65: Best Cost: 1.98 
Iteration 66: Best Cost: 1.98 
Iteration 67: Best Cost: 1.98 
Iteration 68: Best Cost: 1.98 
Iteration 69: Best Cost: 1.98 
Iteration 70: Best Cost: 1.98 
Iteration 71: Best Cost: 1.96 
Iteration 72: Best Cost: 1.96 
Iteration 73: Best Cost: 1.96 
Iteration 74: Best Cost: 1.96 
Iteration 75: Best Cost: 1.96 
Iteration 76: Best Cost: 1.96 
Iteration 77: Best Cost: 1.96 
Iteration 78: Best Cost: 1.83 
Iteration 79: Best Cost: 1.83 
Iteration 80: Best Cost: 1.68 
Iteration 81: Best Cost: 1.68 
Iteration 82: Best Cost: 1.68 
Iteration 83: Best Cost: 1.68 
Iteration 84: Best Cost: 1.9 
Iteration 85: Best Cost: 1.9 
Iteration 86: Best Cost: 1.9 
Iteration 87: Best Cost: 1.9 
Iteration 88: Best Cost: 1.9 
Iteration 89: Best Cost: 1.52 
Iteration 90: Best Cost: 1.52 
Iteration 91: Best Cost: 1.52 
Iteration 92: Best Cost: 1.52 
Iteration 93: Best Cost: 1.52 
Iteration 94: Best Cost: 1.93 
Iteration 95: Best Cost: 1.96 
Iteration 96: Best Cost: 1.96 
Iteration 97: Best Cost: 1.96 
Iteration 98: Best Cost: 1.96 
Iteration 99: Best Cost: 1.96 

Data fetched from CSV file
Run-time: 288.19074153900146 seconds
Total allocated memory size: 227.7 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 21
No. of (dataset) tuples: 6120
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 62
Number of iterations: 100

0. date_time
1. id_site
2. Tpic
3. Dir
4. Etal
5. Tz
6. Hm0
7. Ts1
8. Ts2
9. Tc
10. Tav
11. Tint
12. Tp
13. EPS2
14. EPS4
15. Qp
16. S2
17. Tref
18. Tw
19. Batt
20. timestamp

File: data/Directio_site6k.csv

Pattern : Support
['9+', '13+', '5+'] : 0.531
['18+', '7+'] : 0.517
['11+', '18+'] : 0.541
['10+', '18+', '8+'] : 0.513
['9+', '5+', '3-'] : 0.56
['5+', '9+', '3-', '10+', '11+', '8+'] : 0.501
['14+', '11+', '9+', '5+'] : 0.637
['9+', '4-'] : 0.519
['15-', '5+', '10+', '8+'] : 0.534
['15-', '8+', '14+', '13+', '10+'] : 0.507
['11+', '8+', '3-', '10+', '2+'] : 0.538
['15-', '10+', '8+', '7+'] : 0.522
['12+', '8+', '9+', '11+', '10+', '5+'] : 0.524
['11+', '15+'] : 0.508
['8+', '9+', '13+', '7+'] : 0.52
['12+', '3-', '8+', '5+'] : 0.516
['4+', '8+'] : 0.516
['12+', '2+', '11+'] : 0.626
['8+', '2+', '14+', '5+'] : 0.72
['14+', '6+'] : 0.509
['4+', '12+', '13+'] : 0.509
['12+', '5+', '14+', '9+', '8+', '7+'] : 0.53
['8+', '12+', '13+'] : 0.652
['10+', '12+', '5+', '7+', '8+'] : 0.697
['10+', '12+', '8+', '14+', '9+', '7+', '11+'] : 0.502
['11+', '9+', '8+', '14+', '12+', '5+'] : 0.502
['8+', '14+', '7+', '12+', '3-', '10+'] : 0.524
['3-', '2+', '13+', '12+', '7+'] : 0.502
['13+', '7+', '15-', '12+', '10+'] : 0.505
['14+', '13+', '9+', '10+', '7+'] : 0.515
['8+', '16-', '14+', '5+'] : 0.58
['5+', '16-', '14+', '7+'] : 0.543
['7+', '6+'] : 0.515
['7+', '8+', '13+', '10+', '14+', '11+', '5+'] : 0.599
['3-', '10+', '16-', '14+'] : 0.502
['7+', '12+', '11+', '13+', '8+'] : 0.582
['13+', '10+', '7+', '16-', '12+'] : 0.536
['11+', '10+', '12+', '5+', '13+'] : 0.562
['8+', '10+', '12+', '14+', '16-'] : 0.52
['13+', '2+', '12+', '14+', '7+', '10+', '5+'] : 0.565
['14+', '13+', '11+', '10+', '12+'] : 0.597
['13+', '16-', '12+', '14+', '10+'] : 0.531
['7+', '10+', '8+', '9+', '13+', '5+', '14+'] : 0.515
['14+', '12+', '16-', '7+', '8+'] : 0.52
['10+', '12+', '14+', '7+', '5+', '9+'] : 0.53
['13+', '8+', '7+', '2+', '11+', '14+'] : 0.577
['7+', '2+', '13+', '11+', '10+'] : 0.594
['11+', '7+', '12+', '13+', '2+', '10+'] : 0.56
['12+', '8+', '10+', '7+', '13+'] : 0.652
['11+', '10+', '13+', '12+', '7+', '8+'] : 0.582
['13+', '16-', '8+', '10+'] : 0.544
['13+', '16-', '8+', '7+'] : 0.53
['11+', '8+', '13+', '14+', '7+', '12+', '10+', '5+'] : 0.56
['7+', '12+', '13+', '5+', '8+', '2+'] : 0.567
['7+', '12+', '8+', '14+', '2+'] : 0.635
['12+', '6-'] : 0.532
['10+', '13+', '2+', '14+', '5+', '12+', '8+'] : 0.565
['10+', '6+', '11+'] : 0.52
['8+', '16-', '13+', '10+', '5+'] : 0.515
['14+', '10+', '12+', '7+', '16-', '8+'] : 0.52
['13+', '11+', '16-', '14+'] : 0.508
['10+', '14+', '16-', '11+', '5+'] : 0.526


Iterations 
Iteration 0: Best Cost: 1.88 
Iteration 1: Best Cost: 1.93 
Iteration 2: Best Cost: 1.85 
Iteration 3: Best Cost: 1.95 
Iteration 4: Best Cost: 1.79 
Iteration 5: Best Cost: 2.0 
Iteration 6: Best Cost: 1.57 
Iteration 7: Best Cost: 1.93 
Iteration 8: Best Cost: 1.87 
Iteration 9: Best Cost: 1.97 
Iteration 10: Best Cost: 1.86 
Iteration 11: Best Cost: 1.92 
Iteration 12: Best Cost: 1.92 
Iteration 13: Best Cost: 1.92 
Iteration 14: Best Cost: 1.91 
Iteration 15: Best Cost: 1.91 
Iteration 16: Best Cost: 1.97 
Iteration 17: Best Cost: 1.92 
Iteration 18: Best Cost: 1.94 
Iteration 19: Best Cost: 1.94 
Iteration 20: Best Cost: 1.6 
Iteration 21: Best Cost: 1.39 
Iteration 22: Best Cost: 1.96 
Iteration 23: Best Cost: 1.96 
Iteration 24: Best Cost: 1.96 
Iteration 25: Best Cost: 1.96 
Iteration 26: Best Cost: 1.89 
Iteration 27: Best Cost: 1.53 
Iteration 28: Best Cost: 1.43 
Iteration 29: Best Cost: 1.99 
Iteration 30: Best Cost: 1.99 
Iteration 31: Best Cost: 1.99 
Iteration 32: Best Cost: 1.99 
Iteration 33: Best Cost: 1.91 
Iteration 34: Best Cost: 1.91 
Iteration 35: Best Cost: 1.99 
Iteration 36: Best Cost: 1.98 
Iteration 37: Best Cost: 1.94 
Iteration 38: Best Cost: 1.94 
Iteration 39: Best Cost: 1.72 
Iteration 40: Best Cost: 1.84 
Iteration 41: Best Cost: 1.94 
Iteration 42: Best Cost: 1.94 
Iteration 43: Best Cost: 1.67 
Iteration 44: Best Cost: 1.67 
Iteration 45: Best Cost: 1.67 
Iteration 46: Best Cost: 1.67 
Iteration 47: Best Cost: 1.99 
Iteration 48: Best Cost: 1.72 
Iteration 49: Best Cost: 1.87 
Iteration 50: Best Cost: 1.78 
Iteration 51: Best Cost: 1.78 
Iteration 52: Best Cost: 1.92 
Iteration 53: Best Cost: 1.77 
Iteration 54: Best Cost: 1.77 
Iteration 55: Best Cost: 1.77 
Iteration 56: Best Cost: 1.68 
Iteration 57: Best Cost: 1.88 
Iteration 58: Best Cost: 1.94 
Iteration 59: Best Cost: 1.94 
Iteration 60: Best Cost: 1.94 
Iteration 61: Best Cost: 1.92 
Iteration 62: Best Cost: 1.89 
Iteration 63: Best Cost: 1.89 
Iteration 64: Best Cost: 1.89 
Iteration 65: Best Cost: 1.73 
Iteration 66: Best Cost: 1.68 
Iteration 67: Best Cost: 1.68 
Iteration 68: Best Cost: 1.68 
Iteration 69: Best Cost: 1.68 
Iteration 70: Best Cost: 1.79 
Iteration 71: Best Cost: 1.53 
Iteration 72: Best Cost: 1.53 
Iteration 73: Best Cost: 1.53 
Iteration 74: Best Cost: 1.72 
Iteration 75: Best Cost: 1.72 
Iteration 76: Best Cost: 1.84 
Iteration 77: Best Cost: 1.89 
Iteration 78: Best Cost: 1.89 
Iteration 79: Best Cost: 1.89 
Iteration 80: Best Cost: 1.89 
Iteration 81: Best Cost: 1.79 
Iteration 82: Best Cost: 1.76 
Iteration 83: Best Cost: 1.57 
Iteration 84: Best Cost: 1.88 
Iteration 85: Best Cost: 1.77 
Iteration 86: Best Cost: 1.77 
Iteration 87: Best Cost: 1.77 
Iteration 88: Best Cost: 1.92 
Iteration 89: Best Cost: 1.94 
Iteration 90: Best Cost: 1.94 
Iteration 91: Best Cost: 1.92 
Iteration 92: Best Cost: 1.92 
Iteration 93: Best Cost: 1.97 
Iteration 94: Best Cost: 1.97 
Iteration 95: Best Cost: 1.97 
Iteration 96: Best Cost: 1.97 
Iteration 97: Best Cost: 1.97 
Iteration 98: Best Cost: 1.97 
Iteration 99: Best Cost: 1.9 

/nfs/work/pgpm/meso/ant/src/pkg_main/pkg_algorithms/aco_grad.py:148: RuntimeWarning: invalid value encountered in greater
  j = np.nonzero(cum_prob > r)[0][0]
Data fetched from CSV file
Run-time: 158.18162894248962 seconds
Total allocated memory size: 146.8 KiB
Algorithm: ACO-GRAANK (v4.0)
No. of (dataset) attributes: 9
No. of (dataset) tuples: 19443
Evaporation factor: 0.1
Minimum support: 0.5
Number of cores: 28
Number of patterns: 4
Number of iterations: 100

0. Date
1. Time
2. Global_active_power
3. Global_reactive_power
4. Voltage
5. Global_intensity
6. Sub_metering_1
7. Sub_metering_2
8. Sub_metering_3

File: data/UCI_household_power_consumption19k.csv

Pattern : Support
['5+', '2+', '3+'] : 0.52
['4-', '2+'] : 0.719
['4-', '5+'] : 0.713
['4-', '2+', '5+'] : 0.708


Iterations 
Iteration 0: Best Cost: 1.92 
Iteration 1: Best Cost: 1.92 
Iteration 2: Best Cost: 1.92 
Iteration 3: Best Cost: 1.92 
Iteration 4: Best Cost: 1.92 
Iteration 5: Best Cost: 1.92 
Iteration 6: Best Cost: 1.92 
Iteration 7: Best Cost: 1.39 
Iteration 8: Best Cost: 1.39 
Iteration 9: Best Cost: 1.39 
Iteration 10: Best Cost: 1.39 
Iteration 11: Best Cost: 1.39 
Iteration 12: Best Cost: 1.4 
Iteration 13: Best Cost: 1.4 
Iteration 14: Best Cost: 1.4 
Iteration 15: Best Cost: 1.4 
Iteration 16: Best Cost: 1.4 
Iteration 17: Best Cost: 1.4 
Iteration 18: Best Cost: 1.4 
Iteration 19: Best Cost: 1.4 
Iteration 20: Best Cost: 1.4 
Iteration 21: Best Cost: 1.4 
Iteration 22: Best Cost: 1.4 
Iteration 23: Best Cost: 1.4 
Iteration 24: Best Cost: 1.4 
Iteration 25: Best Cost: 1.4 
Iteration 26: Best Cost: 1.41 
Iteration 27: Best Cost: 1.41 
Iteration 28: Best Cost: 1.41 
Iteration 29: Best Cost: 1.41 
Iteration 30: Best Cost: 1.41 
Iteration 31: Best Cost: 1.41 
Iteration 32: Best Cost: 1.41 
Iteration 33: Best Cost: 1.41 
Iteration 34: Best Cost: 1.41 
Iteration 35: Best Cost: 1.41 
Iteration 36: Best Cost: 1.41 
Iteration 37: Best Cost: 1.41 
Iteration 38: Best Cost: 1.41 
Iteration 39: Best Cost: 1.41 
Iteration 40: Best Cost: 1.41 
Iteration 41: Best Cost: 1.41 
Iteration 42: Best Cost: 1.41 
Iteration 43: Best Cost: 1.41 
Iteration 44: Best Cost: 1.41 
Iteration 45: Best Cost: 1.41 
Iteration 46: Best Cost: 1.41 
Iteration 47: Best Cost: 1.41 
Iteration 48: Best Cost: 1.41 
Iteration 49: Best Cost: 1.41 
Iteration 50: Best Cost: 1.41 
Iteration 51: Best Cost: 1.41 
Iteration 52: Best Cost: 1.41 
Iteration 53: Best Cost: 1.41 
Iteration 54: Best Cost: 1.41 
Iteration 55: Best Cost: 1.41 
Iteration 56: Best Cost: 1.41 
Iteration 57: Best Cost: 1.41 
Iteration 58: Best Cost: 1.41 
Iteration 59: Best Cost: 1.41 
Iteration 60: Best Cost: 1.41 
Iteration 61: Best Cost: 1.41 
Iteration 62: Best Cost: 1.41 
Iteration 63: Best Cost: 1.41 
Iteration 64: Best Cost: 1.41 
Iteration 65: Best Cost: 1.41 
Iteration 66: Best Cost: 1.41 
Iteration 67: Best Cost: 1.41 
Iteration 68: Best Cost: 1.41 
Iteration 69: Best Cost: 1.41 
Iteration 70: Best Cost: 1.41 
Iteration 71: Best Cost: 1.41 
Iteration 72: Best Cost: 1.41 
Iteration 73: Best Cost: 1.41 
Iteration 74: Best Cost: 1.41 
Iteration 75: Best Cost: 1.41 
Iteration 76: Best Cost: 1.41 
Iteration 77: Best Cost: 1.41 
Iteration 78: Best Cost: 1.41 
Iteration 79: Best Cost: 1.41 
Iteration 80: Best Cost: 1.41 
Iteration 81: Best Cost: 1.41 
Iteration 82: Best Cost: 1.41 
Iteration 83: Best Cost: 1.41 
Iteration 84: Best Cost: 1.41 
Iteration 85: Best Cost: 1.41 
Iteration 86: Best Cost: 1.41 
Iteration 87: Best Cost: 1.41 
Iteration 88: Best Cost: 1.41 
Iteration 89: Best Cost: 1.41 
Iteration 90: Best Cost: 1.41 
Iteration 91: Best Cost: 1.41 
Iteration 92: Best Cost: 1.41 
Iteration 93: Best Cost: 1.41 
Iteration 94: Best Cost: 1.41 
Iteration 95: Best Cost: 1.41 
Iteration 96: Best Cost: 1.41 
Iteration 97: Best Cost: 1.41 
Iteration 98: Best Cost: 1.41 
Iteration 99: Best Cost: 1.41 

Data fetched from CSV file
Run-time: 1.7157495021820068 seconds
Total allocated memory size: 99.6 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 10
No. of (dataset) tuples: 116
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. Age
1. BMI
2. Glucose
3. Insulin
4. HOMA
5. Leptin
6. Adiponectin
7. Resistin
8. MCP.1
9. Classification

File: data/breast_cancer.csv

Pattern : Support
['1+', '5+'] : 0.7299270072992701


Iterations 
Iteration 0: Best Cost: 1.37 
Iteration 1: Best Cost: 1.37 
Iteration 2: Best Cost: 1.37 
Iteration 3: Best Cost: 1.37 
Iteration 4: Best Cost: 1.37 
Iteration 5: Best Cost: 1.37 
Iteration 6: Best Cost: 1.37 
Iteration 7: Best Cost: 1.37 
Iteration 8: Best Cost: 1.37 
Iteration 9: Best Cost: 1.37 
Iteration 10: Best Cost: 1.37 
Iteration 11: Best Cost: 1.37 
Iteration 12: Best Cost: 1.37 
Iteration 13: Best Cost: 1.37 
Iteration 14: Best Cost: 1.37 
Iteration 15: Best Cost: 1.37 
Iteration 16: Best Cost: 1.37 
Iteration 17: Best Cost: 1.37 
Iteration 18: Best Cost: 1.37 
Iteration 19: Best Cost: 1.37 
Iteration 20: Best Cost: 1.37 
Iteration 21: Best Cost: 1.37 
Iteration 22: Best Cost: 1.37 
Iteration 23: Best Cost: 1.37 
Iteration 24: Best Cost: 1.37 
Iteration 25: Best Cost: 1.37 
Iteration 26: Best Cost: 1.37 
Iteration 27: Best Cost: 1.37 
Iteration 28: Best Cost: 1.37 
Iteration 29: Best Cost: 1.37 
Iteration 30: Best Cost: 1.37 
Iteration 31: Best Cost: 1.37 
Iteration 32: Best Cost: 1.37 
Iteration 33: Best Cost: 1.37 
Iteration 34: Best Cost: 1.37 
Iteration 35: Best Cost: 1.37 
Iteration 36: Best Cost: 1.37 
Iteration 37: Best Cost: 1.37 
Iteration 38: Best Cost: 1.37 
Iteration 39: Best Cost: 1.37 
Iteration 40: Best Cost: 1.37 
Iteration 41: Best Cost: 1.37 
Iteration 42: Best Cost: 1.37 
Iteration 43: Best Cost: 1.37 
Iteration 44: Best Cost: 1.37 
Iteration 45: Best Cost: 1.37 
Iteration 46: Best Cost: 1.37 
Iteration 47: Best Cost: 1.37 
Iteration 48: Best Cost: 1.37 
Iteration 49: Best Cost: 1.37 
Iteration 50: Best Cost: 1.37 
Iteration 51: Best Cost: 1.37 
Iteration 52: Best Cost: 1.37 
Iteration 53: Best Cost: 1.37 
Iteration 54: Best Cost: 1.37 
Iteration 55: Best Cost: 1.37 
Iteration 56: Best Cost: 1.37 
Iteration 57: Best Cost: 1.37 
Iteration 58: Best Cost: 1.37 
Iteration 59: Best Cost: 1.37 
Iteration 60: Best Cost: 1.37 
Iteration 61: Best Cost: 1.37 
Iteration 62: Best Cost: 1.37 
Iteration 63: Best Cost: 1.37 
Iteration 64: Best Cost: 1.37 
Iteration 65: Best Cost: 1.37 
Iteration 66: Best Cost: 1.37 
Iteration 67: Best Cost: 1.37 
Iteration 68: Best Cost: 1.37 
Iteration 69: Best Cost: 1.37 
Iteration 70: Best Cost: 1.37 
Iteration 71: Best Cost: 1.37 
Iteration 72: Best Cost: 1.37 
Iteration 73: Best Cost: 1.37 
Iteration 74: Best Cost: 1.37 
Iteration 75: Best Cost: 1.37 
Iteration 76: Best Cost: 1.37 
Iteration 77: Best Cost: 1.37 
Iteration 78: Best Cost: 1.37 
Iteration 79: Best Cost: 1.37 
Iteration 80: Best Cost: 1.37 
Iteration 81: Best Cost: 1.37 
Iteration 82: Best Cost: 1.37 
Iteration 83: Best Cost: 1.37 
Iteration 84: Best Cost: 1.37 
Iteration 85: Best Cost: 1.37 
Iteration 86: Best Cost: 1.37 
Iteration 87: Best Cost: 1.37 
Iteration 88: Best Cost: 1.37 
Iteration 89: Best Cost: 1.37 
Iteration 90: Best Cost: 1.37 
Iteration 91: Best Cost: 1.37 
Iteration 92: Best Cost: 1.37 
Iteration 93: Best Cost: 1.37 
Iteration 94: Best Cost: 1.37 
Iteration 95: Best Cost: 1.37 
Iteration 96: Best Cost: 1.37 
Iteration 97: Best Cost: 1.37 
Iteration 98: Best Cost: 1.37 
Iteration 99: Best Cost: 1.37 

Data fetched from CSV file
Run-time: 2504.3900060653687 seconds
Total allocated memory size: 129.7 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 98
No. of (dataset) tuples: 3943
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. nr
1. i1_legid
2. i1_rcs_p
3. i1_rcs_e
4. i1_dep_1_p
5. i1_dep_1_e
6. i1_dep_1_place
7. i1_rcf_1_p
8. i1_rcf_1_e
9. i1_rcf_1_place
10. i1_dep_2_p
11. i1_dep_2_e
12. i1_dep_2_place
13. i1_rcf_2_p
14. i1_rcf_2_e
15. i1_rcf_2_place
16. i1_dep_3_p
17. i1_dep_3_e
18. i1_dep_3_place
19. i1_rcf_3_p
20. i1_rcf_3_e
21. i1_rcf_3_place
22. i1_dlv_p
23. i1_dlv_e
24. i1_hops
25. i2_legid
26. i2_rcs_p
27. i2_rcs_e
28. i2_dep_1_p
29. i2_dep_1_e
30. i2_dep_1_place
31. i2_rcf_1_p
32. i2_rcf_1_e
33. i2_rcf_1_place
34. i2_dep_2_p
35. i2_dep_2_e
36. i2_dep_2_place
37. i2_rcf_2_p
38. i2_rcf_2_e
39. i2_rcf_2_place
40. i2_dep_3_p
41. i2_dep_3_e
42. i2_dep_3_place
43. i2_rcf_3_p
44. i2_rcf_3_e
45. i2_rcf_3_place
46. i2_dlv_p
47. i2_dlv_e
48. i2_hops
49. i3_legid
50. i3_rcs_p
51. i3_rcs_e
52. i3_dep_1_p
53. i3_dep_1_e
54. i3_dep_1_place
55. i3_rcf_1_p
56. i3_rcf_1_e
57. i3_rcf_1_place
58. i3_dep_2_p
59. i3_dep_2_e
60. i3_dep_2_place
61. i3_rcf_2_p
62. i3_rcf_2_e
63. i3_rcf_2_place
64. i3_dep_3_p
65. i3_dep_3_e
66. i3_dep_3_place
67. i3_rcf_3_p
68. i3_rcf_3_e
69. i3_rcf_3_place
70. i3_dlv_p
71. i3_dlv_e
72. i3_hops
73. o_legid
74. o_rcs_p
75. o_rcs_e
76. o_dep_1_p
77. o_dep_1_e
78. o_dep_1_place
79. o_rcf_1_p
80. o_rcf_1_e
81. o_rcf_1_place
82. o_dep_2_p
83. o_dep_2_e
84. o_dep_2_place
85. o_rcf_2_p
86. o_rcf_2_e
87. o_rcf_2_place
88. o_dep_3_p
89. o_dep_3_e
90. o_dep_3_place
91. o_rcf_3_p
92. o_rcf_3_e
93. o_rcf_3_place
94. o_dlv_p
95. o_dlv_e
96. o_hops
97. legs

File: data/c2k.csv

Pattern : Support
['2+', '3+', '5+'] : 0.5434782608695652


Iterations 
Iteration 0: Best Cost: 1.84 
Iteration 1: Best Cost: 1.84 
Iteration 2: Best Cost: 1.84 
Iteration 3: Best Cost: 1.84 
Iteration 4: Best Cost: 1.21 
Iteration 5: Best Cost: 1.21 
Iteration 6: Best Cost: 1.21 
Iteration 7: Best Cost: 1.21 
Iteration 8: Best Cost: 1.21 
Iteration 9: Best Cost: 1.21 
Iteration 10: Best Cost: 1.21 
Iteration 11: Best Cost: 1.21 
Iteration 12: Best Cost: 1.21 
Iteration 13: Best Cost: 1.21 
Iteration 14: Best Cost: 1.21 
Iteration 15: Best Cost: 1.21 
Iteration 16: Best Cost: 1.21 
Iteration 17: Best Cost: 1.21 
Iteration 18: Best Cost: 1.21 
Iteration 19: Best Cost: 1.21 
Iteration 20: Best Cost: 1.21 
Iteration 21: Best Cost: 1.21 
Iteration 22: Best Cost: 1.21 
Iteration 23: Best Cost: 1.21 
Iteration 24: Best Cost: 1.21 
Iteration 25: Best Cost: 1.21 
Iteration 26: Best Cost: 1.21 
Iteration 27: Best Cost: 1.21 
Iteration 28: Best Cost: 1.21 
Iteration 29: Best Cost: 1.21 
Iteration 30: Best Cost: 1.21 
Iteration 31: Best Cost: 1.21 
Iteration 32: Best Cost: 1.21 
Iteration 33: Best Cost: 1.21 
Iteration 34: Best Cost: 1.21 
Iteration 35: Best Cost: 1.21 
Iteration 36: Best Cost: 1.21 
Iteration 37: Best Cost: 1.21 
Iteration 38: Best Cost: 1.21 
Iteration 39: Best Cost: 1.21 
Iteration 40: Best Cost: 1.21 
Iteration 41: Best Cost: 1.21 
Iteration 42: Best Cost: 1.21 
Iteration 43: Best Cost: 1.21 
Iteration 44: Best Cost: 1.21 
Iteration 45: Best Cost: 1.21 
Iteration 46: Best Cost: 1.21 
Iteration 47: Best Cost: 1.21 
Iteration 48: Best Cost: 1.21 
Iteration 49: Best Cost: 1.21 
Iteration 50: Best Cost: 1.21 
Iteration 51: Best Cost: 1.21 
Iteration 52: Best Cost: 1.21 
Iteration 53: Best Cost: 1.21 
Iteration 54: Best Cost: 1.21 
Iteration 55: Best Cost: 1.21 
Iteration 56: Best Cost: 1.21 
Iteration 57: Best Cost: 1.21 
Iteration 58: Best Cost: 1.21 
Iteration 59: Best Cost: 1.21 
Iteration 60: Best Cost: 1.21 
Iteration 61: Best Cost: 1.21 
Iteration 62: Best Cost: 1.21 
Iteration 63: Best Cost: 1.21 
Iteration 64: Best Cost: 1.21 
Iteration 65: Best Cost: 1.21 
Iteration 66: Best Cost: 1.21 
Iteration 67: Best Cost: 1.21 
Iteration 68: Best Cost: 1.21 
Iteration 69: Best Cost: 1.21 
Iteration 70: Best Cost: 1.21 
Iteration 71: Best Cost: 1.21 
Iteration 72: Best Cost: 1.21 
Iteration 73: Best Cost: 1.21 
Iteration 74: Best Cost: 1.21 
Iteration 75: Best Cost: 1.21 
Iteration 76: Best Cost: 1.21 
Iteration 77: Best Cost: 1.21 
Iteration 78: Best Cost: 1.21 
Iteration 79: Best Cost: 1.21 
Iteration 80: Best Cost: 1.21 
Iteration 81: Best Cost: 1.21 
Iteration 82: Best Cost: 1.21 
Iteration 83: Best Cost: 1.21 
Iteration 84: Best Cost: 1.21 
Iteration 85: Best Cost: 1.21 
Iteration 86: Best Cost: 1.21 
Iteration 87: Best Cost: 1.21 
Iteration 88: Best Cost: 1.21 
Iteration 89: Best Cost: 1.21 
Iteration 90: Best Cost: 1.21 
Iteration 91: Best Cost: 1.21 
Iteration 92: Best Cost: 1.21 
Iteration 93: Best Cost: 1.21 
Iteration 94: Best Cost: 1.21 
Iteration 95: Best Cost: 1.21 
Iteration 96: Best Cost: 1.21 
Iteration 97: Best Cost: 1.21 
Iteration 98: Best Cost: 1.21 
Iteration 99: Best Cost: 1.21 

Data fetched from CSV file
Run-time: 1612.8108258247375 seconds
Total allocated memory size: 121.9 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 21
No. of (dataset) tuples: 6120
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 2
Number of iterations: 100

0. date_time
1. id_site
2. Tpic
3. Dir
4. Etal
5. Tz
6. Hm0
7. Ts1
8. Ts2
9. Tc
10. Tav
11. Tint
12. Tp
13. EPS2
14. EPS4
15. Qp
16. S2
17. Tref
18. Tw
19. Batt
20. timestamp

File: data/Directio_site6k.csv

Pattern : Support
['2-', '5-', '8-', '12-'] : 0.625
['2-', '5-', '8-', '9-'] : 0.641025641025641


Iterations 
Iteration 0: Best Cost: 1.6 
Iteration 1: Best Cost: 1.56 
Iteration 2: Best Cost: 1.56 
Iteration 3: Best Cost: 1.56 
Iteration 4: Best Cost: 1.56 
Iteration 5: Best Cost: 1.56 
Iteration 6: Best Cost: 1.56 
Iteration 7: Best Cost: 1.3 
Iteration 8: Best Cost: 1.3 
Iteration 9: Best Cost: 1.25 
Iteration 10: Best Cost: 1.25 
Iteration 11: Best Cost: 1.25 
Iteration 12: Best Cost: 1.25 
Iteration 13: Best Cost: 1.25 
Iteration 14: Best Cost: 1.25 
Iteration 15: Best Cost: 1.25 
Iteration 16: Best Cost: 1.25 
Iteration 17: Best Cost: 1.25 
Iteration 18: Best Cost: 1.25 
Iteration 19: Best Cost: 1.25 
Iteration 20: Best Cost: 1.25 
Iteration 21: Best Cost: 1.25 
Iteration 22: Best Cost: 1.25 
Iteration 23: Best Cost: 1.25 
Iteration 24: Best Cost: 1.25 
Iteration 25: Best Cost: 1.25 
Iteration 26: Best Cost: 1.25 
Iteration 27: Best Cost: 1.25 
Iteration 28: Best Cost: 1.25 
Iteration 29: Best Cost: 1.25 
Iteration 30: Best Cost: 1.25 
Iteration 31: Best Cost: 1.25 
Iteration 32: Best Cost: 1.25 
Iteration 33: Best Cost: 1.25 
Iteration 34: Best Cost: 1.25 
Iteration 35: Best Cost: 1.25 
Iteration 36: Best Cost: 1.25 
Iteration 37: Best Cost: 1.25 
Iteration 38: Best Cost: 1.25 
Iteration 39: Best Cost: 1.25 
Iteration 40: Best Cost: 1.25 
Iteration 41: Best Cost: 1.25 
Iteration 42: Best Cost: 1.25 
Iteration 43: Best Cost: 1.25 
Iteration 44: Best Cost: 1.25 
Iteration 45: Best Cost: 1.25 
Iteration 46: Best Cost: 1.25 
Iteration 47: Best Cost: 1.25 
Iteration 48: Best Cost: 1.25 
Iteration 49: Best Cost: 1.25 
Iteration 50: Best Cost: 1.25 
Iteration 51: Best Cost: 1.25 
Iteration 52: Best Cost: 1.25 
Iteration 53: Best Cost: 1.25 
Iteration 54: Best Cost: 1.25 
Iteration 55: Best Cost: 1.25 
Iteration 56: Best Cost: 1.25 
Iteration 57: Best Cost: 1.25 
Iteration 58: Best Cost: 1.25 
Iteration 59: Best Cost: 1.25 
Iteration 60: Best Cost: 1.25 
Iteration 61: Best Cost: 1.25 
Iteration 62: Best Cost: 1.25 
Iteration 63: Best Cost: 1.25 
Iteration 64: Best Cost: 1.25 
Iteration 65: Best Cost: 1.25 
Iteration 66: Best Cost: 1.25 
Iteration 67: Best Cost: 1.25 
Iteration 68: Best Cost: 1.25 
Iteration 69: Best Cost: 1.25 
Iteration 70: Best Cost: 1.25 
Iteration 71: Best Cost: 1.25 
Iteration 72: Best Cost: 1.25 
Iteration 73: Best Cost: 1.25 
Iteration 74: Best Cost: 1.25 
Iteration 75: Best Cost: 1.25 
Iteration 76: Best Cost: 1.25 
Iteration 77: Best Cost: 1.25 
Iteration 78: Best Cost: 1.25 
Iteration 79: Best Cost: 1.25 
Iteration 80: Best Cost: 1.25 
Iteration 81: Best Cost: 1.25 
Iteration 82: Best Cost: 1.25 
Iteration 83: Best Cost: 1.25 
Iteration 84: Best Cost: 1.25 
Iteration 85: Best Cost: 1.25 
Iteration 86: Best Cost: 1.25 
Iteration 87: Best Cost: 1.25 
Iteration 88: Best Cost: 1.25 
Iteration 89: Best Cost: 1.25 
Iteration 90: Best Cost: 1.25 
Iteration 91: Best Cost: 1.25 
Iteration 92: Best Cost: 1.25 
Iteration 93: Best Cost: 1.25 
Iteration 94: Best Cost: 1.25 
Iteration 95: Best Cost: 1.25 
Iteration 96: Best Cost: 1.25 
Iteration 97: Best Cost: 1.25 
Iteration 98: Best Cost: 1.25 
Iteration 99: Best Cost: 1.25 

Data fetched from CSV file
Run-time: 3580.022768497467 seconds
Total allocated memory size: 111.6 KiB
Algorithm: GA-GRAANK (v1.0)
No. of (dataset) attributes: 9
No. of (dataset) tuples: 19443
Population size: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 1
Number of iterations: 100

0. Date
1. Time
2. Global_active_power
3. Global_reactive_power
4. Voltage
5. Global_intensity
6. Sub_metering_1
7. Sub_metering_2
8. Sub_metering_3

File: data/UCI_household_power_consumption19k.csv

Pattern : Support
['2+', '5+'] : 0.970873786407767


Iterations 
Iteration 0: Best Cost: 1.03 
Iteration 1: Best Cost: 1.03 
Iteration 2: Best Cost: 1.03 
Iteration 3: Best Cost: 1.03 
Iteration 4: Best Cost: 1.03 
Iteration 5: Best Cost: 1.03 
Iteration 6: Best Cost: 1.03 
Iteration 7: Best Cost: 1.03 
Iteration 8: Best Cost: 1.03 
Iteration 9: Best Cost: 1.03 
Iteration 10: Best Cost: 1.03 
Iteration 11: Best Cost: 1.03 
Iteration 12: Best Cost: 1.03 
Iteration 13: Best Cost: 1.03 
Iteration 14: Best Cost: 1.03 
Iteration 15: Best Cost: 1.03 
Iteration 16: Best Cost: 1.03 
Iteration 17: Best Cost: 1.03 
Iteration 18: Best Cost: 1.03 
Iteration 19: Best Cost: 1.03 
Iteration 20: Best Cost: 1.03 
Iteration 21: Best Cost: 1.03 
Iteration 22: Best Cost: 1.03 
Iteration 23: Best Cost: 1.03 
Iteration 24: Best Cost: 1.03 
Iteration 25: Best Cost: 1.03 
Iteration 26: Best Cost: 1.03 
Iteration 27: Best Cost: 1.03 
Iteration 28: Best Cost: 1.03 
Iteration 29: Best Cost: 1.03 
Iteration 30: Best Cost: 1.03 
Iteration 31: Best Cost: 1.03 
Iteration 32: Best Cost: 1.03 
Iteration 33: Best Cost: 1.03 
Iteration 34: Best Cost: 1.03 
Iteration 35: Best Cost: 1.03 
Iteration 36: Best Cost: 1.03 
Iteration 37: Best Cost: 1.03 
Iteration 38: Best Cost: 1.03 
Iteration 39: Best Cost: 1.03 
Iteration 40: Best Cost: 1.03 
Iteration 41: Best Cost: 1.03 
Iteration 42: Best Cost: 1.03 
Iteration 43: Best Cost: 1.03 
Iteration 44: Best Cost: 1.03 
Iteration 45: Best Cost: 1.03 
Iteration 46: Best Cost: 1.03 
Iteration 47: Best Cost: 1.03 
Iteration 48: Best Cost: 1.03 
Iteration 49: Best Cost: 1.03 
Iteration 50: Best Cost: 1.03 
Iteration 51: Best Cost: 1.03 
Iteration 52: Best Cost: 1.03 
Iteration 53: Best Cost: 1.03 
Iteration 54: Best Cost: 1.03 
Iteration 55: Best Cost: 1.03 
Iteration 56: Best Cost: 1.03 
Iteration 57: Best Cost: 1.03 
Iteration 58: Best Cost: 1.03 
Iteration 59: Best Cost: 1.03 
Iteration 60: Best Cost: 1.03 
Iteration 61: Best Cost: 1.03 
Iteration 62: Best Cost: 1.03 
Iteration 63: Best Cost: 1.03 
Iteration 64: Best Cost: 1.03 
Iteration 65: Best Cost: 1.03 
Iteration 66: Best Cost: 1.03 
Iteration 67: Best Cost: 1.03 
Iteration 68: Best Cost: 1.03 
Iteration 69: Best Cost: 1.03 
Iteration 70: Best Cost: 1.03 
Iteration 71: Best Cost: 1.03 
Iteration 72: Best Cost: 1.03 
Iteration 73: Best Cost: 1.03 
Iteration 74: Best Cost: 1.03 
Iteration 75: Best Cost: 1.03 
Iteration 76: Best Cost: 1.03 
Iteration 77: Best Cost: 1.03 
Iteration 78: Best Cost: 1.03 
Iteration 79: Best Cost: 1.03 
Iteration 80: Best Cost: 1.03 
Iteration 81: Best Cost: 1.03 
Iteration 82: Best Cost: 1.03 
Iteration 83: Best Cost: 1.03 
Iteration 84: Best Cost: 1.03 
Iteration 85: Best Cost: 1.03 
Iteration 86: Best Cost: 1.03 
Iteration 87: Best Cost: 1.03 
Iteration 88: Best Cost: 1.03 
Iteration 89: Best Cost: 1.03 
Iteration 90: Best Cost: 1.03 
Iteration 91: Best Cost: 1.03 
Iteration 92: Best Cost: 1.03 
Iteration 93: Best Cost: 1.03 
Iteration 94: Best Cost: 1.03 
Iteration 95: Best Cost: 1.03 
Iteration 96: Best Cost: 1.03 
Iteration 97: Best Cost: 1.03 
Iteration 98: Best Cost: 1.03 
Iteration 99: Best Cost: 1.03 

Data fetched from CSV file
Run-time: 0.6155977249145508 seconds
Total allocated memory size: 86.0 KiB
Algorithm: PSO-GRAANK (v1.0)
No. of (dataset) attributes: 10
No. of (dataset) tuples: 116
Velocity coeff.: 0.5
C1 coeff.: 0.1
C2 coeff.: 0.5
No. of particles: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 3
Number of iterations: 100

0. Age
1. BMI
2. Glucose
3. Insulin
4. HOMA
5. Leptin
6. Adiponectin
7. Resistin
8. MCP.1
9. Classification

File: data/breast_cancer.csv

Pattern : Support
['0+', '2+'] : 0.5434782608695652
['5+', '7+'] : 0.5494505494505494
['7+', '8+'] : 0.6711409395973155


Iterations 
Iteration 0: Best Position: 1.84 
Iteration 1: Best Position: 1.82 
Iteration 2: Best Position: 1.49 
Iteration 3: Best Position: 1.49 
Iteration 4: Best Position: 1.49 
Iteration 5: Best Position: 1.49 
Iteration 6: Best Position: 1.49 
Iteration 7: Best Position: 1.49 
Iteration 8: Best Position: 1.49 
Iteration 9: Best Position: 1.49 
Iteration 10: Best Position: 1.49 
Iteration 11: Best Position: 1.49 
Iteration 12: Best Position: 1.49 
Iteration 13: Best Position: 1.49 
Iteration 14: Best Position: 1.49 
Iteration 15: Best Position: 1.49 
Iteration 16: Best Position: 1.49 
Iteration 17: Best Position: 1.49 
Iteration 18: Best Position: 1.49 
Iteration 19: Best Position: 1.49 
Iteration 20: Best Position: 1.49 
Iteration 21: Best Position: 1.49 
Iteration 22: Best Position: 1.49 
Iteration 23: Best Position: 1.49 
Iteration 24: Best Position: 1.49 
Iteration 25: Best Position: 1.49 
Iteration 26: Best Position: 1.49 
Iteration 27: Best Position: 1.49 
Iteration 28: Best Position: 1.49 
Iteration 29: Best Position: 1.49 
Iteration 30: Best Position: 1.49 
Iteration 31: Best Position: 1.49 
Iteration 32: Best Position: 1.49 
Iteration 33: Best Position: 1.49 
Iteration 34: Best Position: 1.49 
Iteration 35: Best Position: 1.49 
Iteration 36: Best Position: 1.49 
Iteration 37: Best Position: 1.49 
Iteration 38: Best Position: 1.49 
Iteration 39: Best Position: 1.49 
Iteration 40: Best Position: 1.49 
Iteration 41: Best Position: 1.49 
Iteration 42: Best Position: 1.49 
Iteration 43: Best Position: 1.49 
Iteration 44: Best Position: 1.49 
Iteration 45: Best Position: 1.49 
Iteration 46: Best Position: 1.49 
Iteration 47: Best Position: 1.49 
Iteration 48: Best Position: 1.49 
Iteration 49: Best Position: 1.49 
Iteration 50: Best Position: 1.49 
Iteration 51: Best Position: 1.49 
Iteration 52: Best Position: 1.49 
Iteration 53: Best Position: 1.49 
Iteration 54: Best Position: 1.49 
Iteration 55: Best Position: 1.49 
Iteration 56: Best Position: 1.49 
Iteration 57: Best Position: 1.49 
Iteration 58: Best Position: 1.49 
Iteration 59: Best Position: 1.49 
Iteration 60: Best Position: 1.49 
Iteration 61: Best Position: 1.49 
Iteration 62: Best Position: 1.49 
Iteration 63: Best Position: 1.49 
Iteration 64: Best Position: 1.49 
Iteration 65: Best Position: 1.49 
Iteration 66: Best Position: 1.49 
Iteration 67: Best Position: 1.49 
Iteration 68: Best Position: 1.49 
Iteration 69: Best Position: 1.49 
Iteration 70: Best Position: 1.49 
Iteration 71: Best Position: 1.49 
Iteration 72: Best Position: 1.49 
Iteration 73: Best Position: 1.49 
Iteration 74: Best Position: 1.49 
Iteration 75: Best Position: 1.49 
Iteration 76: Best Position: 1.49 
Iteration 77: Best Position: 1.49 
Iteration 78: Best Position: 1.49 
Iteration 79: Best Position: 1.49 
Iteration 80: Best Position: 1.49 
Iteration 81: Best Position: 1.49 
Iteration 82: Best Position: 1.49 
Iteration 83: Best Position: 1.49 
Iteration 84: Best Position: 1.49 
Iteration 85: Best Position: 1.49 
Iteration 86: Best Position: 1.49 
Iteration 87: Best Position: 1.49 
Iteration 88: Best Position: 1.49 
Iteration 89: Best Position: 1.49 
Iteration 90: Best Position: 1.49 
Iteration 91: Best Position: 1.49 
Iteration 92: Best Position: 1.49 
Iteration 93: Best Position: 1.49 
Iteration 94: Best Position: 1.49 
Iteration 95: Best Position: 1.49 
Iteration 96: Best Position: 1.49 
Iteration 97: Best Position: 1.49 
Iteration 98: Best Position: 1.49 
Iteration 99: Best Position: 1.49 

Data fetched from CSV file
Run-time: 739.2461550235748 seconds
Total allocated memory size: 116.6 KiB
Algorithm: PSO-GRAANK (v1.0)
No. of (dataset) attributes: 98
No. of (dataset) tuples: 3943
Velocity coeff.: 0.5
C1 coeff.: 0.1
C2 coeff.: 0.5
No. of particles: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 3
Number of iterations: 100

0. nr
1. i1_legid
2. i1_rcs_p
3. i1_rcs_e
4. i1_dep_1_p
5. i1_dep_1_e
6. i1_dep_1_place
7. i1_rcf_1_p
8. i1_rcf_1_e
9. i1_rcf_1_place
10. i1_dep_2_p
11. i1_dep_2_e
12. i1_dep_2_place
13. i1_rcf_2_p
14. i1_rcf_2_e
15. i1_rcf_2_place
16. i1_dep_3_p
17. i1_dep_3_e
18. i1_dep_3_place
19. i1_rcf_3_p
20. i1_rcf_3_e
21. i1_rcf_3_place
22. i1_dlv_p
23. i1_dlv_e
24. i1_hops
25. i2_legid
26. i2_rcs_p
27. i2_rcs_e
28. i2_dep_1_p
29. i2_dep_1_e
30. i2_dep_1_place
31. i2_rcf_1_p
32. i2_rcf_1_e
33. i2_rcf_1_place
34. i2_dep_2_p
35. i2_dep_2_e
36. i2_dep_2_place
37. i2_rcf_2_p
38. i2_rcf_2_e
39. i2_rcf_2_place
40. i2_dep_3_p
41. i2_dep_3_e
42. i2_dep_3_place
43. i2_rcf_3_p
44. i2_rcf_3_e
45. i2_rcf_3_place
46. i2_dlv_p
47. i2_dlv_e
48. i2_hops
49. i3_legid
50. i3_rcs_p
51. i3_rcs_e
52. i3_dep_1_p
53. i3_dep_1_e
54. i3_dep_1_place
55. i3_rcf_1_p
56. i3_rcf_1_e
57. i3_rcf_1_place
58. i3_dep_2_p
59. i3_dep_2_e
60. i3_dep_2_place
61. i3_rcf_2_p
62. i3_rcf_2_e
63. i3_rcf_2_place
64. i3_dep_3_p
65. i3_dep_3_e
66. i3_dep_3_place
67. i3_rcf_3_p
68. i3_rcf_3_e
69. i3_rcf_3_place
70. i3_dlv_p
71. i3_dlv_e
72. i3_hops
73. o_legid
74. o_rcs_p
75. o_rcs_e
76. o_dep_1_p
77. o_dep_1_e
78. o_dep_1_place
79. o_rcf_1_p
80. o_rcf_1_e
81. o_rcf_1_place
82. o_dep_2_p
83. o_dep_2_e
84. o_dep_2_place
85. o_rcf_2_p
86. o_rcf_2_e
87. o_rcf_2_place
88. o_dep_3_p
89. o_dep_3_e
90. o_dep_3_place
91. o_rcf_3_p
92. o_rcf_3_e
93. o_rcf_3_place
94. o_dlv_p
95. o_dlv_e
96. o_hops
97. legs

File: data/c2k.csv

Pattern : Support
['0+', '74+'] : 0.5319148936170213
['25-', '27-'] : 0.6711409395973155
['27-', '47-'] : 0.684931506849315


Iterations 
Iteration 0: Best Position: 1.88 
Iteration 1: Best Position: 1.49 
Iteration 2: Best Position: 1.46 
Iteration 3: Best Position: 1.46 
Iteration 4: Best Position: 1.46 
Iteration 5: Best Position: 1.46 
Iteration 6: Best Position: 1.46 
Iteration 7: Best Position: 1.46 
Iteration 8: Best Position: 1.46 
Iteration 9: Best Position: 1.46 
Iteration 10: Best Position: 1.46 
Iteration 11: Best Position: 1.46 
Iteration 12: Best Position: 1.46 
Iteration 13: Best Position: 1.46 
Iteration 14: Best Position: 1.46 
Iteration 15: Best Position: 1.46 
Iteration 16: Best Position: 1.46 
Iteration 17: Best Position: 1.46 
Iteration 18: Best Position: 1.46 
Iteration 19: Best Position: 1.46 
Iteration 20: Best Position: 1.46 
Iteration 21: Best Position: 1.46 
Iteration 22: Best Position: 1.46 
Iteration 23: Best Position: 1.46 
Iteration 24: Best Position: 1.46 
Iteration 25: Best Position: 1.46 
Iteration 26: Best Position: 1.46 
Iteration 27: Best Position: 1.46 
Iteration 28: Best Position: 1.46 
Iteration 29: Best Position: 1.46 
Iteration 30: Best Position: 1.46 
Iteration 31: Best Position: 1.46 
Iteration 32: Best Position: 1.46 
Iteration 33: Best Position: 1.46 
Iteration 34: Best Position: 1.46 
Iteration 35: Best Position: 1.46 
Iteration 36: Best Position: 1.46 
Iteration 37: Best Position: 1.46 
Iteration 38: Best Position: 1.46 
Iteration 39: Best Position: 1.46 
Iteration 40: Best Position: 1.46 
Iteration 41: Best Position: 1.46 
Iteration 42: Best Position: 1.46 
Iteration 43: Best Position: 1.46 
Iteration 44: Best Position: 1.46 
Iteration 45: Best Position: 1.46 
Iteration 46: Best Position: 1.46 
Iteration 47: Best Position: 1.46 
Iteration 48: Best Position: 1.46 
Iteration 49: Best Position: 1.46 
Iteration 50: Best Position: 1.46 
Iteration 51: Best Position: 1.46 
Iteration 52: Best Position: 1.46 
Iteration 53: Best Position: 1.46 
Iteration 54: Best Position: 1.46 
Iteration 55: Best Position: 1.46 
Iteration 56: Best Position: 1.46 
Iteration 57: Best Position: 1.46 
Iteration 58: Best Position: 1.46 
Iteration 59: Best Position: 1.46 
Iteration 60: Best Position: 1.46 
Iteration 61: Best Position: 1.46 
Iteration 62: Best Position: 1.46 
Iteration 63: Best Position: 1.46 
Iteration 64: Best Position: 1.46 
Iteration 65: Best Position: 1.46 
Iteration 66: Best Position: 1.46 
Iteration 67: Best Position: 1.46 
Iteration 68: Best Position: 1.46 
Iteration 69: Best Position: 1.46 
Iteration 70: Best Position: 1.46 
Iteration 71: Best Position: 1.46 
Iteration 72: Best Position: 1.46 
Iteration 73: Best Position: 1.46 
Iteration 74: Best Position: 1.46 
Iteration 75: Best Position: 1.46 
Iteration 76: Best Position: 1.46 
Iteration 77: Best Position: 1.46 
Iteration 78: Best Position: 1.46 
Iteration 79: Best Position: 1.46 
Iteration 80: Best Position: 1.46 
Iteration 81: Best Position: 1.46 
Iteration 82: Best Position: 1.46 
Iteration 83: Best Position: 1.46 
Iteration 84: Best Position: 1.46 
Iteration 85: Best Position: 1.46 
Iteration 86: Best Position: 1.46 
Iteration 87: Best Position: 1.46 
Iteration 88: Best Position: 1.46 
Iteration 89: Best Position: 1.46 
Iteration 90: Best Position: 1.46 
Iteration 91: Best Position: 1.46 
Iteration 92: Best Position: 1.46 
Iteration 93: Best Position: 1.46 
Iteration 94: Best Position: 1.46 
Iteration 95: Best Position: 1.46 
Iteration 96: Best Position: 1.46 
Iteration 97: Best Position: 1.46 
Iteration 98: Best Position: 1.46 
Iteration 99: Best Position: 1.46 

Data fetched from CSV file
Run-time: 385.8344440460205 seconds
Total allocated memory size: 105.6 KiB
Algorithm: PSO-GRAANK (v1.0)
No. of (dataset) attributes: 21
No. of (dataset) tuples: 6120
Velocity coeff.: 0.5
C1 coeff.: 0.1
C2 coeff.: 0.5
No. of particles: 10
Minimum support: 0.5
Number of cores: 28
Number of patterns: 3
Number of iterations: 100

0. date_time
1. id_site
2. Tpic
3. Dir
4. Etal
5. Tz
6. Hm0
7. Ts1
8. Ts2
9. Tc
10. Tav
11. Tint
12. Tp
13. EPS2
14. EPS4
15. Qp
16. S2
17. Tref
18. Tw
19. Batt
20. timestamp

File: data/Directio_site6k.csv

Pattern : Support
['3+', '4-'] : 0.5813953488372093
['3+', '5-'] : 0.6666666666666666
['8+', '12+', '14+'] : 0.6993006993006994


Iterations 
Iteration 0: Best Position: 1.72 
Iteration 1: Best Position: 1.5 
Iteration 2: Best Position: 1.43 
Iteration 3: Best Position: 1.37 
Iteration 4: Best Position: 1.37 
Iteration 5: Best Position: 1.37 
Iteration 6: Best Position: 1.37 
Iteration 7: Best Position: 1.37 
Iteration 8: Best Position: 1.37 
Iteration 9: Best Position: 1.37 
Iteration 10: Best Position: 1.37 
Iteration 11: Best Position: 1.37 
Iteration 12: Best Position: 1.37 
Iteration 13: Best Position: 1.37 
Iteration 14: Best Position: 1.37 
Iteration 15: Best Position: 1.37 
Iteration 16: Best Position: 1.37 
Iteration 17: Best Position: 1.37 
Iteration 18: Best Position: 1.37 
Iteration 19: Best Position: 1.37 
Iteration 20: Best Position: 1.37 
Iteration 21: Best Position: 1.37 
Iteration 22: Best Position: 1.37 
Iteration 23: Best Position: 1.37 
Iteration 24: Best Position: 1.37 
Iteration 25: Best Position: 1.37 
Iteration 26: Best Position: 1.37 
Iteration 27: Best Position: 1.37 
Iteration 28: Best Position: 1.37 
Iteration 29: Best Position: 1.37 
Iteration 30: Best Position: 1.37 
Iteration 31: Best Position: 1.37 
Iteration 32: Best Position: 1.37 
Iteration 33: Best Position: 1.37 
Iteration 34: Best Position: 1.37 
Iteration 35: Best Position: 1.37 
Iteration 36: Best Position: 1.37 
Iteration 37: Best Position: 1.37 
Iteration 38: Best Position: 1.37 
Iteration 39: Best Position: 1.37 
Iteration 40: Best Position: 1.37 
Iteration 41: Best Position: 1.37 
Iteration 42: Best Position: 1.37 
Iteration 43: Best Position: 1.37 
Iteration 44: Best Position: 1.37 
Iteration 45: Best Position: 1.37 
Iteration 46: Best Position: 1.37 
Iteration 47: Best Position: 1.37 
Iteration 48: Best Position: 1.37 
Iteration 49: Best Position: 1.37 
Iteration 50: Best Position: 1.37 
Iteration 51: Best Position: 1.37 
Iteration 52: Best Position: 1.37 
Iteration 53: Best Position: 1.37 
Iteration 54: Best Position: 1.37 
Iteration 55: Best Position: 1.37 
Iteration 56: Best Position: 1.37 
Iteration 57: Best Position: 1.37 
Iteration 58: Best Position: 1.37 
Iteration 59: Best Position: 1.37 
Iteration 60: Best Position: 1.37 
Iteration 61: Best Position: 1.37 
Iteration 62: Best Position: 1.37 
Iteration 63: Best Position: 1.37 
Iteration 64: Best Position: 1.37 
Iteration 65: Best Position: 1.37 
Iteration 66: Best Position: 1.37 
Iteration 67: Best Position: 1.37 
Iteration 68: Best Position: 1.37 
Iteration 69: Best Position: 1.37 
Iteration 70: Best Position: 1.37 
Iteration 71: Best Position: 1.37 
Iteration 72: Best Position: 1.37 
Iteration 73: Best Position: 1.37 
Iteration 74: Best Position: 1.37 
Iteration 75: Best Position: 1.37 
Iteration 76: Best Position: 1.37 
Iteration 77: Best Position: 1.37 
Iteration 78: Best Position: 1.37 
Iteration 79: Best Position: 1.37 
Iteration 80: Best Position: 1.37 
Iteration 81: Best Position: 1.37 
Iteration 82: Best Position: 1.37 
Iteration 83: Best Position: 1.37 
Iteration 84: Best Position: 1.37 
Iteration 85: Best Position: 1.37 
Iteration 86: Best Position: 1.37 
Iteration 87: Best Position: 1.37 
Iteration 88: Best Position: 1.37 
Iteration 89: Best Position: 1.37 
Iteration 90: Best Position: 1.37 
Iteration 91: Best Position: 1.37 
Iteration 92: Best Position: 1.37 
Iteration 93: Best Position: 1.37 
Iteration 94: Best Position: 1.37 
Iteration 95: Best Position: 1.37 
Iteration 96: Best Position: 1.37 
Iteration 97: Best Position: 1.37 
Iteration 98: Best Position: 1.37 
Iteration 99: Best Position: 1.37 

